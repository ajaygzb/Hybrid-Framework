<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="236" failed="5" total="317" passed="76">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="45872070" started-at="2018-05-09T15:30:44Z" finished-at="2018-05-10T04:15:16Z">
    <groups>
    </groups>
    <test name="Testchrome" duration-ms="45872070" started-at="2018-05-09T15:30:44Z" finished-at="2018-05-10T04:15:16Z">
      <class name="com.bms.M13.Task.TestEditGlobaltask">
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestEditGlobaltask@3c0f93f1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M13.Task.TestEditGlobaltask@3c0f93f1]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="MakeGlobaltaskIsUnavailable()[pri:1, instance:com.bms.M13.Task.TestEditGlobaltask@3c0f93f1]" name="MakeGlobaltaskIsUnavailable" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MakeGlobaltaskIsUnavailable -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestEditGlobaltask@3c0f93f1]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="MakeGlobaltaskIsAvailable()[pri:0, instance:com.bms.M13.Task.TestEditGlobaltask@3c0f93f1]" name="MakeGlobaltaskIsAvailable" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M13.Task.TestEditGlobaltask.MakeGlobaltaskIsUnavailable" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestEditGlobaltask.MakeGlobaltaskIsAvailable()[pri:0, instance:com.bms.M13.Task.TestEditGlobaltask@3c0f93f1] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestEditGlobaltask.MakeGlobaltaskIsAvailable()[pri:0, instance:com.bms.M13.Task.TestEditGlobaltask@3c0f93f1] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MakeGlobaltaskIsAvailable -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M13.Task.TestEditGlobaltask@3c0f93f1]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M13.Task.TestEditGlobaltask -->
      <class name="com.bms.M6.Scheduler.TestProvierHomePage">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="setup" is-config="true" duration-ms="4645" started-at="2018-05-10T03:56:38Z" finished-at="2018-05-10T03:56:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="setup" is-config="true" duration-ms="31254" started-at="2018-05-10T03:56:42Z" finished-at="2018-05-10T03:57:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProvierHomePage.testcancelcreatenoteoption()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testcancelcreatenoteoption()[pri:1, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="testcancelcreatenoteoption" duration-ms="90851" started-at="2018-05-10T03:57:14Z" finished-at="2018-05-10T03:58:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testcancelcreatenoteoption -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="afterMethod" is-config="true" duration-ms="176" started-at="2018-05-10T03:58:45Z" finished-at="2018-05-10T03:58:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testcancelcreatenoteoption status=SUCCESS method=TestProvierHomePage.testcancelcreatenoteoption()[pri:1, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="setup" is-config="true" duration-ms="20280" started-at="2018-05-10T03:58:45Z" finished-at="2018-05-10T03:59:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProvierHomePage.testNoShowcreatenoteoption()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testNoShowcreatenoteoption()[pri:2, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="testNoShowcreatenoteoption" duration-ms="91475" started-at="2018-05-10T03:59:05Z" finished-at="2018-05-10T04:00:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testNoShowcreatenoteoption -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="afterMethod" is-config="true" duration-ms="186" started-at="2018-05-10T04:00:36Z" finished-at="2018-05-10T04:00:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testNoShowcreatenoteoption status=SUCCESS method=TestProvierHomePage.testNoShowcreatenoteoption()[pri:2, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="setup" is-config="true" duration-ms="21909" started-at="2018-05-10T04:00:37Z" finished-at="2018-05-10T04:00:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeNoShowAppointmnet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testProviderHomeNoShowAppointmnet()[pri:3, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="testProviderHomeNoShowAppointmnet" duration-ms="84067" started-at="2018-05-10T04:00:59Z" finished-at="2018-05-10T04:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProviderHomeNoShowAppointmnet -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="afterMethod" is-config="true" duration-ms="179" started-at="2018-05-10T04:02:23Z" finished-at="2018-05-10T04:02:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProviderHomeNoShowAppointmnet status=SUCCESS method=TestProvierHomePage.testProviderHomeNoShowAppointmnet()[pri:3, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="setup" is-config="true" duration-ms="19088" started-at="2018-05-10T04:02:23Z" finished-at="2018-05-10T04:02:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomecancelAppointmnet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testProviderHomecancelAppointmnet()[pri:4, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="testProviderHomecancelAppointmnet" duration-ms="93202" started-at="2018-05-10T04:02:42Z" finished-at="2018-05-10T04:04:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProviderHomecancelAppointmnet -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="afterMethod" is-config="true" duration-ms="228" started-at="2018-05-10T04:04:15Z" finished-at="2018-05-10T04:04:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProviderHomecancelAppointmnet status=SUCCESS method=TestProvierHomePage.testProviderHomecancelAppointmnet()[pri:4, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="setup" is-config="true" duration-ms="20847" started-at="2018-05-10T04:04:15Z" finished-at="2018-05-10T04:04:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeRescheduleAppointmnet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testProviderHomeRescheduleAppointmnet()[pri:5, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="testProviderHomeRescheduleAppointmnet" duration-ms="86187" started-at="2018-05-10T04:04:36Z" finished-at="2018-05-10T04:06:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProviderHomeRescheduleAppointmnet -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="afterMethod" is-config="true" duration-ms="250" started-at="2018-05-10T04:06:02Z" finished-at="2018-05-10T04:06:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProviderHomeRescheduleAppointmnet status=SUCCESS method=TestProvierHomePage.testProviderHomeRescheduleAppointmnet()[pri:5, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="setup" is-config="true" duration-ms="22631" started-at="2018-05-10T04:06:03Z" finished-at="2018-05-10T04:06:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeVoidAppointmnet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testProviderHomeVoidAppointmnet()[pri:6, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="testProviderHomeVoidAppointmnet" duration-ms="61905" started-at="2018-05-10T04:06:25Z" finished-at="2018-05-10T04:07:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.AssertionError: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='resourceCode_listbox']//li[contains(.,'Massage')]"}
  (Session info: chrome=54.0.2840.71)
  (Driver info: chromedriver=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 32 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir5464_12388}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 532be93099bdd476050de5ba55e3d95a
*** Element info: {Using=xpath, value=//*[@id='resourceCode_listbox']//li[contains(.,'Massage')]}
	at sun.reflect.GeneratedConstructorAccessor10.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:500)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at UIMap.SchedulerPage.ResourceField(SchedulerPage.java:438)
	at Utils.AddScheduleUtils.addVoidAppointmnet(AddScheduleUtils.java:1760)
	at com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeVoidAppointmnet(TestProvierHomePage.java:388)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at UIMap.SchedulerPage.ResourceField(SchedulerPage.java:442)
	at Utils.AddScheduleUtils.addVoidAppointmnet(AddScheduleUtils.java:1760)
	at com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeVoidAppointmnet(TestProvierHomePage.java:388)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.AssertionError: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='resourceCode_listbox']//li[contains(.,'Massage')]"}
  (Session info: chrome=54.0.2840.71)
  (Driver info: chromedriver=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 32 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir5464_12388}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 532be93099bdd476050de5ba55e3d95a
*** Element info: {Using=xpath, value=//*[@id='resourceCode_listbox']//li[contains(.,'Massage')]}
	at sun.reflect.GeneratedConstructorAccessor10.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:500)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at UIMap.SchedulerPage.ResourceField(SchedulerPage.java:438)
	at Utils.AddScheduleUtils.addVoidAppointmnet(AddScheduleUtils.java:1760)
	at com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeVoidAppointmnet(TestProvierHomePage.java:388)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at UIMap.SchedulerPage.ResourceField(SchedulerPage.java:442)
	at Utils.AddScheduleUtils.addVoidAppointmnet(AddScheduleUtils.java:1760)
	at com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeVoidAppointmnet(TestProvierHomePage.java:388)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeVoidAppointmnet(TestProvierHomePage.java:411)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProviderHomeVoidAppointmnet -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="afterMethod" is-config="true" duration-ms="148" started-at="2018-05-10T04:07:27Z" finished-at="2018-05-10T04:07:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProviderHomeVoidAppointmnet status=SKIP method=TestProvierHomePage.testProviderHomeVoidAppointmnet()[pri:6, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="setup" is-config="true" duration-ms="18618" started-at="2018-05-10T04:07:27Z" finished-at="2018-05-10T04:07:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeVoidAppointmnet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="testProviderHomeVoidAppointmnet()[pri:6, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="testProviderHomeVoidAppointmnet" duration-ms="56997" started-at="2018-05-10T04:07:46Z" finished-at="2018-05-10T04:08:43Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.AssertionError: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='resourceCode_listbox']//li[contains(.,'Massage')]"}
  (Session info: chrome=54.0.2840.71)
  (Driver info: chromedriver=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 15 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir5464_12388}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 532be93099bdd476050de5ba55e3d95a
*** Element info: {Using=xpath, value=//*[@id='resourceCode_listbox']//li[contains(.,'Massage')]}
	at sun.reflect.GeneratedConstructorAccessor10.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:500)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at UIMap.SchedulerPage.ResourceField(SchedulerPage.java:438)
	at Utils.AddScheduleUtils.addVoidAppointmnet(AddScheduleUtils.java:1760)
	at com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeVoidAppointmnet(TestProvierHomePage.java:388)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at UIMap.SchedulerPage.ResourceField(SchedulerPage.java:442)
	at Utils.AddScheduleUtils.addVoidAppointmnet(AddScheduleUtils.java:1760)
	at com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeVoidAppointmnet(TestProvierHomePage.java:388)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.AssertionError: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='resourceCode_listbox']//li[contains(.,'Massage')]"}
  (Session info: chrome=54.0.2840.71)
  (Driver info: chromedriver=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 15 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir5464_12388}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 532be93099bdd476050de5ba55e3d95a
*** Element info: {Using=xpath, value=//*[@id='resourceCode_listbox']//li[contains(.,'Massage')]}
	at sun.reflect.GeneratedConstructorAccessor10.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:500)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at UIMap.SchedulerPage.ResourceField(SchedulerPage.java:438)
	at Utils.AddScheduleUtils.addVoidAppointmnet(AddScheduleUtils.java:1760)
	at com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeVoidAppointmnet(TestProvierHomePage.java:388)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at UIMap.SchedulerPage.ResourceField(SchedulerPage.java:442)
	at Utils.AddScheduleUtils.addVoidAppointmnet(AddScheduleUtils.java:1760)
	at com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeVoidAppointmnet(TestProvierHomePage.java:388)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeVoidAppointmnet(TestProvierHomePage.java:411)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProviderHomeVoidAppointmnet -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="afterMethod" is-config="true" duration-ms="172" started-at="2018-05-10T04:08:43Z" finished-at="2018-05-10T04:08:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProviderHomeVoidAppointmnet status=FAILURE method=TestProvierHomePage.testProviderHomeVoidAppointmnet()[pri:6, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="setup" is-config="true" duration-ms="19148" started-at="2018-05-10T04:08:43Z" finished-at="2018-05-10T04:09:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeArrivedAppointmnet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testProviderHomeArrivedAppointmnet()[pri:7, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="testProviderHomeArrivedAppointmnet" duration-ms="77277" started-at="2018-05-10T04:09:02Z" finished-at="2018-05-10T04:10:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProviderHomeArrivedAppointmnet -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="afterMethod" is-config="true" duration-ms="195" started-at="2018-05-10T04:10:20Z" finished-at="2018-05-10T04:10:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProviderHomeArrivedAppointmnet status=SUCCESS method=TestProvierHomePage.testProviderHomeArrivedAppointmnet()[pri:7, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="setup" is-config="true" duration-ms="23448" started-at="2018-05-10T04:10:20Z" finished-at="2018-05-10T04:10:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomeScheduleAppointmnet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testProviderHomeScheduleAppointmnet()[pri:8, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="testProviderHomeScheduleAppointmnet" duration-ms="70198" started-at="2018-05-10T04:10:43Z" finished-at="2018-05-10T04:11:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProviderHomeScheduleAppointmnet -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="afterMethod" is-config="true" duration-ms="178" started-at="2018-05-10T04:11:54Z" finished-at="2018-05-10T04:11:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProviderHomeScheduleAppointmnet status=SUCCESS method=TestProvierHomePage.testProviderHomeScheduleAppointmnet()[pri:8, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="setup" is-config="true" duration-ms="16410" started-at="2018-05-10T04:11:54Z" finished-at="2018-05-10T04:12:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProvierHomePage.testProviderhomepagedisplayasBMSuserforcompanythatisNOTsetasdefault()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testProviderhomepagedisplayasBMSuserforcompanythatisNOTsetasdefault()[pri:9, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="testProviderhomepagedisplayasBMSuserforcompanythatisNOTsetasdefault" duration-ms="159067" started-at="2018-05-10T04:12:10Z" finished-at="2018-05-10T04:14:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProviderhomepagedisplayasBMSuserforcompanythatisNOTsetasdefault -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="afterMethod" is-config="true" duration-ms="249" started-at="2018-05-10T04:14:49Z" finished-at="2018-05-10T04:14:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProviderhomepagedisplayasBMSuserforcompanythatisNOTsetasdefault status=SUCCESS method=TestProvierHomePage.testProviderhomepagedisplayasBMSuserforcompanythatisNOTsetasdefault()[pri:9, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="setup" is-config="true" duration-ms="16513" started-at="2018-05-10T04:14:49Z" finished-at="2018-05-10T04:15:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProvierHomePage.testProviderHomePageAuthorizedVisitsRemainingvalidation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testProviderHomePageAuthorizedVisitsRemainingvalidation()[pri:10, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="testProviderHomePageAuthorizedVisitsRemainingvalidation" duration-ms="254225" started-at="2018-05-10T04:15:06Z" finished-at="2018-05-10T04:19:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProviderHomePageAuthorizedVisitsRemainingvalidation -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="afterMethod" is-config="true" duration-ms="179" started-at="2018-05-10T04:19:20Z" finished-at="2018-05-10T04:19:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProviderHomePageAuthorizedVisitsRemainingvalidation status=SUCCESS method=TestProvierHomePage.testProviderHomePageAuthorizedVisitsRemainingvalidation()[pri:10, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="setup" is-config="true" duration-ms="18632" started-at="2018-05-10T04:19:20Z" finished-at="2018-05-10T04:19:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProvierHomePage.testrescheduledcreatenoteoption()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testrescheduledcreatenoteoption()[pri:11, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="testrescheduledcreatenoteoption" duration-ms="93368" started-at="2018-05-10T04:19:39Z" finished-at="2018-05-10T04:21:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testrescheduledcreatenoteoption -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="afterMethod" is-config="true" duration-ms="200" started-at="2018-05-10T04:21:12Z" finished-at="2018-05-10T04:21:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testrescheduledcreatenoteoption status=SUCCESS method=TestProvierHomePage.testrescheduledcreatenoteoption()[pri:11, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M6.Scheduler.TestProvierHomePage@57baeedf]" name="closedrivers" is-config="true" duration-ms="5199" started-at="2018-05-10T04:21:13Z" finished-at="2018-05-10T04:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M6.Scheduler.TestProvierHomePage -->
      <class name="com.bms.M9.AddCharges.TestValidateErrorMessageAddCharges">
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestValidateErrorMessageAddCharges@1ce92674]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestValidateErrorMessageAddCharges@1ce92674]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestValidateErrorMessageAddCharges@1ce92674]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="ValidateMandatoryFieldsAddCharges()[pri:1, instance:com.bms.M9.AddCharges.TestValidateErrorMessageAddCharges@1ce92674]" name="ValidateMandatoryFieldsAddCharges" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateMandatoryFieldsAddCharges -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestValidateErrorMessageAddCharges@1ce92674]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M9.AddCharges.TestValidateErrorMessageAddCharges -->
      <class name="com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView@2ac273d3]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView@2ac273d3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView@2ac273d3]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView@2ac273d3]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestCancelationOnPracticeView()[pri:1, instance:com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView@2ac273d3]" name="TestCancelationOnPracticeView" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCancelationOnPracticeView -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView@2ac273d3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestNoShowOnPracticeView()[pri:2, instance:com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView@2ac273d3]" name="TestNoShowOnPracticeView" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNoShowOnPracticeView -->
        <test-method status="SKIP" signature="TestGroupAppointmnetOnPracticeView()[pri:3, instance:com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView@2ac273d3]" name="TestGroupAppointmnetOnPracticeView" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestGroupAppointmnetOnPracticeView -->
        <test-method status="SKIP" signature="TestArrivalAppointmnetOnPracticeView()[pri:4, instance:com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView@2ac273d3]" name="TestArrivalAppointmnetOnPracticeView" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestArrivalAppointmnetOnPracticeView -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView@2ac273d3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView@2ac273d3]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView@2ac273d3]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView@2ac273d3]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView@2ac273d3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M15.ArrivalAlert.TestDifferentTypeOfAppointmentsOnPracticeView -->
      <class name="com.bms.M8.FLR.TestFLR10THVisitPromtAllNotesFinalized">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M8.FLR.TestFLR10THVisitPromtAllNotesFinalized@553f17c]" name="setup" is-config="true" duration-ms="5014" started-at="2018-05-10T08:58:31Z" finished-at="2018-05-10T08:58:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M8.FLR.TestFLR10THVisitPromtAllNotesFinalized@553f17c]" name="setup" is-config="true" duration-ms="31091" started-at="2018-05-10T08:58:36Z" finished-at="2018-05-10T08:59:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M8.FLR.TestFLR10THVisitPromtAllNotesFinalized.FLR10thVisitValidateHardStopmessage() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="FLR10thVisitValidateHardStopmessage()[pri:1, instance:com.bms.M8.FLR.TestFLR10THVisitPromtAllNotesFinalized@553f17c]" name="FLR10thVisitValidateHardStopmessage" duration-ms="1557279" started-at="2018-05-10T08:59:07Z" finished-at="2018-05-10T09:25:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FLR10thVisitValidateHardStopmessage -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M8.FLR.TestFLR10THVisitPromtAllNotesFinalized@553f17c]" name="afterMethod" is-config="true" duration-ms="357" started-at="2018-05-10T09:25:04Z" finished-at="2018-05-10T09:25:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FLR10thVisitValidateHardStopmessage status=SUCCESS method=TestFLR10THVisitPromtAllNotesFinalized.FLR10thVisitValidateHardStopmessage()[pri:1, instance:com.bms.M8.FLR.TestFLR10THVisitPromtAllNotesFinalized@553f17c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M8.FLR.TestFLR10THVisitPromtAllNotesFinalized@553f17c]" name="closedrivers" is-config="true" duration-ms="6154" started-at="2018-05-10T09:25:05Z" finished-at="2018-05-10T09:25:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M8.FLR.TestFLR10THVisitPromtAllNotesFinalized -->
      <class name="com.bms.M5.Notes.TestCreateNote">
        <test-method status="SKIP" signature="ValidateNonVisitTypeDDL()[pri:2, instance:com.bms.M5.Notes.TestCreateNote@185d8b6]" name="ValidateNonVisitTypeDDL" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateNonVisitTypeDDL -->
        <test-method status="SKIP" signature="SubsequentNoteVisitTypeDDL()[pri:3, instance:com.bms.M5.Notes.TestCreateNote@185d8b6]" name="SubsequentNoteVisitTypeDDL" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubsequentNoteVisitTypeDDL -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M5.Notes.TestCreateNote@185d8b6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M5.Notes.TestCreateNote@185d8b6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M5.Notes.TestCreateNote@185d8b6]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M5.Notes.TestCreateNote@185d8b6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M5.Notes.TestCreateNote@185d8b6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="ValidateVisitTypeDDL()[pri:1, instance:com.bms.M5.Notes.TestCreateNote@185d8b6]" name="ValidateVisitTypeDDL" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateVisitTypeDDL -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M5.Notes.TestCreateNote@185d8b6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M5.Notes.TestCreateNote@185d8b6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M5.Notes.TestCreateNote@185d8b6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M5.Notes.TestCreateNote -->
      <class name="com.bms.M11.EMR.TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked">
        <test-method status="SKIP" signature="DONOTAlowTreatingProvideToFinalizeVisitNotes()[pri:1, instance:com.bms.M11.EMR.TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@55d56113]" name="DONOTAlowTreatingProvideToFinalizeVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DONOTAlowTreatingProvideToFinalizeVisitNotes -->
        <test-method status="SKIP" signature="AllowTreatingProviderToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@55d56113]" name="AllowTreatingProviderToFINALIZENOnVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked.DONOTAlowTreatingProvideToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked.AllowTreatingProviderToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@55d56113] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked.AllowTreatingProviderToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@55d56113] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowTreatingProviderToFINALIZENOnVisitNotes -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@55d56113]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@55d56113]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="AllowTreatingProviderToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@55d56113]" name="AllowTreatingProviderToFinalizNonVisitDischargenotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked.DONOTAlowTreatingProvideToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked.AllowTreatingProviderToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@55d56113] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked.AllowTreatingProviderToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@55d56113] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowTreatingProviderToFinalizNonVisitDischargenotes -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@55d56113]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@55d56113]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M11.EMR.TestTreatingProviderWithInSuranceClassUnCheckedAndClinicalSetupUnChecked -->
      <class name="com.bms.M11.EMR.TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases@2d928643]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="AllowTreatingProviderToFinalizeVisitNotes()[pri:1, instance:com.bms.M11.EMR.TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases@2d928643]" name="AllowTreatingProviderToFinalizeVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowTreatingProviderToFinalizeVisitNotes -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases@2d928643]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases@2d928643]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases@2d928643]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="AllowTreatingProvidertofinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases@2d928643]" name="AllowTreatingProvidertofinalizNonVisitDischargenotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases.AllowTreatingProviderToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases.AllowTreatingProvidertofinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases@2d928643] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases.AllowTreatingProvidertofinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases@2d928643] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowTreatingProvidertofinalizNonVisitDischargenotes -->
        <test-method status="SKIP" signature="AllowTreatingProvidertofinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases@2d928643]" name="AllowTreatingProvidertofinalizeNonVisitnotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases.AllowTreatingProviderToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases.AllowTreatingProvidertofinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases@2d928643] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases.AllowTreatingProvidertofinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases@2d928643] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowTreatingProvidertofinalizeNonVisitnotes -->
      </class> <!-- com.bms.M11.EMR.TestTreatingProviderFinalizeWithAllowPTATofinalizeInInsuranceClassTestCases -->
      <class name="com.bms.M2.Patient.TestInactivatePatient">
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M2.Patient.TestInactivatePatient@4e9ba398]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M2.Patient.TestInactivatePatient@4e9ba398]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M2.Patient.TestInactivatePatient@4e9ba398]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M2.Patient.TestInactivatePatient@4e9ba398]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testInactivatePatinetwithNoActiveCharges()[pri:1, instance:com.bms.M2.Patient.TestInactivatePatient@4e9ba398]" name="testInactivatePatinetwithNoActiveCharges" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInactivatePatinetwithNoActiveCharges -->
      </class> <!-- com.bms.M2.Patient.TestInactivatePatient -->
      <class name="com.bms.M11.EMR.TestMyExamTemplate">
        <test-method status="SKIP" signature="LinkMyExamTemplate()[pri:2, instance:com.bms.M11.EMR.TestMyExamTemplate@72d818d1]" name="LinkMyExamTemplate" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LinkMyExamTemplate -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestMyExamTemplate@72d818d1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="AddPublicMyExamTemplate()[pri:3, instance:com.bms.M11.EMR.TestMyExamTemplate@72d818d1]" name="AddPublicMyExamTemplate" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddPublicMyExamTemplate -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestMyExamTemplate@72d818d1]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="Add_Edit_Delete_MyExamTemplate()[pri:1, instance:com.bms.M11.EMR.TestMyExamTemplate@72d818d1]" name="Add_Edit_Delete_MyExamTemplate" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_Edit_Delete_MyExamTemplate -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestMyExamTemplate@72d818d1]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestMyExamTemplate@72d818d1]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestMyExamTemplate@72d818d1]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestMyExamTemplate@72d818d1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestMyExamTemplate@72d818d1]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestMyExamTemplate@72d818d1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M11.EMR.TestMyExamTemplate -->
      <class name="com.bms.M8.FLR.TestHardStopMessagevalidation2">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M8.FLR.TestHardStopMessagevalidation2@271053e1]" name="setup" is-config="true" duration-ms="4582" started-at="2018-05-10T09:29:19Z" finished-at="2018-05-10T09:29:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M8.FLR.TestHardStopMessagevalidation2@271053e1]" name="setup" is-config="true" duration-ms="35772" started-at="2018-05-10T09:29:24Z" finished-at="2018-05-10T09:29:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M8.FLR.TestHardStopMessagevalidation2.TestHardStopWithout97001() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestHardStopWithout97001()[pri:1, instance:com.bms.M8.FLR.TestHardStopMessagevalidation2@271053e1]" name="TestHardStopWithout97001" duration-ms="181449" started-at="2018-05-10T09:29:59Z" finished-at="2018-05-10T09:33:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestHardStopWithout97001 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M8.FLR.TestHardStopMessagevalidation2@271053e1]" name="afterMethod" is-config="true" duration-ms="278" started-at="2018-05-10T09:33:01Z" finished-at="2018-05-10T09:33:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestHardStopWithout97001 status=SUCCESS method=TestHardStopMessagevalidation2.TestHardStopWithout97001()[pri:1, instance:com.bms.M8.FLR.TestHardStopMessagevalidation2@271053e1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M8.FLR.TestHardStopMessagevalidation2@271053e1]" name="closedrivers" is-config="true" duration-ms="5960" started-at="2018-05-10T09:33:01Z" finished-at="2018-05-10T09:33:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M8.FLR.TestHardStopMessagevalidation2 -->
      <class name="com.bms.M8.FLR.TestHardStopMessagevalidation3">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M8.FLR.TestHardStopMessagevalidation3@4f7d0008]" name="setup" is-config="true" duration-ms="4629" started-at="2018-05-10T09:25:11Z" finished-at="2018-05-10T09:25:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M8.FLR.TestHardStopMessagevalidation3@4f7d0008]" name="setup" is-config="true" duration-ms="30957" started-at="2018-05-10T09:25:16Z" finished-at="2018-05-10T09:25:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M8.FLR.TestHardStopMessagevalidation3.TestHardStopWith92521() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestHardStopWith92521()[pri:1, instance:com.bms.M8.FLR.TestHardStopMessagevalidation3@4f7d0008]" name="TestHardStopWith92521" duration-ms="206508" started-at="2018-05-10T09:25:47Z" finished-at="2018-05-10T09:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestHardStopWith92521 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M8.FLR.TestHardStopMessagevalidation3@4f7d0008]" name="afterMethod" is-config="true" duration-ms="235" started-at="2018-05-10T09:29:13Z" finished-at="2018-05-10T09:29:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestHardStopWith92521 status=SUCCESS method=TestHardStopMessagevalidation3.TestHardStopWith92521()[pri:1, instance:com.bms.M8.FLR.TestHardStopMessagevalidation3@4f7d0008] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M8.FLR.TestHardStopMessagevalidation3@4f7d0008]" name="closedrivers" is-config="true" duration-ms="5732" started-at="2018-05-10T09:29:13Z" finished-at="2018-05-10T09:29:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M8.FLR.TestHardStopMessagevalidation3 -->
      <class name="com.bms.M10.SPage.TestPatientReportlibrary">
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M10.SPage.TestPatientReportlibrary@1e397ed7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M10.SPage.TestPatientReportlibrary@1e397ed7]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M10.SPage.TestPatientReportlibrary@1e397ed7]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="Patient_Report_new_library_item()[pri:1, instance:com.bms.M10.SPage.TestPatientReportlibrary@1e397ed7]" name="Patient_Report_new_library_item" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patient_Report_new_library_item -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M10.SPage.TestPatientReportlibrary@1e397ed7]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M10.SPage.TestPatientReportlibrary@1e397ed7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M10.SPage.TestPatientReportlibrary@1e397ed7]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="Patient_Report_library_load()[pri:2, instance:com.bms.M10.SPage.TestPatientReportlibrary@1e397ed7]" name="Patient_Report_library_load" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Patient_Report_library_load -->
      </class> <!-- com.bms.M10.SPage.TestPatientReportlibrary -->
      <class name="com.bms.M11.EMR.TestNonoClinicalStafTestCases">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestNonoClinicalStafTestCases@13805618]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestNonoClinicalStafTestCases@13805618]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="AllowNonclinicalstaffToFinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestNonoClinicalStafTestCases@13805618]" name="AllowNonclinicalstaffToFinalizeNonVisitnotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestNonoClinicalStafTestCases.DONOTAlowNonClinicalStafToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestNonoClinicalStafTestCases.AllowNonclinicalstaffToFinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestNonoClinicalStafTestCases@13805618] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestNonoClinicalStafTestCases.AllowNonclinicalstaffToFinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestNonoClinicalStafTestCases@13805618] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowNonclinicalstaffToFinalizeNonVisitnotes -->
        <test-method status="SKIP" signature="DONOTAlowNonClinicalStafToFinalizeVisitNotes()[pri:1, instance:com.bms.M11.EMR.TestNonoClinicalStafTestCases@13805618]" name="DONOTAlowNonClinicalStafToFinalizeVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DONOTAlowNonClinicalStafToFinalizeVisitNotes -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestNonoClinicalStafTestCases@13805618]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestNonoClinicalStafTestCases@13805618]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="AllowNonclinicalstaffToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestNonoClinicalStafTestCases@13805618]" name="AllowNonclinicalstaffToFinalizNonVisitDischargenotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestNonoClinicalStafTestCases.DONOTAlowNonClinicalStafToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestNonoClinicalStafTestCases.AllowNonclinicalstaffToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestNonoClinicalStafTestCases@13805618] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestNonoClinicalStafTestCases.AllowNonclinicalstaffToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestNonoClinicalStafTestCases@13805618] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowNonclinicalstaffToFinalizNonVisitDischargenotes -->
      </class> <!-- com.bms.M11.EMR.TestNonoClinicalStafTestCases -->
      <class name="com.bms.M11.EMR.TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected">
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected@6e1567f1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="DONOTAlowNonClinicalStafToFinalizeVisitNotes()[pri:1, instance:com.bms.M11.EMR.TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected@6e1567f1]" name="DONOTAlowNonClinicalStafToFinalizeVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DONOTAlowNonClinicalStafToFinalizeVisitNotes -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected@6e1567f1]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected@6e1567f1]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="AllowNonClinicalStaffToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected@6e1567f1]" name="AllowNonClinicalStaffToFINALIZENOnVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected.DONOTAlowNonClinicalStafToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected.AllowNonClinicalStaffToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected@6e1567f1] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected.AllowNonClinicalStaffToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected@6e1567f1] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowNonClinicalStaffToFINALIZENOnVisitNotes -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected@6e1567f1]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="AllowNonclinicalstaffToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected@6e1567f1]" name="AllowNonclinicalstaffToFinalizNonVisitDischargenotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected.DONOTAlowNonClinicalStafToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected.AllowNonclinicalstaffToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected@6e1567f1] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected.AllowNonclinicalstaffToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected@6e1567f1] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowNonclinicalstaffToFinalizNonVisitDischargenotes -->
      </class> <!-- com.bms.M11.EMR.TestNonclinicalStaffwithAllowedCheckInclinicsetupIsNotSelected -->
      <class name="com.bms.M3.Cases.TestCloneCase">
        <test-method status="SKIP" signature="testCloneExistingCase()[pri:2, instance:com.bms.M3.Cases.TestCloneCase@6b09bb57]" name="testCloneExistingCase" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCloneExistingCase -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestCloneCase@6b09bb57]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M3.Cases.TestCloneCase@6b09bb57]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestCloneCase@6b09bb57]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestCloneCase@6b09bb57]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M3.Cases.TestCloneCase@6b09bb57]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestCloneCase@6b09bb57]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testCloneCompleteActiveCase()[pri:1, instance:com.bms.M3.Cases.TestCloneCase@6b09bb57]" name="testCloneCompleteActiveCase" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCloneCompleteActiveCase -->
        <test-method status="SKIP" signature="testCloneIncompleteActiveCase()[pri:3, instance:com.bms.M3.Cases.TestCloneCase@6b09bb57]" name="testCloneIncompleteActiveCase" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCloneIncompleteActiveCase -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestCloneCase@6b09bb57]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestCloneCase@6b09bb57]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M3.Cases.TestCloneCase -->
      <class name="com.bms.M15.ArrivalAlert.TestGroupAppointment">
        <test-method status="SKIP" signature="TestEditGroupAppointment()[pri:1, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="TestEditGroupAppointment" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestEditGroupAppointment -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestNoShowOfGroupAppointment()[pri:4, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="TestNoShowOfGroupAppointment" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNoShowOfGroupAppointment -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestCancelationOfGroupAppointment()[pri:3, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="TestCancelationOfGroupAppointment" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCancelationOfGroupAppointment -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestReoccurrenceOfGroupAppointment()[pri:5, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="TestReoccurrenceOfGroupAppointment" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestReoccurrenceOfGroupAppointment -->
        <test-method status="SKIP" signature="TestMaximumPatientAllowedInGroupAppointment()[pri:2, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="TestMaximumPatientAllowedInGroupAppointment" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMaximumPatientAllowedInGroupAppointment -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestCreationOfGroupAppointment()[pri:6, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="TestCreationOfGroupAppointment" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCreationOfGroupAppointment -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestSelectedCancelationReasonShouldBeVisible()[pri:7, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="TestSelectedCancelationReasonShouldBeVisible" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestSelectedCancelationReasonShouldBeVisible -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M15.ArrivalAlert.TestGroupAppointment@6fc6f14e]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M15.ArrivalAlert.TestGroupAppointment -->
      <class name="com.bms.M11.EMR.TestStudentProviderInInsuranceClassTestCases">
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestStudentProviderInInsuranceClassTestCases@3159c4b8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestStudentProviderInInsuranceClassTestCases@3159c4b8]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="AllowStudentProvidertofinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestStudentProviderInInsuranceClassTestCases@3159c4b8]" name="AllowStudentProvidertofinalizeNonVisitnotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestStudentProviderInInsuranceClassTestCases.DontAllowStudentToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestStudentProviderInInsuranceClassTestCases.AllowStudentProvidertofinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestStudentProviderInInsuranceClassTestCases@3159c4b8] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestStudentProviderInInsuranceClassTestCases.AllowStudentProvidertofinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestStudentProviderInInsuranceClassTestCases@3159c4b8] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowStudentProvidertofinalizeNonVisitnotes -->
        <test-method status="SKIP" signature="DontAllowStudentToFinalizeVisitNotes()[pri:1, instance:com.bms.M11.EMR.TestStudentProviderInInsuranceClassTestCases@3159c4b8]" name="DontAllowStudentToFinalizeVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DontAllowStudentToFinalizeVisitNotes -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestStudentProviderInInsuranceClassTestCases@3159c4b8]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestStudentProviderInInsuranceClassTestCases@3159c4b8]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="AllowStudentProvidertofinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestStudentProviderInInsuranceClassTestCases@3159c4b8]" name="AllowStudentProvidertofinalizNonVisitDischargenotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestStudentProviderInInsuranceClassTestCases.DontAllowStudentToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestStudentProviderInInsuranceClassTestCases.AllowStudentProvidertofinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestStudentProviderInInsuranceClassTestCases@3159c4b8] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestStudentProviderInInsuranceClassTestCases.AllowStudentProvidertofinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestStudentProviderInInsuranceClassTestCases@3159c4b8] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowStudentProvidertofinalizNonVisitDischargenotes -->
      </class> <!-- com.bms.M11.EMR.TestStudentProviderInInsuranceClassTestCases -->
      <class name="com.bms.M9.AddCharges.TestPermissionsAddCharges">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestPermissionsAddCharges@7085bdee]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestPermissionsAddCharges@7085bdee]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="PermissionByRolePracticeAdmin()[pri:2, instance:com.bms.M9.AddCharges.TestPermissionsAddCharges@7085bdee]" name="PermissionByRolePracticeAdmin" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PermissionByRolePracticeAdmin -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestPermissionsAddCharges@7085bdee]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestPermissionsAddCharges@7085bdee]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestPermissionsAddCharges@7085bdee]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestPermissionsAddCharges@7085bdee]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="PermissionByRoleCustomerProvider()[pri:3, instance:com.bms.M9.AddCharges.TestPermissionsAddCharges@7085bdee]" name="PermissionByRoleCustomerProvider" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PermissionByRoleCustomerProvider -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestPermissionsAddCharges@7085bdee]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestPermissionsAddCharges@7085bdee]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="PermissionByRoleFrontOfficeStaff()[pri:1, instance:com.bms.M9.AddCharges.TestPermissionsAddCharges@7085bdee]" name="PermissionByRoleFrontOfficeStaff" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PermissionByRoleFrontOfficeStaff -->
      </class> <!-- com.bms.M9.AddCharges.TestPermissionsAddCharges -->
      <class name="com.bms.M15.ArrivalAlert.TestPolicyChargeQueue">
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestCancelPolicyChargeQueueDeny()[pri:2, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="TestCancelPolicyChargeQueueDeny" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCancelPolicyChargeQueueDeny -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestCancelPolicyChargeQueueApproval()[pri:1, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="TestCancelPolicyChargeQueueApproval" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCancelPolicyChargeQueueApproval -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestMutipleCancelPolicyChargeQueueApproval()[pri:3, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="TestMutipleCancelPolicyChargeQueueApproval" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMutipleCancelPolicyChargeQueueApproval -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestMutipleCancelAndNowPolicyChargeQueueApprovalForOnePatient()[pri:7, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="TestMutipleCancelAndNowPolicyChargeQueueApprovalForOnePatient" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMutipleCancelAndNowPolicyChargeQueueApprovalForOnePatient -->
        <test-method status="SKIP" signature="TestMutipleNoShowPolicyChargeQueueApproval()[pri:6, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="TestMutipleNoShowPolicyChargeQueueApproval" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMutipleNoShowPolicyChargeQueueApproval -->
        <test-method status="SKIP" signature="TestNoShowPolicyChargeQueueDeny()[pri:5, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="TestNoShowPolicyChargeQueueDeny" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNoShowPolicyChargeQueueDeny -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestNoShowPolicyChargeQueueApproval()[pri:4, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="TestNoShowPolicyChargeQueueApproval" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNoShowPolicyChargeQueueApproval -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="TestMutipleCancelAndNowPolicyChargeQueueApprovalForMultiplePatient()[pri:8, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="TestMutipleCancelAndNowPolicyChargeQueueApprovalForMultiplePatient" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMutipleCancelAndNowPolicyChargeQueueApprovalForMultiplePatient -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestPolicyChargeQueue@71423665]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M15.ArrivalAlert.TestPolicyChargeQueue -->
      <class name="com.bms.M7.APage.TestAPageGCodeValidationPT">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M7.APage.TestAPageGCodeValidationPT@13deb50e]" name="setup" is-config="true" duration-ms="4844" started-at="2018-05-10T06:57:06Z" finished-at="2018-05-10T06:57:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPageGCodeValidationPT@13deb50e]" name="setup" is-config="true" duration-ms="30970" started-at="2018-05-10T06:57:11Z" finished-at="2018-05-10T06:57:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPageGCodeValidationPT.G_CodeValidation_PT() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="G_CodeValidation_PT()[pri:1, instance:com.bms.M7.APage.TestAPageGCodeValidationPT@13deb50e]" name="G_CodeValidation_PT" duration-ms="150486" started-at="2018-05-10T06:57:42Z" finished-at="2018-05-10T07:00:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- G_CodeValidation_PT -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPageGCodeValidationPT@13deb50e]" name="afterMethod" is-config="true" duration-ms="188" started-at="2018-05-10T07:00:12Z" finished-at="2018-05-10T07:00:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=G_CodeValidation_PT status=SUCCESS method=TestAPageGCodeValidationPT.G_CodeValidation_PT()[pri:1, instance:com.bms.M7.APage.TestAPageGCodeValidationPT@13deb50e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M7.APage.TestAPageGCodeValidationPT@13deb50e]" name="closedrivers" is-config="true" duration-ms="5655" started-at="2018-05-10T07:00:13Z" finished-at="2018-05-10T07:00:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M7.APage.TestAPageGCodeValidationPT -->
      <class name="com.bms.M10.SPage.TestSPageLock">
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M10.SPage.TestSPageLock@490ab905]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="Lock_functionality_Ok()[pri:1, instance:com.bms.M10.SPage.TestSPageLock@490ab905]" name="Lock_functionality_Ok" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Lock_functionality_Ok -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M10.SPage.TestSPageLock@490ab905]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M10.SPage.TestSPageLock@490ab905]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="Lock_functionality_cancel()[pri:2, instance:com.bms.M10.SPage.TestSPageLock@490ab905]" name="Lock_functionality_cancel" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Lock_functionality_cancel -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M10.SPage.TestSPageLock@490ab905]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M10.SPage.TestSPageLock@490ab905]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M10.SPage.TestSPageLock@490ab905]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M10.SPage.TestSPageLock -->
      <class name="com.bms.M10.SPage.TestCaseSpageR">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M10.SPage.TestCaseSpageR@3f49dace]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="required_field_indicators_initial_visit()[pri:1, instance:com.bms.M10.SPage.TestCaseSpageR@3f49dace]" name="required_field_indicators_initial_visit" duration-ms="1" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- required_field_indicators_initial_visit -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M10.SPage.TestCaseSpageR@3f49dace]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M10.SPage.TestCaseSpageR@3f49dace]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M10.SPage.TestCaseSpageR@3f49dace]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M10.SPage.TestCaseSpageR@3f49dace]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="required_field_indicators_FollowupReEvaluationvisit()[pri:3, instance:com.bms.M10.SPage.TestCaseSpageR@3f49dace]" name="required_field_indicators_FollowupReEvaluationvisit" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- required_field_indicators_FollowupReEvaluationvisit -->
        <test-method status="SKIP" signature="required_field_indicators_Followup_visit()[pri:2, instance:com.bms.M10.SPage.TestCaseSpageR@3f49dace]" name="required_field_indicators_Followup_visit" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- required_field_indicators_Followup_visit -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M10.SPage.TestCaseSpageR@3f49dace]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M10.SPage.TestCaseSpageR@3f49dace]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M10.SPage.TestCaseSpageR@3f49dace]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M10.SPage.TestCaseSpageR@3f49dace]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M10.SPage.TestCaseSpageR@3f49dace]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="required_field_indicators_FollowupDischarge_visit()[pri:4, instance:com.bms.M10.SPage.TestCaseSpageR@3f49dace]" name="required_field_indicators_FollowupDischarge_visit" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- required_field_indicators_FollowupDischarge_visit -->
      </class> <!-- com.bms.M10.SPage.TestCaseSpageR -->
      <class name="com.bms.M8.FLR.TestFLRdataCarryForward2">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M8.FLR.TestFLRdataCarryForward2@598067a5]" name="setup" is-config="true" duration-ms="4693" started-at="2018-05-10T07:34:38Z" finished-at="2018-05-10T07:34:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M8.FLR.TestFLRdataCarryForward2@598067a5]" name="setup" is-config="true" duration-ms="29009" started-at="2018-05-10T07:34:43Z" finished-at="2018-05-10T07:35:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M8.FLR.TestFLRdataCarryForward2.AddendumDataOnFLRDataSubsequentNoteNotDisplay() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="AddendumDataOnFLRDataSubsequentNoteNotDisplay()[pri:1, instance:com.bms.M8.FLR.TestFLRdataCarryForward2@598067a5]" name="AddendumDataOnFLRDataSubsequentNoteNotDisplay" duration-ms="663752" started-at="2018-05-10T07:35:12Z" finished-at="2018-05-10T07:46:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddendumDataOnFLRDataSubsequentNoteNotDisplay -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M8.FLR.TestFLRdataCarryForward2@598067a5]" name="afterMethod" is-config="true" duration-ms="202" started-at="2018-05-10T07:46:15Z" finished-at="2018-05-10T07:46:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddendumDataOnFLRDataSubsequentNoteNotDisplay status=SUCCESS method=TestFLRdataCarryForward2.AddendumDataOnFLRDataSubsequentNoteNotDisplay()[pri:1, instance:com.bms.M8.FLR.TestFLRdataCarryForward2@598067a5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M8.FLR.TestFLRdataCarryForward2@598067a5]" name="setup" is-config="true" duration-ms="23101" started-at="2018-05-10T07:46:16Z" finished-at="2018-05-10T07:46:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M8.FLR.TestFLRdataCarryForward2.AddendumDataOnFLRDataSubsequentNoteNotDisplay2() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="AddendumDataOnFLRDataSubsequentNoteNotDisplay2()[pri:2, instance:com.bms.M8.FLR.TestFLRdataCarryForward2@598067a5]" name="AddendumDataOnFLRDataSubsequentNoteNotDisplay2" duration-ms="408288" started-at="2018-05-10T07:46:39Z" finished-at="2018-05-10T07:53:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddendumDataOnFLRDataSubsequentNoteNotDisplay2 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M8.FLR.TestFLRdataCarryForward2@598067a5]" name="afterMethod" is-config="true" duration-ms="227" started-at="2018-05-10T07:53:27Z" finished-at="2018-05-10T07:53:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddendumDataOnFLRDataSubsequentNoteNotDisplay2 status=SUCCESS method=TestFLRdataCarryForward2.AddendumDataOnFLRDataSubsequentNoteNotDisplay2()[pri:2, instance:com.bms.M8.FLR.TestFLRdataCarryForward2@598067a5] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M8.FLR.TestFLRdataCarryForward2@598067a5]" name="closedrivers" is-config="true" duration-ms="7718" started-at="2018-05-10T07:53:27Z" finished-at="2018-05-10T07:53:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M8.FLR.TestFLRdataCarryForward2 -->
      <class name="com.bms.M8.FLR.TestFLRdataCarryForward1">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M8.FLR.TestFLRdataCarryForward1@31ef45e3]" name="setup" is-config="true" duration-ms="4812" started-at="2018-05-10T07:12:04Z" finished-at="2018-05-10T07:12:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M8.FLR.TestFLRdataCarryForward1@31ef45e3]" name="setup" is-config="true" duration-ms="32125" started-at="2018-05-10T07:12:09Z" finished-at="2018-05-10T07:12:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M8.FLR.TestFLRdataCarryForward1.FLRDataSubsequentNote() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="FLRDataSubsequentNote()[pri:1, instance:com.bms.M8.FLR.TestFLRdataCarryForward1@31ef45e3]" name="FLRDataSubsequentNote" duration-ms="274186" started-at="2018-05-10T07:12:41Z" finished-at="2018-05-10T07:17:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FLRDataSubsequentNote -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M8.FLR.TestFLRdataCarryForward1@31ef45e3]" name="afterMethod" is-config="true" duration-ms="273" started-at="2018-05-10T07:17:15Z" finished-at="2018-05-10T07:17:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FLRDataSubsequentNote status=SUCCESS method=TestFLRdataCarryForward1.FLRDataSubsequentNote()[pri:1, instance:com.bms.M8.FLR.TestFLRdataCarryForward1@31ef45e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M8.FLR.TestFLRdataCarryForward1@31ef45e3]" name="setup" is-config="true" duration-ms="17020" started-at="2018-05-10T07:17:15Z" finished-at="2018-05-10T07:17:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M8.FLR.TestFLRdataCarryForward1.AddendumDataOnFLRDataSubsequentNoteDisplay() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="AddendumDataOnFLRDataSubsequentNoteDisplay()[pri:2, instance:com.bms.M8.FLR.TestFLRdataCarryForward1@31ef45e3]" name="AddendumDataOnFLRDataSubsequentNoteDisplay" duration-ms="373943" started-at="2018-05-10T07:17:32Z" finished-at="2018-05-10T07:23:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddendumDataOnFLRDataSubsequentNoteDisplay -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M8.FLR.TestFLRdataCarryForward1@31ef45e3]" name="afterMethod" is-config="true" duration-ms="239" started-at="2018-05-10T07:23:46Z" finished-at="2018-05-10T07:23:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddendumDataOnFLRDataSubsequentNoteDisplay status=SUCCESS method=TestFLRdataCarryForward1.AddendumDataOnFLRDataSubsequentNoteDisplay()[pri:2, instance:com.bms.M8.FLR.TestFLRdataCarryForward1@31ef45e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M8.FLR.TestFLRdataCarryForward1@31ef45e3]" name="setup" is-config="true" duration-ms="20567" started-at="2018-05-10T07:23:46Z" finished-at="2018-05-10T07:24:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M8.FLR.TestFLRdataCarryForward1.AddendumDataOnFLRDataSubsequentNoteNotDisplay() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="AddendumDataOnFLRDataSubsequentNoteNotDisplay()[pri:3, instance:com.bms.M8.FLR.TestFLRdataCarryForward1@31ef45e3]" name="AddendumDataOnFLRDataSubsequentNoteNotDisplay" duration-ms="623940" started-at="2018-05-10T07:24:07Z" finished-at="2018-05-10T07:34:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddendumDataOnFLRDataSubsequentNoteNotDisplay -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M8.FLR.TestFLRdataCarryForward1@31ef45e3]" name="afterMethod" is-config="true" duration-ms="210" started-at="2018-05-10T07:34:31Z" finished-at="2018-05-10T07:34:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddendumDataOnFLRDataSubsequentNoteNotDisplay status=SUCCESS method=TestFLRdataCarryForward1.AddendumDataOnFLRDataSubsequentNoteNotDisplay()[pri:3, instance:com.bms.M8.FLR.TestFLRdataCarryForward1@31ef45e3] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M8.FLR.TestFLRdataCarryForward1@31ef45e3]" name="closedrivers" is-config="true" duration-ms="6833" started-at="2018-05-10T07:34:31Z" finished-at="2018-05-10T07:34:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M8.FLR.TestFLRdataCarryForward1 -->
      <class name="com.bms.M9.AddCharges.TestViewChargesClinicUser">
        <test-method status="SKIP" signature="ValidateViewChargeUserClinical()[pri:1, instance:com.bms.M9.AddCharges.TestViewChargesClinicUser@e45f292]" name="ValidateViewChargeUserClinical" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateViewChargeUserClinical -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesClinicUser@e45f292]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesClinicUser@e45f292]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesClinicUser@e45f292]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesClinicUser@e45f292]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M9.AddCharges.TestViewChargesClinicUser -->
      <class name="com.bms.M5.Notes.TestCreateNoteWarningMessage">
        <test-method status="PASS" signature="beforeSuite(java.lang.String)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="beforeSuite" is-config="true" duration-ms="265" started-at="2018-05-09T21:00:44Z" finished-at="2018-05-09T21:00:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="setup" is-config="true" duration-ms="4892" started-at="2018-05-09T21:00:44Z" finished-at="2018-05-09T21:00:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="setup" is-config="true" duration-ms="664785" started-at="2018-05-09T21:00:49Z" finished-at="2018-05-09T21:11:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M5.Notes.TestCreateNoteWarningMessage.ValidateNoteMandtoryfields() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="ValidateNoteMandtoryfields()[pri:1, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="ValidateNoteMandtoryfields" duration-ms="150205" started-at="2018-05-09T21:11:54Z" finished-at="2018-05-09T21:14:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Unable to open add patient pageorg.openqa.selenium.TimeoutException: Timed out after 150 seconds waiting for condition (presence of element located by: By.xpath: //div[@id='sidebar-wrapper']//span[text()='Patient']) to be refreshed
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir5372_30492}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 5488f288db11c0201a83a6e4b6de07ed
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:80)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:261)
	at Utils.Commons.waitforElement(Commons.java:185)
	at UIMap.AddPatientPage.PatientMenu(AddPatientPage.java:54)
	at Utils.AddPatientUtils.QuickAddpatient(AddPatientUtils.java:43)
	at com.bms.M5.Notes.TestCreateNoteWarningMessage.ValidateNoteMandtoryfields(TestCreateNoteWarningMessage.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@id='sidebar-wrapper']//span[text()='Patient']"}
  (Session info: chrome=54.0.2840.71)
  (Driver info: chromedriver=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 16 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir5372_30492}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 5488f288db11c0201a83a6e4b6de07ed
*** Element info: {Using=xpath, value=//div[@id='sidebar-wrapper']//span[text()='Patient']}
	at sun.reflect.GeneratedConstructorAccessor10.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:500)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:899)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:41)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:181)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:178)
	at org.openqa.selenium.support.ui.ExpectedConditions$25.apply(ExpectedConditions.java:751)
	at org.openqa.selenium.support.ui.ExpectedConditions$25.apply(ExpectedConditions.java:747)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:238)
	... 37 more
 expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Unable to open add patient pageorg.openqa.selenium.TimeoutException: Timed out after 150 seconds waiting for condition (presence of element located by: By.xpath: //div[@id='sidebar-wrapper']//span[text()='Patient']) to be refreshed
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir5372_30492}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 5488f288db11c0201a83a6e4b6de07ed
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:80)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:261)
	at Utils.Commons.waitforElement(Commons.java:185)
	at UIMap.AddPatientPage.PatientMenu(AddPatientPage.java:54)
	at Utils.AddPatientUtils.QuickAddpatient(AddPatientUtils.java:43)
	at com.bms.M5.Notes.TestCreateNoteWarningMessage.ValidateNoteMandtoryfields(TestCreateNoteWarningMessage.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//div[@id='sidebar-wrapper']//span[text()='Patient']"}
  (Session info: chrome=54.0.2840.71)
  (Driver info: chromedriver=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 16 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir5372_30492}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 5488f288db11c0201a83a6e4b6de07ed
*** Element info: {Using=xpath, value=//div[@id='sidebar-wrapper']//span[text()='Patient']}
	at sun.reflect.GeneratedConstructorAccessor10.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:500)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:899)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:41)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:181)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:178)
	at org.openqa.selenium.support.ui.ExpectedConditions$25.apply(ExpectedConditions.java:751)
	at org.openqa.selenium.support.ui.ExpectedConditions$25.apply(ExpectedConditions.java:747)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:238)
	... 37 more
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at Utils.AddPatientUtils.QuickAddpatient(AddPatientUtils.java:48)
	at com.bms.M5.Notes.TestCreateNoteWarningMessage.ValidateNoteMandtoryfields(TestCreateNoteWarningMessage.java:34)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateNoteMandtoryfields -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="afterMethod" is-config="true" duration-ms="356" started-at="2018-05-09T21:14:24Z" finished-at="2018-05-09T21:14:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateNoteMandtoryfields status=SKIP method=TestCreateNoteWarningMessage.ValidateNoteMandtoryfields()[pri:1, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="setup" is-config="true" duration-ms="29220" started-at="2018-05-09T21:14:25Z" finished-at="2018-05-09T21:14:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M5.Notes.TestCreateNoteWarningMessage.ValidateNoteMandtoryfields() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="ValidateNoteMandtoryfields()[pri:1, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="ValidateNoteMandtoryfields" duration-ms="46211" started-at="2018-05-09T21:14:54Z" finished-at="2018-05-09T21:15:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateNoteMandtoryfields -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="afterMethod" is-config="true" duration-ms="232" started-at="2018-05-09T21:15:40Z" finished-at="2018-05-09T21:15:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateNoteMandtoryfields status=SUCCESS method=TestCreateNoteWarningMessage.ValidateNoteMandtoryfields()[pri:1, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="setup" is-config="true" duration-ms="18644" started-at="2018-05-09T21:15:40Z" finished-at="2018-05-09T21:15:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M5.Notes.TestCreateNoteWarningMessage.Note_Unlock() throws java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="Note_Unlock()[pri:2, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="Note_Unlock" duration-ms="10944676" started-at="2018-05-09T21:15:59Z" finished-at="2018-05-10T00:18:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Unable to get lock window pop for Craete noteorg.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: driver.version: RemoteWebDriver
Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=46.0, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 829fed33-53ec-4d0c-ab0b-3c711270ccaf
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:461)
	at org.openqa.selenium.By$ByName.findElement(By.java:303)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:899)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:41)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:181)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:178)
	at org.openqa.selenium.support.ui.ExpectedConditions$25.apply(ExpectedConditions.java:751)
	at org.openqa.selenium.support.ui.ExpectedConditions$25.apply(ExpectedConditions.java:747)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:238)
	at Utils.Commons.waitforElement(Commons.java:185)
	at UIMap.LoginPage.username(LoginPage.java:27)
	at com.bms.M5.Notes.TestCreateNoteWarningMessage.Note_Unlock(TestCreateNoteWarningMessage.java:138)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:139)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:155)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:284)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:261)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:165)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:167)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:272)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:124)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:271)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.execute(NewProfileExtensionConnection.java:160)
	at org.openqa.selenium.firefox.FirefoxDriver$LazyCommandExecutor.execute(FirefoxDriver.java:380)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 47 more
 expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Unable to get lock window pop for Craete noteorg.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: driver.version: RemoteWebDriver
Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=46.0, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 829fed33-53ec-4d0c-ab0b-3c711270ccaf
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:461)
	at org.openqa.selenium.By$ByName.findElement(By.java:303)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:899)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:41)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:181)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:178)
	at org.openqa.selenium.support.ui.ExpectedConditions$25.apply(ExpectedConditions.java:751)
	at org.openqa.selenium.support.ui.ExpectedConditions$25.apply(ExpectedConditions.java:747)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:238)
	at Utils.Commons.waitforElement(Commons.java:185)
	at UIMap.LoginPage.username(LoginPage.java:27)
	at com.bms.M5.Notes.TestCreateNoteWarningMessage.Note_Unlock(TestCreateNoteWarningMessage.java:138)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:139)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:155)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:284)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:261)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:165)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:167)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:272)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:124)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:271)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.execute(NewProfileExtensionConnection.java:160)
	at org.openqa.selenium.firefox.FirefoxDriver$LazyCommandExecutor.execute(FirefoxDriver.java:380)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 47 more
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at com.bms.M5.Notes.TestCreateNoteWarningMessage.Note_Unlock(TestCreateNoteWarningMessage.java:204)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Note_Unlock -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="afterMethod" is-config="true" duration-ms="213" started-at="2018-05-10T00:18:24Z" finished-at="2018-05-10T00:18:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Note_Unlock status=SKIP method=TestCreateNoteWarningMessage.Note_Unlock()[pri:2, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="setup" is-config="true" duration-ms="23499" started-at="2018-05-10T00:18:24Z" finished-at="2018-05-10T00:18:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M5.Notes.TestCreateNoteWarningMessage.Note_Unlock() throws java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="Note_Unlock()[pri:2, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="Note_Unlock" duration-ms="10898401" started-at="2018-05-10T00:18:48Z" finished-at="2018-05-10T03:20:26Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Unable to get lock window pop for Craete noteorg.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: driver.version: RemoteWebDriver
Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=46.0, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 34a3bc8b-18ed-495b-8d01-cb27bd2522c2
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:461)
	at org.openqa.selenium.By$ByName.findElement(By.java:303)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:899)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:41)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:181)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:178)
	at org.openqa.selenium.support.ui.ExpectedConditions$25.apply(ExpectedConditions.java:751)
	at org.openqa.selenium.support.ui.ExpectedConditions$25.apply(ExpectedConditions.java:747)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:238)
	at Utils.Commons.waitforElement(Commons.java:185)
	at UIMap.LoginPage.username(LoginPage.java:27)
	at com.bms.M5.Notes.TestCreateNoteWarningMessage.Note_Unlock(TestCreateNoteWarningMessage.java:138)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:139)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:155)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:284)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:261)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:165)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:167)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:272)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:124)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:271)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.execute(NewProfileExtensionConnection.java:160)
	at org.openqa.selenium.firefox.FirefoxDriver$LazyCommandExecutor.execute(FirefoxDriver.java:380)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 47 more
 expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Unable to get lock window pop for Craete noteorg.openqa.selenium.remote.UnreachableBrowserException: Error communicating with the remote browser. It may have died.
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: driver.version: RemoteWebDriver
Capabilities [{applicationCacheEnabled=true, rotatable=false, handlesAlerts=true, databaseEnabled=true, version=46.0, platform=WINDOWS, nativeEvents=false, acceptSslCerts=true, webStorageEnabled=true, locationContextEnabled=true, browserName=firefox, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 34a3bc8b-18ed-495b-8d01-cb27bd2522c2
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:665)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByName(RemoteWebDriver.java:461)
	at org.openqa.selenium.By$ByName.findElement(By.java:303)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at org.openqa.selenium.support.ui.ExpectedConditions.findElement(ExpectedConditions.java:899)
	at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:41)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:181)
	at org.openqa.selenium.support.ui.ExpectedConditions$6.apply(ExpectedConditions.java:178)
	at org.openqa.selenium.support.ui.ExpectedConditions$25.apply(ExpectedConditions.java:751)
	at org.openqa.selenium.support.ui.ExpectedConditions$25.apply(ExpectedConditions.java:747)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:238)
	at Utils.Commons.waitforElement(Commons.java:185)
	at UIMap.LoginPage.username(LoginPage.java:27)
	at com.bms.M5.Notes.TestCreateNoteWarningMessage.Note_Unlock(TestCreateNoteWarningMessage.java:138)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at org.apache.http.impl.io.SessionInputBufferImpl.streamRead(SessionInputBufferImpl.java:139)
	at org.apache.http.impl.io.SessionInputBufferImpl.fillBuffer(SessionInputBufferImpl.java:155)
	at org.apache.http.impl.io.SessionInputBufferImpl.readLine(SessionInputBufferImpl.java:284)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:261)
	at org.apache.http.impl.DefaultBHttpClientConnection.receiveResponseHeader(DefaultBHttpClientConnection.java:165)
	at org.apache.http.impl.conn.CPoolProxy.receiveResponseHeader(CPoolProxy.java:167)
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:272)
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:124)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:271)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:88)
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:71)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.fallBackExecute(ApacheHttpClient.java:144)
	at org.openqa.selenium.remote.internal.ApacheHttpClient.execute(ApacheHttpClient.java:90)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:142)
	at org.openqa.selenium.firefox.internal.NewProfileExtensionConnection.execute(NewProfileExtensionConnection.java:160)
	at org.openqa.selenium.firefox.FirefoxDriver$LazyCommandExecutor.execute(FirefoxDriver.java:380)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:644)
	... 47 more
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at com.bms.M5.Notes.TestCreateNoteWarningMessage.Note_Unlock(TestCreateNoteWarningMessage.java:204)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Note_Unlock -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="afterMethod" is-config="true" duration-ms="620" started-at="2018-05-10T03:20:26Z" finished-at="2018-05-10T03:20:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Note_Unlock status=FAILURE method=TestCreateNoteWarningMessage.Note_Unlock()[pri:2, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="closedrivers" is-config="true" duration-ms="70267" started-at="2018-05-10T03:20:27Z" finished-at="2018-05-10T03:21:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="afterSuite(java.lang.String)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteWarningMessage@6093dd95]" name="afterSuite" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:17Z" finished-at="2018-05-10T09:45:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.bms.M5.Notes.TestCreateNoteWarningMessage -->
      <class name="com.bms.M9.AddCharges.TestPayments">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestPayments@73ad2d6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestPayments@73ad2d6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="Add_Delete_Update_Payments()[pri:1, instance:com.bms.M9.AddCharges.TestPayments@73ad2d6]" name="Add_Delete_Update_Payments" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_Delete_Update_Payments -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestPayments@73ad2d6]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestPayments@73ad2d6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M9.AddCharges.TestPayments -->
      <class name="com.bms.M3.Cases.TestCaseWithCompleteInfo">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestCaseWithCompleteInfo@63753b6d]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="Samereferingphysicians()[pri:1, instance:com.bms.M3.Cases.TestCaseWithCompleteInfo@63753b6d]" name="Samereferingphysicians" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Samereferingphysicians -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestCaseWithCompleteInfo@63753b6d]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M3.Cases.TestCaseWithCompleteInfo@63753b6d]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestCaseWithCompleteInfo@63753b6d]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestCaseWithCompleteInfo@63753b6d]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestCaseWithCompleteInfo@63753b6d]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestShellCase()[pri:3, instance:com.bms.M3.Cases.TestCaseWithCompleteInfo@63753b6d]" name="TestShellCase" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestShellCase -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestCaseWithCompleteInfo@63753b6d]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="CaseAsCompleted()[pri:2, instance:com.bms.M3.Cases.TestCaseWithCompleteInfo@63753b6d]" name="CaseAsCompleted" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CaseAsCompleted -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestCaseWithCompleteInfo@63753b6d]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestCaseWithCompleteInfo@63753b6d]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="AddRefPhysician()[pri:4, instance:com.bms.M3.Cases.TestCaseWithCompleteInfo@63753b6d]" name="AddRefPhysician" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddRefPhysician -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M3.Cases.TestCaseWithCompleteInfo@63753b6d]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M3.Cases.TestCaseWithCompleteInfo -->
      <class name="com.bms.M13.Task.TestChangeCompany">
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestChangeCompany@3327bd23]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="ToValidatePatientIsAssociatedWithOneCompany()[pri:1, instance:com.bms.M13.Task.TestChangeCompany@3327bd23]" name="ToValidatePatientIsAssociatedWithOneCompany" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ToValidatePatientIsAssociatedWithOneCompany -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestChangeCompany@3327bd23]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="ProviderLinkwithDifferentCompanies()[pri:2, instance:com.bms.M13.Task.TestChangeCompany@3327bd23]" name="ProviderLinkwithDifferentCompanies" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProviderLinkwithDifferentCompanies -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestChangeCompany@3327bd23]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestChangeCompany@3327bd23]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M13.Task.TestChangeCompany@3327bd23]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M13.Task.TestChangeCompany@3327bd23]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M13.Task.TestChangeCompany -->
      <class name="com.bms.M6.Scheduler.TestScheduleMeetingByView">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeetingByView@42e26948]" name="setup" is-config="true" duration-ms="4740" started-at="2018-05-10T03:53:40Z" finished-at="2018-05-10T03:53:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeetingByView@42e26948]" name="setup" is-config="true" duration-ms="32392" started-at="2018-05-10T03:53:45Z" finished-at="2018-05-10T03:54:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleMeetingByView.ScheduleMeetingbyProvider()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="ScheduleMeetingbyProvider()[pri:1, instance:com.bms.M6.Scheduler.TestScheduleMeetingByView@42e26948]" name="ScheduleMeetingbyProvider" duration-ms="58593" started-at="2018-05-10T03:54:17Z" finished-at="2018-05-10T03:55:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScheduleMeetingbyProvider -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeetingByView@42e26948]" name="afterMethod" is-config="true" duration-ms="959" started-at="2018-05-10T03:55:16Z" finished-at="2018-05-10T03:55:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ScheduleMeetingbyProvider status=SUCCESS method=TestScheduleMeetingByView.ScheduleMeetingbyProvider()[pri:1, instance:com.bms.M6.Scheduler.TestScheduleMeetingByView@42e26948] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeetingByView@42e26948]" name="setup" is-config="true" duration-ms="18132" started-at="2018-05-10T03:55:16Z" finished-at="2018-05-10T03:55:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleMeetingByView.ScheduleMeetingByLocation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="ScheduleMeetingByLocation()[pri:2, instance:com.bms.M6.Scheduler.TestScheduleMeetingByView@42e26948]" name="ScheduleMeetingByLocation" duration-ms="57588" started-at="2018-05-10T03:55:35Z" finished-at="2018-05-10T03:56:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ScheduleMeetingByLocation -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeetingByView@42e26948]" name="afterMethod" is-config="true" duration-ms="186" started-at="2018-05-10T03:56:32Z" finished-at="2018-05-10T03:56:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ScheduleMeetingByLocation status=SUCCESS method=TestScheduleMeetingByView.ScheduleMeetingByLocation()[pri:2, instance:com.bms.M6.Scheduler.TestScheduleMeetingByView@42e26948] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeetingByView@42e26948]" name="closedrivers" is-config="true" duration-ms="5433" started-at="2018-05-10T03:56:32Z" finished-at="2018-05-10T03:56:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M6.Scheduler.TestScheduleMeetingByView -->
      <class name="com.bms.M3.Cases.TestRemovingRequiredFeildsInCase">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M3.Cases.TestRemovingRequiredFeildsInCase@5f9d02cb]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestRemovingRequiredFeildsInCase@5f9d02cb]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestRemovingRequiredFeildsInCase@5f9d02cb]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="RemovingCaseEffectiveDate()[pri:1, instance:com.bms.M3.Cases.TestRemovingRequiredFeildsInCase@5f9d02cb]" name="RemovingCaseEffectiveDate" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RemovingCaseEffectiveDate -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M3.Cases.TestRemovingRequiredFeildsInCase@5f9d02cb]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M3.Cases.TestRemovingRequiredFeildsInCase -->
      <class name="com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView@5383967b]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestGroupAppointmnetOnLocationView()[pri:3, instance:com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView@5383967b]" name="TestGroupAppointmnetOnLocationView" duration-ms="1" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestGroupAppointmnetOnLocationView -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView@5383967b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView@5383967b]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView@5383967b]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView@5383967b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestNoShowOnLocationView()[pri:2, instance:com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView@5383967b]" name="TestNoShowOnLocationView" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNoShowOnLocationView -->
        <test-method status="SKIP" signature="TestCancelationOnLocationView()[pri:1, instance:com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView@5383967b]" name="TestCancelationOnLocationView" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCancelationOnLocationView -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView@5383967b]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView@5383967b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView@5383967b]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView@5383967b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestArrivalAppointmnetOnLocationView()[pri:4, instance:com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView@5383967b]" name="TestArrivalAppointmnetOnLocationView" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestArrivalAppointmnetOnLocationView -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView@5383967b]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M15.ArrivalAlert.DifferentAppointmentTypesOnLocationView -->
      <class name="com.bms.M5.Notes.TestTemplateEMR">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M5.Notes.TestTemplateEMR@5622fdf]" name="setup" is-config="true" duration-ms="4765" started-at="2018-05-10T03:21:37Z" finished-at="2018-05-10T03:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M5.Notes.TestTemplateEMR@5622fdf]" name="setup" is-config="true" duration-ms="33757" started-at="2018-05-10T03:21:42Z" finished-at="2018-05-10T03:22:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M5.Notes.TestTemplateEMR.ValidateNoCustomTemplate() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="ValidateNoCustomTemplate()[pri:1, instance:com.bms.M5.Notes.TestTemplateEMR@5622fdf]" name="ValidateNoCustomTemplate" duration-ms="614150" started-at="2018-05-10T03:22:16Z" finished-at="2018-05-10T03:32:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateNoCustomTemplate -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M5.Notes.TestTemplateEMR@5622fdf]" name="afterMethod" is-config="true" duration-ms="329" started-at="2018-05-10T03:32:30Z" finished-at="2018-05-10T03:32:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateNoCustomTemplate status=SUCCESS method=TestTemplateEMR.ValidateNoCustomTemplate()[pri:1, instance:com.bms.M5.Notes.TestTemplateEMR@5622fdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M5.Notes.TestTemplateEMR@5622fdf]" name="setup" is-config="true" duration-ms="20061" started-at="2018-05-10T03:32:30Z" finished-at="2018-05-10T03:32:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M5.Notes.TestTemplateEMR.ValidateCustomTemplate() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="ValidateCustomTemplate()[pri:2, instance:com.bms.M5.Notes.TestTemplateEMR@5622fdf]" name="ValidateCustomTemplate" duration-ms="70955" started-at="2018-05-10T03:32:50Z" finished-at="2018-05-10T03:34:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateCustomTemplate -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M5.Notes.TestTemplateEMR@5622fdf]" name="afterMethod" is-config="true" duration-ms="186" started-at="2018-05-10T03:34:01Z" finished-at="2018-05-10T03:34:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidateCustomTemplate status=SUCCESS method=TestTemplateEMR.ValidateCustomTemplate()[pri:2, instance:com.bms.M5.Notes.TestTemplateEMR@5622fdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M5.Notes.TestTemplateEMR@5622fdf]" name="setup" is-config="true" duration-ms="16140" started-at="2018-05-10T03:34:01Z" finished-at="2018-05-10T03:34:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M5.Notes.TestTemplateEMR.ValidatePublicTemplate() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="ValidatePublicTemplate()[pri:4, instance:com.bms.M5.Notes.TestTemplateEMR@5622fdf]" name="ValidatePublicTemplate" duration-ms="32204" started-at="2018-05-10T03:34:18Z" finished-at="2018-05-10T03:34:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidatePublicTemplate -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M5.Notes.TestTemplateEMR@5622fdf]" name="afterMethod" is-config="true" duration-ms="225" started-at="2018-05-10T03:34:50Z" finished-at="2018-05-10T03:34:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ValidatePublicTemplate status=SUCCESS method=TestTemplateEMR.ValidatePublicTemplate()[pri:4, instance:com.bms.M5.Notes.TestTemplateEMR@5622fdf] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M5.Notes.TestTemplateEMR@5622fdf]" name="closedrivers" is-config="true" duration-ms="5420" started-at="2018-05-10T03:34:50Z" finished-at="2018-05-10T03:34:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M5.Notes.TestTemplateEMR -->
      <class name="com.bms.M11.EMR.TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked@64bfbc86]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked@64bfbc86]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="AllowStudentToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked@64bfbc86]" name="AllowStudentToFINALIZENOnVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked.DONOTAlowStudentToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked.AllowStudentToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked@64bfbc86] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked.AllowStudentToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked@64bfbc86] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowStudentToFINALIZENOnVisitNotes -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked@64bfbc86]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="AllowStudentToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked@64bfbc86]" name="AllowStudentToFinalizNonVisitDischargenotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked.DONOTAlowStudentToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked.AllowStudentToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked@64bfbc86] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked.AllowStudentToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked@64bfbc86] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowStudentToFinalizNonVisitDischargenotes -->
        <test-method status="SKIP" signature="DONOTAlowStudentToFinalizeVisitNotes()[pri:1, instance:com.bms.M11.EMR.TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked@64bfbc86]" name="DONOTAlowStudentToFinalizeVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DONOTAlowStudentToFinalizeVisitNotes -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked@64bfbc86]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M11.EMR.TestStudentWithInsuranceClassUnCheckedAndClinicalSetupUnChecked -->
      <class name="com.bms.M9.AddCharges.TestCPTCodeSearch">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestCPTCodeSearch@402a079c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestCPTCodeSearch@402a079c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestCPTCodeSearch@402a079c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestCPTCodeSearch@402a079c]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestCPTCodeSearch@402a079c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestModifiers()[pri:2, instance:com.bms.M9.AddCharges.TestCPTCodeSearch@402a079c]" name="TestModifiers" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestModifiers -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestCPTCodeSearch@402a079c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestCPTCodesearch()[pri:1, instance:com.bms.M9.AddCharges.TestCPTCodeSearch@402a079c]" name="TestCPTCodesearch" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCPTCodesearch -->
      </class> <!-- com.bms.M9.AddCharges.TestCPTCodeSearch -->
      <class name="com.bms.M7.APage.TestAPageGCodeValidationOT">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M7.APage.TestAPageGCodeValidationOT@f6c48ac]" name="setup" is-config="true" duration-ms="4799" started-at="2018-05-10T06:53:51Z" finished-at="2018-05-10T06:53:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPageGCodeValidationOT@f6c48ac]" name="setup" is-config="true" duration-ms="33888" started-at="2018-05-10T06:53:56Z" finished-at="2018-05-10T06:54:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPageGCodeValidationOT.G_CodeValidation_OT() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="G_CodeValidation_OT()[pri:1, instance:com.bms.M7.APage.TestAPageGCodeValidationOT@f6c48ac]" name="G_CodeValidation_OT" duration-ms="150080" started-at="2018-05-10T06:54:30Z" finished-at="2018-05-10T06:57:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- G_CodeValidation_OT -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPageGCodeValidationOT@f6c48ac]" name="afterMethod" is-config="true" duration-ms="163" started-at="2018-05-10T06:57:00Z" finished-at="2018-05-10T06:57:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=G_CodeValidation_OT status=SUCCESS method=TestAPageGCodeValidationOT.G_CodeValidation_OT()[pri:1, instance:com.bms.M7.APage.TestAPageGCodeValidationOT@f6c48ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M7.APage.TestAPageGCodeValidationOT@f6c48ac]" name="closedrivers" is-config="true" duration-ms="6166" started-at="2018-05-10T06:57:00Z" finished-at="2018-05-10T06:57:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M7.APage.TestAPageGCodeValidationOT -->
      <class name="com.bms.M9.AddCharges.TestAddChargesWithDXChanges">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestReleasePendingCharges()[pri:1, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="TestReleasePendingCharges" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestReleasePendingCharges -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestADDchargewithNewDX()[pri:2, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="TestADDchargewithNewDX" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestADDchargewithNewDX -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestEDITCharge_withNEWdx()[pri:2, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="TestEDITCharge_withNEWdx" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestEDITCharge_withNEWdx -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestADDchargewithDifferentDxPointer()[pri:3, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="TestADDchargewithDifferentDxPointer" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestADDchargewithDifferentDxPointer -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestEDITvisitwithDifferentDxPointer()[pri:4, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="TestEDITvisitwithDifferentDxPointer" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestEDITvisitwithDifferentDxPointer -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestChargeswithEvalcodesforDOS12_31_2016andearlier()[pri:8, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="TestChargeswithEvalcodesforDOS12_31_2016andearlier" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestChargeswithEvalcodesforDOS12_31_2016andearlier -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestChargeswithReEvalcodesforDOS12_31_2016andearlier()[pri:9, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="TestChargeswithReEvalcodesforDOS12_31_2016andearlier" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestChargeswithReEvalcodesforDOS12_31_2016andearlier -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestProcCodeReplacementforManuallyenteredchargefor97001forDOS1_1_2017andLATER()[pri:10, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="TestProcCodeReplacementforManuallyenteredchargefor97001forDOS1_1_2017andLATER" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestProcCodeReplacementforManuallyenteredchargefor97001forDOS1_1_2017andLATER -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestAddChargesWithDXChanges@6500df86]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M9.AddCharges.TestAddChargesWithDXChanges -->
      <class name="com.bms.M6.Scheduler.TestScheduleAppointment">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407]" name="setup" is-config="true" duration-ms="4830" started-at="2018-05-10T03:34:55Z" finished-at="2018-05-10T03:35:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407]" name="setup" is-config="true" duration-ms="28365" started-at="2018-05-10T03:35:00Z" finished-at="2018-05-10T03:35:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleAppointment.testQuickSchedule() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testQuickSchedule()[pri:1, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407]" name="testQuickSchedule" duration-ms="108045" started-at="2018-05-10T03:35:29Z" finished-at="2018-05-10T03:37:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQuickSchedule -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407]" name="afterMethod" is-config="true" duration-ms="299" started-at="2018-05-10T03:37:17Z" finished-at="2018-05-10T03:37:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testQuickSchedule status=SUCCESS method=TestScheduleAppointment.testQuickSchedule()[pri:1, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407]" name="setup" is-config="true" duration-ms="19398" started-at="2018-05-10T03:37:17Z" finished-at="2018-05-10T03:37:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleAppointment.testAddpatientMandatoryfieldsScheduler()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testAddpatientMandatoryfieldsScheduler()[pri:2, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407]" name="testAddpatientMandatoryfieldsScheduler" duration-ms="19078" started-at="2018-05-10T03:37:36Z" finished-at="2018-05-10T03:37:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddpatientMandatoryfieldsScheduler -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407]" name="afterMethod" is-config="true" duration-ms="162" started-at="2018-05-10T03:37:55Z" finished-at="2018-05-10T03:37:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testAddpatientMandatoryfieldsScheduler status=SUCCESS method=TestScheduleAppointment.testAddpatientMandatoryfieldsScheduler()[pri:2, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407]" name="setup" is-config="true" duration-ms="20893" started-at="2018-05-10T03:37:56Z" finished-at="2018-05-10T03:38:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleAppointment.testValidateCaseName() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testValidateCaseName()[pri:3, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407]" name="testValidateCaseName" duration-ms="50683" started-at="2018-05-10T03:38:16Z" finished-at="2018-05-10T03:39:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateCaseName -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407]" name="afterMethod" is-config="true" duration-ms="185" started-at="2018-05-10T03:39:07Z" finished-at="2018-05-10T03:39:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidateCaseName status=SUCCESS method=TestScheduleAppointment.testValidateCaseName()[pri:3, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407]" name="setup" is-config="true" duration-ms="21857" started-at="2018-05-10T03:39:07Z" finished-at="2018-05-10T03:39:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleAppointment.testValidateNewCaseAppointment() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testValidateNewCaseAppointment()[pri:4, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407]" name="testValidateNewCaseAppointment" duration-ms="38526" started-at="2018-05-10T03:39:29Z" finished-at="2018-05-10T03:40:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidateNewCaseAppointment -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407]" name="afterMethod" is-config="true" duration-ms="210" started-at="2018-05-10T03:40:08Z" finished-at="2018-05-10T03:40:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testValidateNewCaseAppointment status=SUCCESS method=TestScheduleAppointment.testValidateNewCaseAppointment()[pri:4, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointment@4883b407]" name="closedrivers" is-config="true" duration-ms="5267" started-at="2018-05-10T03:40:08Z" finished-at="2018-05-10T03:40:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M6.Scheduler.TestScheduleAppointment -->
      <class name="com.bms.M13.Task.TestTaskFunctionality">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M13.Task.TestTaskFunctionality@544fe44c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestTaskFunctionality@544fe44c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="AddTaskGroupWithNoUsers()[pri:1, instance:com.bms.M13.Task.TestTaskFunctionality@544fe44c]" name="AddTaskGroupWithNoUsers" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddTaskGroupWithNoUsers -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestTaskFunctionality@544fe44c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M13.Task.TestTaskFunctionality@544fe44c]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M13.Task.TestTaskFunctionality -->
      <class name="com.bms.M9.AddCharges.TestPaymentDropDowns">
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestPaymentDropDowns@3fee9989]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="DefaultPaymentCodeWithAmountTocollect_BMSUSER()[pri:1, instance:com.bms.M9.AddCharges.TestPaymentDropDowns@3fee9989]" name="DefaultPaymentCodeWithAmountTocollect_BMSUSER" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DefaultPaymentCodeWithAmountTocollect_BMSUSER -->
        <test-method status="SKIP" signature="DefaultPaymentCodeWithAmountTocollect_FrontOfficeStaffUser()[pri:3, instance:com.bms.M9.AddCharges.TestPaymentDropDowns@3fee9989]" name="DefaultPaymentCodeWithAmountTocollect_FrontOfficeStaffUser" duration-ms="1" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DefaultPaymentCodeWithAmountTocollect_FrontOfficeStaffUser -->
        <test-method status="SKIP" signature="DefaultPaymentCodeWithAmountTocollect_PartnerUser()[pri:2, instance:com.bms.M9.AddCharges.TestPaymentDropDowns@3fee9989]" name="DefaultPaymentCodeWithAmountTocollect_PartnerUser" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DefaultPaymentCodeWithAmountTocollect_PartnerUser -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestPaymentDropDowns@3fee9989]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestPaymentDropDowns@3fee9989]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestPaymentDropDowns@3fee9989]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestPaymentDropDowns@3fee9989]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestPaymentDropDowns@3fee9989]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestPaymentDropDowns@3fee9989]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestPaymentDropDowns@3fee9989]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M9.AddCharges.TestPaymentDropDowns -->
      <class name="com.bms.M14.PQRS.TestPQRSAvailability">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M14.PQRS.TestPQRSAvailability@78c03f1f]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M14.PQRS.TestPQRSAvailability@78c03f1f]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M14.PQRS.TestPQRSAvailability@78c03f1f]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="PQRSMeasures()[pri:1, instance:com.bms.M14.PQRS.TestPQRSAvailability@78c03f1f]" name="PQRSMeasures" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PQRSMeasures -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M14.PQRS.TestPQRSAvailability@78c03f1f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M14.PQRS.TestPQRSAvailability -->
      <class name="com.bms.M5.Notes.TestCreateNoteNoProvider">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M5.Notes.TestCreateNoteNoProvider@67784306]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteNoProvider@67784306]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteNoProvider@67784306]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteNoProvider@67784306]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M5.Notes.TestCreateNoteNoProvider@67784306]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="ValidateBodyPartsList()[pri:3, instance:com.bms.M5.Notes.TestCreateNoteNoProvider@67784306]" name="ValidateBodyPartsList" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateBodyPartsList -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteNoProvider@67784306]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteNoProvider@67784306]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M5.Notes.TestCreateNoteNoProvider@67784306]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="create_note_from_provider_home_page()[pri:2, instance:com.bms.M5.Notes.TestCreateNoteNoProvider@67784306]" name="create_note_from_provider_home_page" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- create_note_from_provider_home_page -->
        <test-method status="SKIP" signature="UserdontHaveRightToCreateNote()[pri:1, instance:com.bms.M5.Notes.TestCreateNoteNoProvider@67784306]" name="UserdontHaveRightToCreateNote" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserdontHaveRightToCreateNote -->
      </class> <!-- com.bms.M5.Notes.TestCreateNoteNoProvider -->
      <class name="com.bms.M6.Scheduler.TestScheduleFutureAppointment">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M6.Scheduler.TestScheduleFutureAppointment@39c0f4a]" name="setup" is-config="true" duration-ms="4670" started-at="2018-05-10T03:45:00Z" finished-at="2018-05-10T03:45:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleFutureAppointment@39c0f4a]" name="setup" is-config="true" duration-ms="31198" started-at="2018-05-10T03:45:05Z" finished-at="2018-05-10T03:45:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleFutureAppointment.TestCreatefutureAppointment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestCreatefutureAppointment()[pri:1, instance:com.bms.M6.Scheduler.TestScheduleFutureAppointment@39c0f4a]" name="TestCreatefutureAppointment" duration-ms="45327" started-at="2018-05-10T03:45:36Z" finished-at="2018-05-10T03:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCreatefutureAppointment -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleFutureAppointment@39c0f4a]" name="afterMethod" is-config="true" duration-ms="194" started-at="2018-05-10T03:46:22Z" finished-at="2018-05-10T03:46:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestCreatefutureAppointment status=SUCCESS method=TestScheduleFutureAppointment.TestCreatefutureAppointment()[pri:1, instance:com.bms.M6.Scheduler.TestScheduleFutureAppointment@39c0f4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleFutureAppointment@39c0f4a]" name="setup" is-config="true" duration-ms="18179" started-at="2018-05-10T03:46:22Z" finished-at="2018-05-10T03:46:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleFutureAppointment.TestCreatePastAppointment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestCreatePastAppointment()[pri:2, instance:com.bms.M6.Scheduler.TestScheduleFutureAppointment@39c0f4a]" name="TestCreatePastAppointment" duration-ms="56539" started-at="2018-05-10T03:46:40Z" finished-at="2018-05-10T03:47:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCreatePastAppointment -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleFutureAppointment@39c0f4a]" name="afterMethod" is-config="true" duration-ms="160" started-at="2018-05-10T03:47:36Z" finished-at="2018-05-10T03:47:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestCreatePastAppointment status=SUCCESS method=TestScheduleFutureAppointment.TestCreatePastAppointment()[pri:2, instance:com.bms.M6.Scheduler.TestScheduleFutureAppointment@39c0f4a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M6.Scheduler.TestScheduleFutureAppointment@39c0f4a]" name="closedrivers" is-config="true" duration-ms="5224" started-at="2018-05-10T03:47:37Z" finished-at="2018-05-10T03:47:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M6.Scheduler.TestScheduleFutureAppointment -->
      <class name="com.bms.M1.Login.TestValidLogin">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M1.Login.TestValidLogin@3632be31]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testvalidlogin()[pri:1, instance:com.bms.M1.Login.TestValidLogin@3632be31]" name="testvalidlogin" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testvalidlogin -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M1.Login.TestValidLogin@3632be31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="testHyperlinks()[pri:2, instance:com.bms.M1.Login.TestValidLogin@3632be31]" name="testHyperlinks" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testHyperlinks -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M1.Login.TestValidLogin@3632be31]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M1.Login.TestValidLogin@3632be31]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M1.Login.TestValidLogin@3632be31]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M1.Login.TestValidLogin@3632be31]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M1.Login.TestValidLogin -->
      <class name="com.bms.M6.Scheduler.TestScheduleMeeting">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="setup" is-config="true" duration-ms="4664" started-at="2018-05-10T03:47:42Z" finished-at="2018-05-10T03:47:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="setup" is-config="true" duration-ms="29536" started-at="2018-05-10T03:47:47Z" finished-at="2018-05-10T03:48:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleMeeting.NoShowAppointment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="NoShowAppointment()[pri:1, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="NoShowAppointment" duration-ms="53044" started-at="2018-05-10T03:48:16Z" finished-at="2018-05-10T03:49:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NoShowAppointment -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="afterMethod" is-config="true" duration-ms="209" started-at="2018-05-10T03:49:09Z" finished-at="2018-05-10T03:49:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NoShowAppointment status=SUCCESS method=TestScheduleMeeting.NoShowAppointment()[pri:1, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="setup" is-config="true" duration-ms="20590" started-at="2018-05-10T03:49:09Z" finished-at="2018-05-10T03:49:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleMeeting.QuickrReScheduleAppointment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="QuickrReScheduleAppointment()[pri:2, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="QuickrReScheduleAppointment" duration-ms="41646" started-at="2018-05-10T03:49:30Z" finished-at="2018-05-10T03:50:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QuickrReScheduleAppointment -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="afterMethod" is-config="true" duration-ms="195" started-at="2018-05-10T03:50:12Z" finished-at="2018-05-10T03:50:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QuickrReScheduleAppointment status=SUCCESS method=TestScheduleMeeting.QuickrReScheduleAppointment()[pri:2, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="setup" is-config="true" duration-ms="15591" started-at="2018-05-10T03:50:12Z" finished-at="2018-05-10T03:50:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleMeeting.CancelAppointment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="CancelAppointment()[pri:4, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="CancelAppointment" duration-ms="45952" started-at="2018-05-10T03:50:27Z" finished-at="2018-05-10T03:51:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CancelAppointment -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="afterMethod" is-config="true" duration-ms="183" started-at="2018-05-10T03:51:13Z" finished-at="2018-05-10T03:51:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CancelAppointment status=SUCCESS method=TestScheduleMeeting.CancelAppointment()[pri:4, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="setup" is-config="true" duration-ms="17829" started-at="2018-05-10T03:51:13Z" finished-at="2018-05-10T03:51:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleMeeting.ArrivedAppointment()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="ArrivedAppointment()[pri:5, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="ArrivedAppointment" duration-ms="50281" started-at="2018-05-10T03:51:31Z" finished-at="2018-05-10T03:52:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ArrivedAppointment -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="afterMethod" is-config="true" duration-ms="197" started-at="2018-05-10T03:52:22Z" finished-at="2018-05-10T03:52:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ArrivedAppointment status=SUCCESS method=TestScheduleMeeting.ArrivedAppointment()[pri:5, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="setup" is-config="true" duration-ms="14630" started-at="2018-05-10T03:52:22Z" finished-at="2018-05-10T03:52:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleMeeting.QuickScheduleMeeting()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="QuickScheduleMeeting()[pri:6, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="QuickScheduleMeeting" duration-ms="57110" started-at="2018-05-10T03:52:36Z" finished-at="2018-05-10T03:53:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- QuickScheduleMeeting -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="afterMethod" is-config="true" duration-ms="200" started-at="2018-05-10T03:53:34Z" finished-at="2018-05-10T03:53:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=QuickScheduleMeeting status=SUCCESS method=TestScheduleMeeting.QuickScheduleMeeting()[pri:6, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M6.Scheduler.TestScheduleMeeting@1794d431]" name="closedrivers" is-config="true" duration-ms="6034" started-at="2018-05-10T03:53:34Z" finished-at="2018-05-10T03:53:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M6.Scheduler.TestScheduleMeeting -->
      <class name="com.bms.M13.Task.TestWaitList">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestWaitList@2038ae61]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestSavingWithOutEnteringData()[pri:1, instance:com.bms.M13.Task.TestWaitList@2038ae61]" name="TestSavingWithOutEnteringData" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestSavingWithOutEnteringData -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestWaitList@2038ae61]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M13.Task.TestWaitList@2038ae61]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestWaitList@2038ae61]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestAddingPatientToWaitList()[pri:2, instance:com.bms.M13.Task.TestWaitList@2038ae61]" name="TestAddingPatientToWaitList" duration-ms="1" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestAddingPatientToWaitList -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestWaitList@2038ae61]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestDeletePatientformWaitList()[pri:3, instance:com.bms.M13.Task.TestWaitList@2038ae61]" name="TestDeletePatientformWaitList" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestDeletePatientformWaitList -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M13.Task.TestWaitList@2038ae61]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestWaitList@2038ae61]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestWaitList@2038ae61]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M13.Task.TestWaitList -->
      <class name="com.bms.M14.PQRS.TestPQRSprompt">
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M14.PQRS.TestPQRSprompt@5ec0a365]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M14.PQRS.TestPQRSprompt@5ec0a365]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="PQRSpromptHardStop()[pri:1, instance:com.bms.M14.PQRS.TestPQRSprompt@5ec0a365]" name="PQRSpromptHardStop" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PQRSpromptHardStop -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M14.PQRS.TestPQRSprompt@5ec0a365]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M14.PQRS.TestPQRSprompt@5ec0a365]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M14.PQRS.TestPQRSprompt -->
      <class name="com.bms.M9.AddCharges.TestValidatePre_AuthCounter">
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestValidatePre_AuthCounter@6fd02e5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestValidatePre_AuthCounter@6fd02e5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestValidatePre_AuthCounter@6fd02e5]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestValidatePre_AuthCounter@6fd02e5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestPlanofcareexpired()[pri:3, instance:com.bms.M9.AddCharges.TestValidatePre_AuthCounter@6fd02e5]" name="TestPlanofcareexpired" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestPlanofcareexpired -->
        <test-method status="SKIP" signature="ValidatePreAuthValuesAddchargeDropdown()[pri:1, instance:com.bms.M9.AddCharges.TestValidatePre_AuthCounter@6fd02e5]" name="ValidatePreAuthValuesAddchargeDropdown" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidatePreAuthValuesAddchargeDropdown -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestValidatePre_AuthCounter@6fd02e5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestValidatePre_AuthCounter@6fd02e5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestProviderPOSLink()[pri:2, instance:com.bms.M9.AddCharges.TestValidatePre_AuthCounter@6fd02e5]" name="TestProviderPOSLink" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestProviderPOSLink -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestValidatePre_AuthCounter@6fd02e5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestValidatePre_AuthCounter@6fd02e5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M9.AddCharges.TestValidatePre_AuthCounter -->
      <class name="com.bms.M14.PQRS.TestPQRSHardstop">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M14.PQRS.TestPQRSHardstop@5ce81285]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M14.PQRS.TestPQRSHardstop@5ce81285]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M14.PQRS.TestPQRSHardstop@5ce81285]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="PQRS_HardStop_ViewPastData_PT()[pri:1, instance:com.bms.M14.PQRS.TestPQRSHardstop@5ce81285]" name="PQRS_HardStop_ViewPastData_PT" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PQRS_HardStop_ViewPastData_PT -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M14.PQRS.TestPQRSHardstop@5ce81285]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M14.PQRS.TestPQRSHardstop -->
      <class name="com.bms.M8.FLR.TestFLR10THVisitPromtNoAddendum">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M8.FLR.TestFLR10THVisitPromtNoAddendum@5f341870]" name="setup" is-config="true" duration-ms="4630" started-at="2018-05-10T08:31:29Z" finished-at="2018-05-10T08:31:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M8.FLR.TestFLR10THVisitPromtNoAddendum@5f341870]" name="setup" is-config="true" duration-ms="29697" started-at="2018-05-10T08:31:33Z" finished-at="2018-05-10T08:32:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M8.FLR.TestFLR10THVisitPromtNoAddendum.FLR10thVisitnoAddendum() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="FLR10thVisitnoAddendum()[pri:1, instance:com.bms.M8.FLR.TestFLR10THVisitPromtNoAddendum@5f341870]" name="FLR10thVisitnoAddendum" duration-ms="1581828" started-at="2018-05-10T08:32:03Z" finished-at="2018-05-10T08:58:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FLR10thVisitnoAddendum -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M8.FLR.TestFLR10THVisitPromtNoAddendum@5f341870]" name="afterMethod" is-config="true" duration-ms="238" started-at="2018-05-10T08:58:25Z" finished-at="2018-05-10T08:58:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FLR10thVisitnoAddendum status=SUCCESS method=TestFLR10THVisitPromtNoAddendum.FLR10thVisitnoAddendum()[pri:1, instance:com.bms.M8.FLR.TestFLR10THVisitPromtNoAddendum@5f341870] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M8.FLR.TestFLR10THVisitPromtNoAddendum@5f341870]" name="closedrivers" is-config="true" duration-ms="5950" started-at="2018-05-10T08:58:25Z" finished-at="2018-05-10T08:58:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M8.FLR.TestFLR10THVisitPromtNoAddendum -->
      <class name="com.bms.M7.APage.TestAPage">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M7.APage.TestAPage@754ba872]" name="setup" is-config="true" duration-ms="4753" started-at="2018-05-10T06:10:43Z" finished-at="2018-05-10T06:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPage@754ba872]" name="setup" is-config="true" duration-ms="30195" started-at="2018-05-10T06:10:48Z" finished-at="2018-05-10T06:11:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPage.required_field_indicators() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="required_field_indicators()[pri:1, instance:com.bms.M7.APage.TestAPage@754ba872]" name="required_field_indicators" duration-ms="128002" started-at="2018-05-10T06:11:18Z" finished-at="2018-05-10T06:13:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- required_field_indicators -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPage@754ba872]" name="afterMethod" is-config="true" duration-ms="202" started-at="2018-05-10T06:13:26Z" finished-at="2018-05-10T06:13:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=required_field_indicators status=SUCCESS method=TestAPage.required_field_indicators()[pri:1, instance:com.bms.M7.APage.TestAPage@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPage@754ba872]" name="setup" is-config="true" duration-ms="20031" started-at="2018-05-10T06:13:26Z" finished-at="2018-05-10T06:13:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPage.add_diagnosis_and_case_updates() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="add_diagnosis_and_case_updates()[pri:2, instance:com.bms.M7.APage.TestAPage@754ba872]" name="add_diagnosis_and_case_updates" duration-ms="105936" started-at="2018-05-10T06:13:47Z" finished-at="2018-05-10T06:15:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add_diagnosis_and_case_updates -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPage@754ba872]" name="afterMethod" is-config="true" duration-ms="262" started-at="2018-05-10T06:15:32Z" finished-at="2018-05-10T06:15:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=add_diagnosis_and_case_updates status=SUCCESS method=TestAPage.add_diagnosis_and_case_updates()[pri:2, instance:com.bms.M7.APage.TestAPage@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPage@754ba872]" name="setup" is-config="true" duration-ms="18906" started-at="2018-05-10T06:15:33Z" finished-at="2018-05-10T06:15:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPage.remove_diagnosis_and_case_does_NOT_update() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="remove_diagnosis_and_case_does_NOT_update()[pri:3, instance:com.bms.M7.APage.TestAPage@754ba872]" name="remove_diagnosis_and_case_does_NOT_update" duration-ms="141826" started-at="2018-05-10T06:15:52Z" finished-at="2018-05-10T06:18:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- remove_diagnosis_and_case_does_NOT_update -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPage@754ba872]" name="afterMethod" is-config="true" duration-ms="351" started-at="2018-05-10T06:18:13Z" finished-at="2018-05-10T06:18:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=remove_diagnosis_and_case_does_NOT_update status=SUCCESS method=TestAPage.remove_diagnosis_and_case_does_NOT_update()[pri:3, instance:com.bms.M7.APage.TestAPage@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPage@754ba872]" name="setup" is-config="true" duration-ms="17010" started-at="2018-05-10T06:18:14Z" finished-at="2018-05-10T06:18:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPage.Goal_table_locked_fields_and_editable_fields() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="Goal_table_locked_fields_and_editable_fields()[pri:4, instance:com.bms.M7.APage.TestAPage@754ba872]" name="Goal_table_locked_fields_and_editable_fields" duration-ms="128739" started-at="2018-05-10T06:18:31Z" finished-at="2018-05-10T06:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Goal_table_locked_fields_and_editable_fields -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPage@754ba872]" name="afterMethod" is-config="true" duration-ms="170" started-at="2018-05-10T06:20:40Z" finished-at="2018-05-10T06:20:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Goal_table_locked_fields_and_editable_fields status=SUCCESS method=TestAPage.Goal_table_locked_fields_and_editable_fields()[pri:4, instance:com.bms.M7.APage.TestAPage@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPage@754ba872]" name="setup" is-config="true" duration-ms="19994" started-at="2018-05-10T06:20:40Z" finished-at="2018-05-10T06:21:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPage.option_to_remove_goals() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="option_to_remove_goals()[pri:5, instance:com.bms.M7.APage.TestAPage@754ba872]" name="option_to_remove_goals" duration-ms="122651" started-at="2018-05-10T06:21:00Z" finished-at="2018-05-10T06:23:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- option_to_remove_goals -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPage@754ba872]" name="afterMethod" is-config="true" duration-ms="207" started-at="2018-05-10T06:23:02Z" finished-at="2018-05-10T06:23:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=option_to_remove_goals status=SUCCESS method=TestAPage.option_to_remove_goals()[pri:5, instance:com.bms.M7.APage.TestAPage@754ba872] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M7.APage.TestAPage@754ba872]" name="closedrivers" is-config="true" duration-ms="5582" started-at="2018-05-10T06:23:03Z" finished-at="2018-05-10T06:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M7.APage.TestAPage -->
      <class name="com.bms.M7.APage.TestAPageDischargeFLR">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M7.APage.TestAPageDischargeFLR@6eebc39e]" name="setup" is-config="true" duration-ms="4655" started-at="2018-05-10T06:40:55Z" finished-at="2018-05-10T06:40:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPageDischargeFLR@6eebc39e]" name="setup" is-config="true" duration-ms="30331" started-at="2018-05-10T06:40:59Z" finished-at="2018-05-10T06:41:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPageDischargeFLR.DischargeFLR() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="DischargeFLR()[pri:1, instance:com.bms.M7.APage.TestAPageDischargeFLR@6eebc39e]" name="DischargeFLR" duration-ms="420062" started-at="2018-05-10T06:41:30Z" finished-at="2018-05-10T06:48:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DischargeFLR -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPageDischargeFLR@6eebc39e]" name="afterMethod" is-config="true" duration-ms="261" started-at="2018-05-10T06:48:30Z" finished-at="2018-05-10T06:48:30Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DischargeFLR status=SUCCESS method=TestAPageDischargeFLR.DischargeFLR()[pri:1, instance:com.bms.M7.APage.TestAPageDischargeFLR@6eebc39e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M7.APage.TestAPageDischargeFLR@6eebc39e]" name="closedrivers" is-config="true" duration-ms="5520" started-at="2018-05-10T06:48:30Z" finished-at="2018-05-10T06:48:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M7.APage.TestAPageDischargeFLR -->
      <class name="com.bms.M4.Insurances.TestCaseInsurances">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="AddInsuranceAsBlueShield()[pri:1, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="AddInsuranceAsBlueShield" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddInsuranceAsBlueShield -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="AddInsuranceAsWorkerCompensation()[pri:2, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="AddInsuranceAsWorkerCompensation" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddInsuranceAsWorkerCompensation -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="AddInsuranceAsMedicare()[pri:3, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="AddInsuranceAsMedicare" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddInsuranceAsMedicare -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="AddInsuranceAsMedicareRailRoad()[pri:4, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="AddInsuranceAsMedicareRailRoad" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddInsuranceAsMedicareRailRoad -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="AddInsuranceAsTricareChampus()[pri:5, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="AddInsuranceAsTricareChampus" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddInsuranceAsTricareChampus -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M4.Insurances.TestCaseInsurances@3e9b1010]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M4.Insurances.TestCaseInsurances -->
      <class name="com.bms.M7.APage.TestAPageUpdateGoalTab">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M7.APage.TestAPageUpdateGoalTab@239963d8]" name="setup" is-config="true" duration-ms="4683" started-at="2018-05-10T07:00:18Z" finished-at="2018-05-10T07:00:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPageUpdateGoalTab@239963d8]" name="setup" is-config="true" duration-ms="32699" started-at="2018-05-10T07:00:23Z" finished-at="2018-05-10T07:00:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPageUpdateGoalTab.UpdateGoal() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="UpdateGoal()[pri:1, instance:com.bms.M7.APage.TestAPageUpdateGoalTab@239963d8]" name="UpdateGoal" duration-ms="264324" started-at="2018-05-10T07:00:56Z" finished-at="2018-05-10T07:05:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UpdateGoal -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPageUpdateGoalTab@239963d8]" name="afterMethod" is-config="true" duration-ms="201" started-at="2018-05-10T07:05:20Z" finished-at="2018-05-10T07:05:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UpdateGoal status=SUCCESS method=TestAPageUpdateGoalTab.UpdateGoal()[pri:1, instance:com.bms.M7.APage.TestAPageUpdateGoalTab@239963d8] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M7.APage.TestAPageUpdateGoalTab@239963d8]" name="closedrivers" is-config="true" duration-ms="5627" started-at="2018-05-10T07:05:20Z" finished-at="2018-05-10T07:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M7.APage.TestAPageUpdateGoalTab -->
      <class name="com.bms.M4.Insurances.TestRemoveInsurance">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M4.Insurances.TestRemoveInsurance@6c3708b3]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M4.Insurances.TestRemoveInsurance@6c3708b3]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testremovePrimaryInsurance()[pri:1, instance:com.bms.M4.Insurances.TestRemoveInsurance@6c3708b3]" name="testremovePrimaryInsurance" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testremovePrimaryInsurance -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M4.Insurances.TestRemoveInsurance@6c3708b3]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M4.Insurances.TestRemoveInsurance@6c3708b3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M4.Insurances.TestRemoveInsurance@6c3708b3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="testremoveSecondaryInsurance()[pri:2, instance:com.bms.M4.Insurances.TestRemoveInsurance@6c3708b3]" name="testremoveSecondaryInsurance" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testremoveSecondaryInsurance -->
        <test-method status="SKIP" signature="testremoveTertiaryInsurance()[pri:3, instance:com.bms.M4.Insurances.TestRemoveInsurance@6c3708b3]" name="testremoveTertiaryInsurance" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testremoveTertiaryInsurance -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M4.Insurances.TestRemoveInsurance@6c3708b3]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M4.Insurances.TestRemoveInsurance@6c3708b3]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M4.Insurances.TestRemoveInsurance@6c3708b3]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M4.Insurances.TestRemoveInsurance -->
      <class name="com.bms.M4.Insurances.TestMSPtypeForMedicareInsurance">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M4.Insurances.TestMSPtypeForMedicareInsurance@6f1fba17]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="MSPtypeInSecondaryInsurance()[pri:1, instance:com.bms.M4.Insurances.TestMSPtypeForMedicareInsurance@6f1fba17]" name="MSPtypeInSecondaryInsurance" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MSPtypeInSecondaryInsurance -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M4.Insurances.TestMSPtypeForMedicareInsurance@6f1fba17]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M4.Insurances.TestMSPtypeForMedicareInsurance@6f1fba17]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M4.Insurances.TestMSPtypeForMedicareInsurance@6f1fba17]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M4.Insurances.TestMSPtypeForMedicareInsurance@6f1fba17]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="MSPtypeInTertiaryInsurance()[pri:2, instance:com.bms.M4.Insurances.TestMSPtypeForMedicareInsurance@6f1fba17]" name="MSPtypeInTertiaryInsurance" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MSPtypeInTertiaryInsurance -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M4.Insurances.TestMSPtypeForMedicareInsurance@6f1fba17]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M4.Insurances.TestMSPtypeForMedicareInsurance -->
      <class name="com.bms.M11.EMR.TestNoDigitalSignature">
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestNoDigitalSignature@59494225]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="NoteFinalizeWithoutDigitalSignature()[pri:1, instance:com.bms.M11.EMR.TestNoDigitalSignature@59494225]" name="NoteFinalizeWithoutDigitalSignature" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NoteFinalizeWithoutDigitalSignature -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestNoDigitalSignature@59494225]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestNoDigitalSignature@59494225]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestNoDigitalSignature@59494225]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestNoDigitalSignature@59494225]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="NoteFinalizeIncompleteCASE()[pri:2, instance:com.bms.M11.EMR.TestNoDigitalSignature@59494225]" name="NoteFinalizeIncompleteCASE" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NoteFinalizeIncompleteCASE -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestNoDigitalSignature@59494225]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M11.EMR.TestNoDigitalSignature -->
      <class name="com.bms.M11.EMR.TestInterventionLibraries">
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestInterventionLibraries@6e06451e]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestInterventionLibraries@6e06451e]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestInterventionLibraries@6e06451e]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestInterventionLibraries@6e06451e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="Add_Edit_Delete_InterventionLibraries()[pri:1, instance:com.bms.M11.EMR.TestInterventionLibraries@6e06451e]" name="Add_Edit_Delete_InterventionLibraries" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Add_Edit_Delete_InterventionLibraries -->
      </class> <!-- com.bms.M11.EMR.TestInterventionLibraries -->
      <class name="com.bms.M6.Scheduler.TestScheduleAppointmentByView">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19]" name="setup" is-config="true" duration-ms="4481" started-at="2018-05-10T03:40:13Z" finished-at="2018-05-10T03:40:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19]" name="setup" is-config="true" duration-ms="34694" started-at="2018-05-10T03:40:18Z" finished-at="2018-05-10T03:40:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleAppointmentByView.TestAppointmentByLocation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestAppointmentByLocation()[pri:1, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19]" name="TestAppointmentByLocation" duration-ms="52806" started-at="2018-05-10T03:40:52Z" finished-at="2018-05-10T03:41:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestAppointmentByLocation -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19]" name="afterMethod" is-config="true" duration-ms="243" started-at="2018-05-10T03:41:45Z" finished-at="2018-05-10T03:41:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestAppointmentByLocation status=SUCCESS method=TestScheduleAppointmentByView.TestAppointmentByLocation()[pri:1, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19]" name="setup" is-config="true" duration-ms="19986" started-at="2018-05-10T03:41:45Z" finished-at="2018-05-10T03:42:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleAppointmentByView.TestAppointmentByProvider()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestAppointmentByProvider()[pri:2, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19]" name="TestAppointmentByProvider" duration-ms="44093" started-at="2018-05-10T03:42:05Z" finished-at="2018-05-10T03:42:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestAppointmentByProvider -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19]" name="afterMethod" is-config="true" duration-ms="198" started-at="2018-05-10T03:42:49Z" finished-at="2018-05-10T03:42:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestAppointmentByProvider status=SUCCESS method=TestScheduleAppointmentByView.TestAppointmentByProvider()[pri:2, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19]" name="setup" is-config="true" duration-ms="18821" started-at="2018-05-10T03:42:50Z" finished-at="2018-05-10T03:43:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleAppointmentByView.TestAppointmentByCompany()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestAppointmentByCompany()[pri:3, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19]" name="TestAppointmentByCompany" duration-ms="47198" started-at="2018-05-10T03:43:09Z" finished-at="2018-05-10T03:43:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestAppointmentByCompany -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19]" name="afterMethod" is-config="true" duration-ms="267" started-at="2018-05-10T03:43:56Z" finished-at="2018-05-10T03:43:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestAppointmentByCompany status=SUCCESS method=TestScheduleAppointmentByView.TestAppointmentByCompany()[pri:3, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19]" name="setup" is-config="true" duration-ms="14888" started-at="2018-05-10T03:43:56Z" finished-at="2018-05-10T03:44:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestScheduleAppointmentByView.TestAppointmentByNonProvider()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestAppointmentByNonProvider()[pri:5, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19]" name="TestAppointmentByNonProvider" duration-ms="43925" started-at="2018-05-10T03:44:11Z" finished-at="2018-05-10T03:44:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestAppointmentByNonProvider -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19]" name="afterMethod" is-config="true" duration-ms="184" started-at="2018-05-10T03:44:55Z" finished-at="2018-05-10T03:44:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestAppointmentByNonProvider status=SUCCESS method=TestScheduleAppointmentByView.TestAppointmentByNonProvider()[pri:5, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M6.Scheduler.TestScheduleAppointmentByView@7d9d1a19]" name="closedrivers" is-config="true" duration-ms="5416" started-at="2018-05-10T03:44:55Z" finished-at="2018-05-10T03:45:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M6.Scheduler.TestScheduleAppointmentByView -->
      <class name="com.bms.M9.AddCharges.TestAddAccountNotes">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestAddAccountNotes@42dafa95]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestAddAccountNotes@42dafa95]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="AddAccountNotesPatientHeader()[pri:1, instance:com.bms.M9.AddCharges.TestAddAccountNotes@42dafa95]" name="AddAccountNotesPatientHeader" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddAccountNotesPatientHeader -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestAddAccountNotes@42dafa95]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestAddAccountNotes@42dafa95]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M9.AddCharges.TestAddAccountNotes -->
      <class name="com.bms.M11.EMR.TestStudentProviderFinalizeTestCases">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestStudentProviderFinalizeTestCases@69ea3742]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="DONOTAllowStudentProvidertofinalizeVisitnotes()[pri:1, instance:com.bms.M11.EMR.TestStudentProviderFinalizeTestCases@69ea3742]" name="DONOTAllowStudentProvidertofinalizeVisitnotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DONOTAllowStudentProvidertofinalizeVisitnotes -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestStudentProviderFinalizeTestCases@69ea3742]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestStudentProviderFinalizeTestCases@69ea3742]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestStudentProviderFinalizeTestCases@69ea3742]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="AllowStudentProvidertofinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestStudentProviderFinalizeTestCases@69ea3742]" name="AllowStudentProvidertofinalizeNonVisitnotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestStudentProviderFinalizeTestCases.DONOTAllowStudentProvidertofinalizeVisitnotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestStudentProviderFinalizeTestCases.AllowStudentProvidertofinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestStudentProviderFinalizeTestCases@69ea3742] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestStudentProviderFinalizeTestCases.AllowStudentProvidertofinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestStudentProviderFinalizeTestCases@69ea3742] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowStudentProvidertofinalizeNonVisitnotes -->
        <test-method status="SKIP" signature="AllowStudentProvidertofinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestStudentProviderFinalizeTestCases@69ea3742]" name="AllowStudentProvidertofinalizNonVisitDischargenotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestStudentProviderFinalizeTestCases.DONOTAllowStudentProvidertofinalizeVisitnotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestStudentProviderFinalizeTestCases.AllowStudentProvidertofinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestStudentProviderFinalizeTestCases@69ea3742] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestStudentProviderFinalizeTestCases.AllowStudentProvidertofinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestStudentProviderFinalizeTestCases@69ea3742] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowStudentProvidertofinalizNonVisitDischargenotes -->
      </class> <!-- com.bms.M11.EMR.TestStudentProviderFinalizeTestCases -->
      <class name="com.bms.M9.AddCharges.TestViewChargesPartnerUser">
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesPartnerUser@31a5c39e]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesPartnerUser@31a5c39e]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesPartnerUser@31a5c39e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesPartnerUser@31a5c39e]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="ValidateViewChargeUserPartner()[pri:1, instance:com.bms.M9.AddCharges.TestViewChargesPartnerUser@31a5c39e]" name="ValidateViewChargeUserPartner" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateViewChargeUserPartner -->
      </class> <!-- com.bms.M9.AddCharges.TestViewChargesPartnerUser -->
      <class name="com.bms.M6.Scheduler.TestProviderHomePageLayout">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePageLayout@1a968a59]" name="setup" is-config="true" duration-ms="4735" started-at="2018-05-10T04:36:30Z" finished-at="2018-05-10T04:36:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePageLayout@1a968a59]" name="setup" is-config="true" duration-ms="32118" started-at="2018-05-10T04:36:35Z" finished-at="2018-05-10T04:37:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProviderHomePageLayout.TestProviderHomePageLayoutValidation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestProviderHomePageLayoutValidation()[pri:1, instance:com.bms.M6.Scheduler.TestProviderHomePageLayout@1a968a59]" name="TestProviderHomePageLayoutValidation" duration-ms="57942" started-at="2018-05-10T04:37:07Z" finished-at="2018-05-10T04:38:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestProviderHomePageLayoutValidation -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePageLayout@1a968a59]" name="afterMethod" is-config="true" duration-ms="201" started-at="2018-05-10T04:38:05Z" finished-at="2018-05-10T04:38:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestProviderHomePageLayoutValidation status=SUCCESS method=TestProviderHomePageLayout.TestProviderHomePageLayoutValidation()[pri:1, instance:com.bms.M6.Scheduler.TestProviderHomePageLayout@1a968a59] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePageLayout@1a968a59]" name="setup" is-config="true" duration-ms="20121" started-at="2018-05-10T04:38:05Z" finished-at="2018-05-10T04:38:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProviderHomePageLayout.TestNonProviderHomePage() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestNonProviderHomePage()[pri:4, instance:com.bms.M6.Scheduler.TestProviderHomePageLayout@1a968a59]" name="TestNonProviderHomePage" duration-ms="17771" started-at="2018-05-10T04:38:25Z" finished-at="2018-05-10T04:38:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNonProviderHomePage -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePageLayout@1a968a59]" name="afterMethod" is-config="true" duration-ms="171" started-at="2018-05-10T04:38:43Z" finished-at="2018-05-10T04:38:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestNonProviderHomePage status=SUCCESS method=TestProviderHomePageLayout.TestNonProviderHomePage()[pri:4, instance:com.bms.M6.Scheduler.TestProviderHomePageLayout@1a968a59] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePageLayout@1a968a59]" name="setup" is-config="true" duration-ms="17082" started-at="2018-05-10T04:38:43Z" finished-at="2018-05-10T04:39:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProviderHomePageLayout.TestProviderHomePageFilter() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestProviderHomePageFilter()[pri:3, instance:com.bms.M6.Scheduler.TestProviderHomePageLayout@1a968a59]" name="TestProviderHomePageFilter" duration-ms="175188" started-at="2018-05-10T04:39:00Z" depends-on-methods="com.bms.M6.Scheduler.TestProviderHomePageLayout.TestProviderHomePageLayoutValidation" finished-at="2018-05-10T04:41:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestProviderHomePageFilter -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePageLayout@1a968a59]" name="afterMethod" is-config="true" duration-ms="210" started-at="2018-05-10T04:41:56Z" finished-at="2018-05-10T04:41:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestProviderHomePageFilter status=SUCCESS method=TestProviderHomePageLayout.TestProviderHomePageFilter()[pri:3, instance:com.bms.M6.Scheduler.TestProviderHomePageLayout@1a968a59] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePageLayout@1a968a59]" name="closedrivers" is-config="true" duration-ms="5173" started-at="2018-05-10T04:41:56Z" finished-at="2018-05-10T04:42:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M6.Scheduler.TestProviderHomePageLayout -->
      <class name="com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor@204f30ec]" name="setup" is-config="true" duration-ms="4740" started-at="2018-05-10T05:52:22Z" finished-at="2018-05-10T05:52:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor@204f30ec]" name="setup" is-config="true" duration-ms="48997" started-at="2018-05-10T05:52:26Z" finished-at="2018-05-10T05:53:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor.testProviderHomeScheduleAppointmnet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testProviderHomeScheduleAppointmnet()[pri:1, instance:com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor@204f30ec]" name="testProviderHomeScheduleAppointmnet" duration-ms="258174" started-at="2018-05-10T05:53:15Z" finished-at="2018-05-10T05:57:34Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.AssertionError: Error in saving appointmentjava.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1922)
	at com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor.testProviderHomeScheduleAppointmnet(TestProviderHomePageNoteStatusColor.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1935)
	at com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor.testProviderHomeScheduleAppointmnet(TestProviderHomePageNoteStatusColor.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.AssertionError: Error in saving appointmentjava.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1922)
	at com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor.testProviderHomeScheduleAppointmnet(TestProviderHomePageNoteStatusColor.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1935)
	at com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor.testProviderHomeScheduleAppointmnet(TestProviderHomePageNoteStatusColor.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor.testProviderHomeScheduleAppointmnet(TestProviderHomePageNoteStatusColor.java:278)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProviderHomeScheduleAppointmnet -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor@204f30ec]" name="afterMethod" is-config="true" duration-ms="178" started-at="2018-05-10T05:57:34Z" finished-at="2018-05-10T05:57:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProviderHomeScheduleAppointmnet status=SKIP method=TestProviderHomePageNoteStatusColor.testProviderHomeScheduleAppointmnet()[pri:1, instance:com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor@204f30ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor@204f30ec]" name="setup" is-config="true" duration-ms="23979" started-at="2018-05-10T05:57:34Z" finished-at="2018-05-10T05:57:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor.testProviderHomeScheduleAppointmnet()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testProviderHomeScheduleAppointmnet()[pri:1, instance:com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor@204f30ec]" name="testProviderHomeScheduleAppointmnet" duration-ms="458031" started-at="2018-05-10T05:57:58Z" finished-at="2018-05-10T06:05:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProviderHomeScheduleAppointmnet -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor@204f30ec]" name="afterMethod" is-config="true" duration-ms="183" started-at="2018-05-10T06:05:36Z" finished-at="2018-05-10T06:05:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testProviderHomeScheduleAppointmnet status=SUCCESS method=TestProviderHomePageNoteStatusColor.testProviderHomeScheduleAppointmnet()[pri:1, instance:com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor@204f30ec] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor@204f30ec]" name="closedrivers" is-config="true" duration-ms="5361" started-at="2018-05-10T06:05:36Z" finished-at="2018-05-10T06:05:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M6.Scheduler.TestProviderHomePageNoteStatusColor -->
      <class name="com.bms.M15.ArrivalAlert.TestArrivalAlert">
        <test-method status="SKIP" signature="TestArrivalAlertPopupComeWhenAdditionalAlertsareCheckedAnDCancelFunctionality()[pri:3, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="TestArrivalAlertPopupComeWhenAdditionalAlertsareCheckedAnDCancelFunctionality" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestArrivalAlertPopupComeWhenAdditionalAlertsareCheckedAnDCancelFunctionality -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestArrivalAlertPopupComeWhenAdditionalAlertsareCheckedAnDDismissFunctionality()[pri:2, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="TestArrivalAlertPopupComeWhenAdditionalAlertsareCheckedAnDDismissFunctionality" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestArrivalAlertPopupComeWhenAdditionalAlertsareCheckedAnDDismissFunctionality -->
        <test-method status="SKIP" signature="TestArrivalAlertIconNotPresentOnNonProviderPage()[pri:1, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="TestArrivalAlertIconNotPresentOnNonProviderPage" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestArrivalAlertIconNotPresentOnNonProviderPage -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestArrivalAlertPopupDontComeWhenAdditionalAlertsareUnCheckedAndDismissFunctionality()[pri:4, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="TestArrivalAlertPopupDontComeWhenAdditionalAlertsareUnCheckedAndDismissFunctionality" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestArrivalAlertPopupDontComeWhenAdditionalAlertsareUnCheckedAndDismissFunctionality -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="TestArrivalAlertDismissAllFunctionality()[pri:5, instance:com.bms.M15.ArrivalAlert.TestArrivalAlert@20398b7c]" name="TestArrivalAlertDismissAllFunctionality" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestArrivalAlertDismissAllFunctionality -->
      </class> <!-- com.bms.M15.ArrivalAlert.TestArrivalAlert -->
      <class name="com.bms.M7.APage.TestAPageDropDownValidations">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M7.APage.TestAPageDropDownValidations@464bee09]" name="setup" is-config="true" duration-ms="4606" started-at="2018-05-10T06:48:36Z" finished-at="2018-05-10T06:48:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPageDropDownValidations@464bee09]" name="setup" is-config="true" duration-ms="32234" started-at="2018-05-10T06:48:40Z" finished-at="2018-05-10T06:49:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPageDropDownValidations.kx_modifier() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="kx_modifier()[pri:1, instance:com.bms.M7.APage.TestAPageDropDownValidations@464bee09]" name="kx_modifier" duration-ms="272959" started-at="2018-05-10T06:49:12Z" finished-at="2018-05-10T06:53:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- kx_modifier -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPageDropDownValidations@464bee09]" name="afterMethod" is-config="true" duration-ms="201" started-at="2018-05-10T06:53:45Z" finished-at="2018-05-10T06:53:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=kx_modifier status=SUCCESS method=TestAPageDropDownValidations.kx_modifier()[pri:1, instance:com.bms.M7.APage.TestAPageDropDownValidations@464bee09] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M7.APage.TestAPageDropDownValidations@464bee09]" name="closedrivers" is-config="true" duration-ms="5430" started-at="2018-05-10T06:53:46Z" finished-at="2018-05-10T06:53:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M7.APage.TestAPageDropDownValidations -->
      <class name="com.bms.M11.EMR.TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected">
        <test-method status="SKIP" signature="DONOTAlowTreatingProvideToFinalizeVisitNotes()[pri:1, instance:com.bms.M11.EMR.TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected@49993335]" name="DONOTAlowTreatingProvideToFinalizeVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DONOTAlowTreatingProvideToFinalizeVisitNotes -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected@49993335]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected@49993335]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected@49993335]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected@49993335]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="AllowTreatingProviderToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected@49993335]" name="AllowTreatingProviderToFinalizNonVisitDischargenotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected.DONOTAlowTreatingProvideToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected.AllowTreatingProviderToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected@49993335] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected.AllowTreatingProviderToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected@49993335] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowTreatingProviderToFinalizNonVisitDischargenotes -->
        <test-method status="SKIP" signature="AllowTreatingProviderToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected@49993335]" name="AllowTreatingProviderToFINALIZENOnVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected.DONOTAlowTreatingProvideToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected.AllowTreatingProviderToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected@49993335] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected.AllowTreatingProviderToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected@49993335] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowTreatingProviderToFINALIZENOnVisitNotes -->
      </class> <!-- com.bms.M11.EMR.TestTreatingProviderwithAllowedCheckInclinicsetupIsNotSelected -->
      <class name="com.bms.M9.AddCharges.TestViewChargesCustomerUser">
        <test-method status="SKIP" signature="ValidateAddChargesUserCustomer()[pri:1, instance:com.bms.M9.AddCharges.TestViewChargesCustomerUser@5f2108b5]" name="ValidateAddChargesUserCustomer" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateAddChargesUserCustomer -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesCustomerUser@5f2108b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesCustomerUser@5f2108b5]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesCustomerUser@5f2108b5]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesCustomerUser@5f2108b5]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M9.AddCharges.TestViewChargesCustomerUser -->
      <class name="com.bms.M11.EMR.TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected">
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected@4bec1f0c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected@4bec1f0c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected@4bec1f0c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="DONOTAlowStudentToFinalizeVisitNotes()[pri:1, instance:com.bms.M11.EMR.TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected@4bec1f0c]" name="DONOTAlowStudentToFinalizeVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DONOTAlowStudentToFinalizeVisitNotes -->
        <test-method status="SKIP" signature="AllowStudentToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected@4bec1f0c]" name="AllowStudentToFinalizNonVisitDischargenotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected.DONOTAlowStudentToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected.AllowStudentToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected@4bec1f0c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected.AllowStudentToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected@4bec1f0c] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowStudentToFinalizNonVisitDischargenotes -->
        <test-method status="SKIP" signature="AllowStudentToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected@4bec1f0c]" name="AllowStudentToFINALIZENOnVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected.DONOTAlowStudentToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected.AllowStudentToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected@4bec1f0c] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected.AllowStudentToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected@4bec1f0c] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowStudentToFINALIZENOnVisitNotes -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected@4bec1f0c]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M11.EMR.TestStudentProviderwithAllowedCheckInclinicsetupIsNotSelected -->
      <class name="com.bms.M2.Patient.TestMedicare">
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M2.Patient.TestMedicare@2286778]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M2.Patient.TestMedicare@2286778]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M2.Patient.TestMedicare@2286778]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testQuickAddPatientwithBlankMedicareErrorMessage()[pri:1, instance:com.bms.M2.Patient.TestMedicare@2286778]" name="testQuickAddPatientwithBlankMedicareErrorMessage" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQuickAddPatientwithBlankMedicareErrorMessage -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M2.Patient.TestMedicare@2286778]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M2.Patient.TestMedicare -->
      <class name="com.bms.M11.EMR.TestSignNoteWithCompleteSOAPdataWithAddendum">
        <test-method status="SKIP" signature="InitialVisitWithAddendum()[pri:1, instance:com.bms.M11.EMR.TestSignNoteWithCompleteSOAPdataWithAddendum@5702b3b1]" name="InitialVisitWithAddendum" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InitialVisitWithAddendum -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithCompleteSOAPdataWithAddendum@5702b3b1]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithCompleteSOAPdataWithAddendum@5702b3b1]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithCompleteSOAPdataWithAddendum@5702b3b1]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithCompleteSOAPdataWithAddendum@5702b3b1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M11.EMR.TestSignNoteWithCompleteSOAPdataWithAddendum -->
      <class name="com.bms.M11.EMR.TestSignandFinalizeAddendum">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestSignandFinalizeAddendum@1ed4004b]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestSignandFinalizeAddendum@1ed4004b]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignandFinalizeAddendum@1ed4004b]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="SignandFinalizeNoteandAddAddendum()[pri:2, instance:com.bms.M11.EMR.TestSignandFinalizeAddendum@1ed4004b]" name="SignandFinalizeNoteandAddAddendum" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignandFinalizeNoteandAddAddendum -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignandFinalizeAddendum@1ed4004b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignandFinalizeAddendum@1ed4004b]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="SignandFinalizeOverriderequiredfiels()[pri:1, instance:com.bms.M11.EMR.TestSignandFinalizeAddendum@1ed4004b]" name="SignandFinalizeOverriderequiredfiels" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignandFinalizeOverriderequiredfiels -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignandFinalizeAddendum@1ed4004b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M11.EMR.TestSignandFinalizeAddendum -->
      <class name="com.bms.M6.Scheduler.TestRecurringAppointment">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7]" name="setup" is-config="true" duration-ms="4776" started-at="2018-05-10T04:28:08Z" finished-at="2018-05-10T04:28:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7]" name="setup" is-config="true" duration-ms="30676" started-at="2018-05-10T04:28:13Z" finished-at="2018-05-10T04:28:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestRecurringAppointment.TestAddRecurringAppointment() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestAddRecurringAppointment()[pri:1, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7]" name="TestAddRecurringAppointment" duration-ms="74723" started-at="2018-05-10T04:28:43Z" finished-at="2018-05-10T04:29:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestAddRecurringAppointment -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7]" name="afterMethod" is-config="true" duration-ms="162" started-at="2018-05-10T04:29:58Z" finished-at="2018-05-10T04:29:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestAddRecurringAppointment status=SUCCESS method=TestRecurringAppointment.TestAddRecurringAppointment()[pri:1, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7]" name="setup" is-config="true" duration-ms="18338" started-at="2018-05-10T04:29:58Z" finished-at="2018-05-10T04:30:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestRecurringAppointment.TestEditOccurrenceRecurringAppointment() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestEditOccurrenceRecurringAppointment()[pri:0, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7]" name="TestEditOccurrenceRecurringAppointment" duration-ms="56796" started-at="2018-05-10T04:30:17Z" depends-on-methods="com.bms.M6.Scheduler.TestRecurringAppointment.TestAddRecurringAppointment" finished-at="2018-05-10T04:31:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestEditOccurrenceRecurringAppointment -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7]" name="afterMethod" is-config="true" duration-ms="176" started-at="2018-05-10T04:31:13Z" finished-at="2018-05-10T04:31:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestEditOccurrenceRecurringAppointment status=SUCCESS method=TestRecurringAppointment.TestEditOccurrenceRecurringAppointment()[pri:0, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7]" name="setup" is-config="true" duration-ms="15717" started-at="2018-05-10T04:31:14Z" finished-at="2018-05-10T04:31:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestRecurringAppointment.TestEditSeriesRecurringAppointment() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestEditSeriesRecurringAppointment()[pri:0, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7]" name="TestEditSeriesRecurringAppointment" duration-ms="64011" started-at="2018-05-10T04:31:29Z" depends-on-methods="com.bms.M6.Scheduler.TestRecurringAppointment.TestAddRecurringAppointment" finished-at="2018-05-10T04:32:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestEditSeriesRecurringAppointment -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7]" name="afterMethod" is-config="true" duration-ms="173" started-at="2018-05-10T04:32:33Z" finished-at="2018-05-10T04:32:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestEditSeriesRecurringAppointment status=SUCCESS method=TestRecurringAppointment.TestEditSeriesRecurringAppointment()[pri:0, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7]" name="setup" is-config="true" duration-ms="18006" started-at="2018-05-10T04:32:34Z" finished-at="2018-05-10T04:32:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestRecurringAppointment.TestCancelRecurringAppointment() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestCancelRecurringAppointment()[pri:4, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7]" name="TestCancelRecurringAppointment" duration-ms="83553" started-at="2018-05-10T04:32:52Z" depends-on-methods="com.bms.M6.Scheduler.TestRecurringAppointment.TestAddRecurringAppointment" finished-at="2018-05-10T04:34:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCancelRecurringAppointment -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7]" name="afterMethod" is-config="true" duration-ms="147" started-at="2018-05-10T04:34:15Z" finished-at="2018-05-10T04:34:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestCancelRecurringAppointment status=SUCCESS method=TestRecurringAppointment.TestCancelRecurringAppointment()[pri:4, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M6.Scheduler.TestRecurringAppointment@53b32d7]" name="closedrivers" is-config="true" duration-ms="5126" started-at="2018-05-10T04:34:15Z" finished-at="2018-05-10T04:34:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M6.Scheduler.TestRecurringAppointment -->
      <class name="com.bms.M3.Cases.TestCaseEdit">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M3.Cases.TestCaseEdit@3108bc]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestCaseEdit@3108bc]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestCaseEdit@3108bc]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M3.Cases.TestCaseEdit@3108bc]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestCaseEdit@3108bc]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="CaseSaveWithNoInfo()[pri:1, instance:com.bms.M3.Cases.TestCaseEdit@3108bc]" name="CaseSaveWithNoInfo" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CaseSaveWithNoInfo -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestCaseEdit@3108bc]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestDischargedCase()[pri:3, instance:com.bms.M3.Cases.TestCaseEdit@3108bc]" name="TestDischargedCase" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestDischargedCase -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestCaseEdit@3108bc]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestCaseEdit@3108bc]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="CaseEditWithAllFields()[pri:2, instance:com.bms.M3.Cases.TestCaseEdit@3108bc]" name="CaseEditWithAllFields" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CaseEditWithAllFields -->
      </class> <!-- com.bms.M3.Cases.TestCaseEdit -->
      <class name="com.bms.M2.Patient.TestPatientHeader">
        <test-method status="SKIP" signature="TestAddDuplicateInterventionLibrary()[pri:0, instance:com.bms.M2.Patient.TestPatientHeader@527740a2]" name="TestAddDuplicateInterventionLibrary" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestAddDuplicateInterventionLibrary -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M2.Patient.TestPatientHeader@527740a2]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M2.Patient.TestPatientHeader@527740a2]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M2.Patient.TestPatientHeader@527740a2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestValidatePatientHeader1()[pri:1, instance:com.bms.M2.Patient.TestPatientHeader@527740a2]" name="TestValidatePatientHeader1" duration-ms="1" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestValidatePatientHeader1 -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M2.Patient.TestPatientHeader@527740a2]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M2.Patient.TestPatientHeader@527740a2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M2.Patient.TestPatientHeader@527740a2]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="TestValidatePatientHeader4()[pri:0, instance:com.bms.M2.Patient.TestPatientHeader@527740a2]" name="TestValidatePatientHeader4" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M2.Patient.TestPatientHeader.TestValidatePatientHeader3" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestPatientHeader.TestValidatePatientHeader4()[pri:0, instance:com.bms.M2.Patient.TestPatientHeader@527740a2] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestPatientHeader.TestValidatePatientHeader4()[pri:0, instance:com.bms.M2.Patient.TestPatientHeader@527740a2] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestValidatePatientHeader4 -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M2.Patient.TestPatientHeader@527740a2]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestValidatePatientHeader3()[pri:3, instance:com.bms.M2.Patient.TestPatientHeader@527740a2]" name="TestValidatePatientHeader3" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestValidatePatientHeader3 -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M2.Patient.TestPatientHeader@527740a2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M2.Patient.TestPatientHeader@527740a2]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestValidatePatientHeader2()[pri:2, instance:com.bms.M2.Patient.TestPatientHeader@527740a2]" name="TestValidatePatientHeader2" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestValidatePatientHeader2 -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M2.Patient.TestPatientHeader@527740a2]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M2.Patient.TestPatientHeader -->
      <class name="com.bms.M8.FLR.TestFLR10THVisitPromtWithAddendum">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M8.FLR.TestFLR10THVisitPromtWithAddendum@14bf9759]" name="setup" is-config="true" duration-ms="4817" started-at="2018-05-10T08:03:01Z" finished-at="2018-05-10T08:03:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M8.FLR.TestFLR10THVisitPromtWithAddendum@14bf9759]" name="setup" is-config="true" duration-ms="32681" started-at="2018-05-10T08:03:06Z" finished-at="2018-05-10T08:03:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M8.FLR.TestFLR10THVisitPromtWithAddendum.FLR10thVisitWithAddendum() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="FLR10thVisitWithAddendum()[pri:1, instance:com.bms.M8.FLR.TestFLR10THVisitPromtWithAddendum@14bf9759]" name="FLR10thVisitWithAddendum" duration-ms="1664217" started-at="2018-05-10T08:03:39Z" finished-at="2018-05-10T08:31:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FLR10thVisitWithAddendum -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M8.FLR.TestFLR10THVisitPromtWithAddendum@14bf9759]" name="afterMethod" is-config="true" duration-ms="210" started-at="2018-05-10T08:31:23Z" finished-at="2018-05-10T08:31:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FLR10thVisitWithAddendum status=SUCCESS method=TestFLR10THVisitPromtWithAddendum.FLR10thVisitWithAddendum()[pri:1, instance:com.bms.M8.FLR.TestFLR10THVisitPromtWithAddendum@14bf9759] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M8.FLR.TestFLR10THVisitPromtWithAddendum@14bf9759]" name="closedrivers" is-config="true" duration-ms="5672" started-at="2018-05-10T08:31:23Z" finished-at="2018-05-10T08:31:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M8.FLR.TestFLR10THVisitPromtWithAddendum -->
      <class name="com.bms.M6.Scheduler.TestProviderHomePagetopMenu">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="setup" is-config="true" duration-ms="4551" started-at="2018-05-10T04:42:01Z" finished-at="2018-05-10T04:42:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="setup" is-config="true" duration-ms="29396" started-at="2018-05-10T04:42:06Z" finished-at="2018-05-10T04:42:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestnoteStatusChangesWhenNotedosIsNOTtheSameAsAppointmentdate()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestnoteStatusChangesWhenNotedosIsNOTtheSameAsAppointmentdate()[pri:1, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="TestnoteStatusChangesWhenNotedosIsNOTtheSameAsAppointmentdate" duration-ms="134774" started-at="2018-05-10T04:42:35Z" finished-at="2018-05-10T04:44:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestnoteStatusChangesWhenNotedosIsNOTtheSameAsAppointmentdate -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="afterMethod" is-config="true" duration-ms="233" started-at="2018-05-10T04:44:50Z" finished-at="2018-05-10T04:44:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestnoteStatusChangesWhenNotedosIsNOTtheSameAsAppointmentdate status=SUCCESS method=TestProviderHomePagetopMenu.TestnoteStatusChangesWhenNotedosIsNOTtheSameAsAppointmentdate()[pri:1, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="setup" is-config="true" duration-ms="21010" started-at="2018-05-10T04:44:50Z" finished-at="2018-05-10T04:45:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked()[pri:2, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked" duration-ms="269800" started-at="2018-05-10T04:45:11Z" finished-at="2018-05-10T04:49:41Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.AssertionError: Error in saving appointmentjava.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1922)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked(TestProviderHomePagetopMenu.java:193)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1935)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked(TestProviderHomePagetopMenu.java:193)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.AssertionError: Error in saving appointmentjava.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1922)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked(TestProviderHomePagetopMenu.java:193)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1935)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked(TestProviderHomePagetopMenu.java:193)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked(TestProviderHomePagetopMenu.java:273)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="afterMethod" is-config="true" duration-ms="169" started-at="2018-05-10T04:49:41Z" finished-at="2018-05-10T04:49:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked status=SKIP method=TestProviderHomePagetopMenu.TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked()[pri:2, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="setup" is-config="true" duration-ms="20716" started-at="2018-05-10T04:49:41Z" finished-at="2018-05-10T04:50:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked()[pri:2, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked" duration-ms="487156" started-at="2018-05-10T04:50:02Z" finished-at="2018-05-10T04:58:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="afterMethod" is-config="true" duration-ms="251" started-at="2018-05-10T04:58:09Z" finished-at="2018-05-10T04:58:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked status=SUCCESS method=TestProviderHomePagetopMenu.TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsUnchecked()[pri:2, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="setup" is-config="true" duration-ms="17940" started-at="2018-05-10T04:58:09Z" finished-at="2018-05-10T04:58:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsChecked()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsChecked()[pri:3, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsChecked" duration-ms="554832" started-at="2018-05-10T04:58:27Z" finished-at="2018-05-10T05:07:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsChecked -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="afterMethod" is-config="true" duration-ms="237" started-at="2018-05-10T05:07:42Z" finished-at="2018-05-10T05:07:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsChecked status=SUCCESS method=TestProviderHomePagetopMenu.TestPOCexpDateDisplayFORInsuranceFlagDXPOCChangeReqAsChecked()[pri:3, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="setup" is-config="true" duration-ms="17773" started-at="2018-05-10T05:07:42Z" finished-at="2018-05-10T05:08:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestNotesSinceMedProgdisplayifInsuranceIsNotMedicare()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="TestNotesSinceMedProgdisplayifInsuranceIsNotMedicare()[pri:4, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="TestNotesSinceMedProgdisplayifInsuranceIsNotMedicare" duration-ms="647218" started-at="2018-05-10T05:08:00Z" finished-at="2018-05-10T05:18:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNotesSinceMedProgdisplayifInsuranceIsNotMedicare -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="afterMethod" is-config="true" duration-ms="266" started-at="2018-05-10T05:18:47Z" finished-at="2018-05-10T05:18:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestNotesSinceMedProgdisplayifInsuranceIsNotMedicare status=SUCCESS method=TestProviderHomePagetopMenu.TestNotesSinceMedProgdisplayifInsuranceIsNotMedicare()[pri:4, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="setup" is-config="true" duration-ms="17301" started-at="2018-05-10T05:18:47Z" finished-at="2018-05-10T05:19:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestNotesSinceMedProgdisplayifInsuranceIsMedicare()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestNotesSinceMedProgdisplayifInsuranceIsMedicare()[pri:5, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="TestNotesSinceMedProgdisplayifInsuranceIsMedicare" duration-ms="274435" started-at="2018-05-10T05:19:05Z" finished-at="2018-05-10T05:23:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.AssertionError: Error in saving appointmentjava.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1922)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestNotesSinceMedProgdisplayifInsuranceIsMedicare(TestProviderHomePagetopMenu.java:657)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1935)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestNotesSinceMedProgdisplayifInsuranceIsMedicare(TestProviderHomePagetopMenu.java:657)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.AssertionError: Error in saving appointmentjava.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1922)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestNotesSinceMedProgdisplayifInsuranceIsMedicare(TestProviderHomePagetopMenu.java:657)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1935)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestNotesSinceMedProgdisplayifInsuranceIsMedicare(TestProviderHomePagetopMenu.java:657)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestNotesSinceMedProgdisplayifInsuranceIsMedicare(TestProviderHomePagetopMenu.java:728)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNotesSinceMedProgdisplayifInsuranceIsMedicare -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="afterMethod" is-config="true" duration-ms="163" started-at="2018-05-10T05:23:39Z" finished-at="2018-05-10T05:23:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestNotesSinceMedProgdisplayifInsuranceIsMedicare status=SKIP method=TestProviderHomePagetopMenu.TestNotesSinceMedProgdisplayifInsuranceIsMedicare()[pri:5, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="setup" is-config="true" duration-ms="20756" started-at="2018-05-10T05:23:40Z" finished-at="2018-05-10T05:24:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestNotesSinceMedProgdisplayifInsuranceIsMedicare()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="TestNotesSinceMedProgdisplayifInsuranceIsMedicare()[pri:5, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="TestNotesSinceMedProgdisplayifInsuranceIsMedicare" duration-ms="634119" started-at="2018-05-10T05:24:00Z" finished-at="2018-05-10T05:34:34Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"id","selector":"signFinalNoAttachButton"}
  (Session info: chrome=54.0.2840.71)
  (Driver info: chromedriver=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 15 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir6588_5517}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 37d784c1b0efd7dca7bee05ef2fa4004
*** Element info: {Using=id, value=signFinalNoAttachButton}
	at sun.reflect.GeneratedConstructorAccessor10.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:413)
	at org.openqa.selenium.By$ById.findElement(By.java:218)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at Utils.AddScheduleUtils.CreateFollowUpNoteFromProviderHomePage(AddScheduleUtils.java:2182)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestNotesSinceMedProgdisplayifInsuranceIsMedicare(TestProviderHomePagetopMenu.java:679)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"id","selector":"signFinalNoAttachButton"}
  (Session info: chrome=54.0.2840.71)
  (Driver info: chromedriver=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 15 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir6588_5517}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 37d784c1b0efd7dca7bee05ef2fa4004
*** Element info: {Using=id, value=signFinalNoAttachButton}
	at sun.reflect.GeneratedConstructorAccessor10.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:413)
	at org.openqa.selenium.By$ById.findElement(By.java:218)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at Utils.AddScheduleUtils.CreateFollowUpNoteFromProviderHomePage(AddScheduleUtils.java:2182)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestNotesSinceMedProgdisplayifInsuranceIsMedicare(TestProviderHomePagetopMenu.java:679)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.TestNotesSinceMedProgdisplayifInsuranceIsMedicare(TestProviderHomePagetopMenu.java:732)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNotesSinceMedProgdisplayifInsuranceIsMedicare -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="afterMethod" is-config="true" duration-ms="268" started-at="2018-05-10T05:34:34Z" finished-at="2018-05-10T05:34:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TestNotesSinceMedProgdisplayifInsuranceIsMedicare status=FAILURE method=TestProviderHomePagetopMenu.TestNotesSinceMedProgdisplayifInsuranceIsMedicare()[pri:5, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="setup" is-config="true" duration-ms="20912" started-at="2018-05-10T05:34:35Z" finished-at="2018-05-10T05:34:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProviderHomePagetopMenu.FLR10thVisitValidateMedicalProgressReportvalidation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="FLR10thVisitValidateMedicalProgressReportvalidation()[pri:6, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="FLR10thVisitValidateMedicalProgressReportvalidation" duration-ms="423602" started-at="2018-05-10T05:34:56Z" finished-at="2018-05-10T05:41:59Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[java.lang.AssertionError: Error in saving appointmentjava.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1922)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.FLR10thVisitValidateMedicalProgressReportvalidation(TestProviderHomePagetopMenu.java:809)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1935)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.FLR10thVisitValidateMedicalProgressReportvalidation(TestProviderHomePagetopMenu.java:809)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: java.lang.AssertionError: Error in saving appointmentjava.lang.AssertionError: expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at org.testng.Assert.assertTrue(Assert.java:52)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1922)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.FLR10thVisitValidateMedicalProgressReportvalidation(TestProviderHomePagetopMenu.java:809)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at Utils.AddScheduleUtils.ClickSaveAppointmentwindow(AddScheduleUtils.java:1935)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.FLR10thVisitValidateMedicalProgressReportvalidation(TestProviderHomePagetopMenu.java:809)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.FLR10thVisitValidateMedicalProgressReportvalidation(TestProviderHomePagetopMenu.java:870)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FLR10thVisitValidateMedicalProgressReportvalidation -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="afterMethod" is-config="true" duration-ms="169" started-at="2018-05-10T05:41:59Z" finished-at="2018-05-10T05:41:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FLR10thVisitValidateMedicalProgressReportvalidation status=SKIP method=TestProviderHomePagetopMenu.FLR10thVisitValidateMedicalProgressReportvalidation()[pri:6, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="setup" is-config="true" duration-ms="44257" started-at="2018-05-10T05:41:59Z" finished-at="2018-05-10T05:42:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestProviderHomePagetopMenu.FLR10thVisitValidateMedicalProgressReportvalidation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="FLR10thVisitValidateMedicalProgressReportvalidation()[pri:6, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="FLR10thVisitValidateMedicalProgressReportvalidation" duration-ms="569650" started-at="2018-05-10T05:42:44Z" finished-at="2018-05-10T05:52:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"id","selector":"signFinalNoAttachButton"}
  (Session info: chrome=54.0.2840.71)
  (Driver info: chromedriver=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 15 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir6588_5517}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 37d784c1b0efd7dca7bee05ef2fa4004
*** Element info: {Using=id, value=signFinalNoAttachButton}
	at sun.reflect.GeneratedConstructorAccessor10.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:413)
	at org.openqa.selenium.By$ById.findElement(By.java:218)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at Utils.AddScheduleUtils.CreateInitialNoteFromProviderHomePage(AddScheduleUtils.java:2000)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.FLR10thVisitValidateMedicalProgressReportvalidation(TestProviderHomePagetopMenu.java:820)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"id","selector":"signFinalNoAttachButton"}
  (Session info: chrome=54.0.2840.71)
  (Driver info: chromedriver=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 15 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir6588_5517}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: 37d784c1b0efd7dca7bee05ef2fa4004
*** Element info: {Using=id, value=signFinalNoAttachButton}
	at sun.reflect.GeneratedConstructorAccessor10.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:413)
	at org.openqa.selenium.By$ById.findElement(By.java:218)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at Utils.AddScheduleUtils.CreateInitialNoteFromProviderHomePage(AddScheduleUtils.java:2000)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.FLR10thVisitValidateMedicalProgressReportvalidation(TestProviderHomePagetopMenu.java:820)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at com.bms.M6.Scheduler.TestProviderHomePagetopMenu.FLR10thVisitValidateMedicalProgressReportvalidation(TestProviderHomePagetopMenu.java:874)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FLR10thVisitValidateMedicalProgressReportvalidation -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="afterMethod" is-config="true" duration-ms="570" started-at="2018-05-10T05:52:13Z" finished-at="2018-05-10T05:52:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FLR10thVisitValidateMedicalProgressReportvalidation status=FAILURE method=TestProviderHomePagetopMenu.FLR10thVisitValidateMedicalProgressReportvalidation()[pri:6, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M6.Scheduler.TestProviderHomePagetopMenu@77cd7a0]" name="closedrivers" is-config="true" duration-ms="7769" started-at="2018-05-10T05:52:14Z" finished-at="2018-05-10T05:52:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M6.Scheduler.TestProviderHomePagetopMenu -->
      <class name="com.bms.M12.Financial.TestCheckFinancialTab">
        <test-method status="SKIP" signature="AmountBalancingafterAddingNewpatient()[pri:1, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521]" name="AmountBalancingafterAddingNewpatient" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AmountBalancingafterAddingNewpatient -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="AmountBalancingafterAddingCharge()[pri:2, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521]" name="AmountBalancingafterAddingCharge" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M12.Financial.TestCheckFinancialTab.AmountBalancingafterAddingNewpatient" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCheckFinancialTab.AmountBalancingafterAddingCharge()[pri:2, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCheckFinancialTab.AmountBalancingafterAddingCharge()[pri:2, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AmountBalancingafterAddingCharge -->
        <test-method status="SKIP" signature="AmountBalancingafterAddingPayment()[pri:3, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521]" name="AmountBalancingafterAddingPayment" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M12.Financial.TestCheckFinancialTab.AmountBalancingafterAddingCharge" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCheckFinancialTab.AmountBalancingafterAddingPayment()[pri:3, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCheckFinancialTab.AmountBalancingafterAddingPayment()[pri:3, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AmountBalancingafterAddingPayment -->
        <test-method status="SKIP" signature="AmountBalancingafterRemovingCharge()[pri:5, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521]" name="AmountBalancingafterRemovingCharge" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M12.Financial.TestCheckFinancialTab.AmountBalancingafterAddingclinicalnote" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCheckFinancialTab.AmountBalancingafterRemovingCharge()[pri:5, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCheckFinancialTab.AmountBalancingafterRemovingCharge()[pri:5, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AmountBalancingafterRemovingCharge -->
        <test-method status="SKIP" signature="AmountBalancingafterAddingclinicalnote()[pri:4, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521]" name="AmountBalancingafterAddingclinicalnote" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M12.Financial.TestCheckFinancialTab.AmountBalancingafterAddingPayment" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCheckFinancialTab.AmountBalancingafterAddingclinicalnote()[pri:4, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCheckFinancialTab.AmountBalancingafterAddingclinicalnote()[pri:4, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AmountBalancingafterAddingclinicalnote -->
        <test-method status="SKIP" signature="AmountBalancingafterAddingAddendumtoClinicalnote()[pri:7, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521]" name="AmountBalancingafterAddingAddendumtoClinicalnote" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M12.Financial.TestCheckFinancialTab.AmountBalancingafterRemovingPayment" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCheckFinancialTab.AmountBalancingafterAddingAddendumtoClinicalnote()[pri:7, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCheckFinancialTab.AmountBalancingafterAddingAddendumtoClinicalnote()[pri:7, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AmountBalancingafterAddingAddendumtoClinicalnote -->
        <test-method status="SKIP" signature="AmountBalancingafterRemovingPayment()[pri:6, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521]" name="AmountBalancingafterRemovingPayment" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M12.Financial.TestCheckFinancialTab.AmountBalancingafterRemovingCharge" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCheckFinancialTab.AmountBalancingafterRemovingPayment()[pri:6, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCheckFinancialTab.AmountBalancingafterRemovingPayment()[pri:6, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AmountBalancingafterRemovingPayment -->
        <test-method status="SKIP" signature="AmountBalancingafterEditingCharge()[pri:8, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521]" name="AmountBalancingafterEditingCharge" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M12.Financial.TestCheckFinancialTab.AmountBalancingafterAddingAddendumtoClinicalnote" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCheckFinancialTab.AmountBalancingafterEditingCharge()[pri:8, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCheckFinancialTab.AmountBalancingafterEditingCharge()[pri:8, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AmountBalancingafterEditingCharge -->
        <test-method status="SKIP" signature="AmountBalancingafterEditingCase()[pri:9, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521]" name="AmountBalancingafterEditingCase" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M12.Financial.TestCheckFinancialTab.AmountBalancingafterEditingCharge" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCheckFinancialTab.AmountBalancingafterEditingCase()[pri:9, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCheckFinancialTab.AmountBalancingafterEditingCase()[pri:9, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AmountBalancingafterEditingCase -->
        <test-method status="SKIP" signature="AmountBalancingAfterAddingModifiertoCharge()[pri:11, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521]" name="AmountBalancingAfterAddingModifiertoCharge" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M12.Financial.TestCheckFinancialTab.AmountBalancingafteraddingChargetoNewCase" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCheckFinancialTab.AmountBalancingAfterAddingModifiertoCharge()[pri:11, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCheckFinancialTab.AmountBalancingAfterAddingModifiertoCharge()[pri:11, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AmountBalancingAfterAddingModifiertoCharge -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="AmountBalancingafteraddingChargetoNewCase()[pri:10, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521]" name="AmountBalancingafteraddingChargetoNewCase" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M12.Financial.TestCheckFinancialTab.AmountBalancingafterEditingCase" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestCheckFinancialTab.AmountBalancingafteraddingChargetoNewCase()[pri:10, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestCheckFinancialTab.AmountBalancingafteraddingChargetoNewCase()[pri:10, instance:com.bms.M12.Financial.TestCheckFinancialTab@dc24521] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AmountBalancingafteraddingChargetoNewCase -->
      </class> <!-- com.bms.M12.Financial.TestCheckFinancialTab -->
      <class name="com.bms.M11.EMR.TestSignandAttachScanDocuments">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignandAttachScanDocuments@56ef9176]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignandAttachScanDocuments@56ef9176]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="SignandAttachScanDocuments()[pri:1, instance:com.bms.M11.EMR.TestSignandAttachScanDocuments@56ef9176]" name="SignandAttachScanDocuments" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignandAttachScanDocuments -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestSignandAttachScanDocuments@56ef9176]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestSignandAttachScanDocuments@56ef9176]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M11.EMR.TestSignandAttachScanDocuments -->
      <class name="com.bms.M1.Login.TestLoginUnsuccessfull">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M1.Login.TestLoginUnsuccessfull@56235b8e]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M1.Login.TestLoginUnsuccessfull@56235b8e]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M1.Login.TestLoginUnsuccessfull@56235b8e]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M1.Login.TestLoginUnsuccessfull@56235b8e]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestInvalidLogin()[pri:1, instance:com.bms.M1.Login.TestLoginUnsuccessfull@56235b8e]" name="TestInvalidLogin" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestInvalidLogin -->
      </class> <!-- com.bms.M1.Login.TestLoginUnsuccessfull -->
      <class name="com.bms.M7.APage.TestAPageEditPendingNote">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M7.APage.TestAPageEditPendingNote@e25b2fe]" name="setup" is-config="true" duration-ms="4681" started-at="2018-05-10T06:05:42Z" finished-at="2018-05-10T06:05:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPageEditPendingNote@e25b2fe]" name="setup" is-config="true" duration-ms="64795" started-at="2018-05-10T06:05:46Z" finished-at="2018-05-10T06:06:51Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPageEditPendingNote.EditPendingNote() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="EditPendingNote()[pri:1, instance:com.bms.M7.APage.TestAPageEditPendingNote@e25b2fe]" name="EditPendingNote" duration-ms="225613" started-at="2018-05-10T06:06:51Z" finished-at="2018-05-10T06:10:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- EditPendingNote -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPageEditPendingNote@e25b2fe]" name="afterMethod" is-config="true" duration-ms="204" started-at="2018-05-10T06:10:37Z" finished-at="2018-05-10T06:10:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=EditPendingNote status=SUCCESS method=TestAPageEditPendingNote.EditPendingNote()[pri:1, instance:com.bms.M7.APage.TestAPageEditPendingNote@e25b2fe] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M7.APage.TestAPageEditPendingNote@e25b2fe]" name="closedrivers" is-config="true" duration-ms="6523" started-at="2018-05-10T06:10:37Z" finished-at="2018-05-10T06:10:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M7.APage.TestAPageEditPendingNote -->
      <class name="com.bms.M11.EMR.TestTreatingProviderFinalize">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderFinalize@5649fd9b]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderFinalize@5649fd9b]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderFinalize@5649fd9b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="DONOTAllowTreatingProvidertofinalizeVisitnotes()[pri:1, instance:com.bms.M11.EMR.TestTreatingProviderFinalize@5649fd9b]" name="DONOTAllowTreatingProvidertofinalizeVisitnotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DONOTAllowTreatingProvidertofinalizeVisitnotes -->
        <test-method status="SKIP" signature="AllowTreatingProvidertofinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestTreatingProviderFinalize@5649fd9b]" name="AllowTreatingProvidertofinalizeNonVisitnotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestTreatingProviderFinalize.DONOTAllowTreatingProvidertofinalizeVisitnotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestTreatingProviderFinalize.AllowTreatingProvidertofinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestTreatingProviderFinalize@5649fd9b] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestTreatingProviderFinalize.AllowTreatingProvidertofinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestTreatingProviderFinalize@5649fd9b] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowTreatingProvidertofinalizeNonVisitnotes -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestTreatingProviderFinalize@5649fd9b]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="AllowTreatingProvidertofinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestTreatingProviderFinalize@5649fd9b]" name="AllowTreatingProvidertofinalizNonVisitDischargenotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestTreatingProviderFinalize.DONOTAllowTreatingProvidertofinalizeVisitnotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestTreatingProviderFinalize.AllowTreatingProvidertofinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestTreatingProviderFinalize@5649fd9b] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestTreatingProviderFinalize.AllowTreatingProvidertofinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestTreatingProviderFinalize@5649fd9b] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowTreatingProvidertofinalizNonVisitDischargenotes -->
      </class> <!-- com.bms.M11.EMR.TestTreatingProviderFinalize -->
      <class name="com.bms.M9.AddCharges.TestValidateKxModifierPrompt">
        <test-method status="SKIP" signature="ValidateKxModifierPrompt()[pri:1, instance:com.bms.M9.AddCharges.TestValidateKxModifierPrompt@5700d6b1]" name="ValidateKxModifierPrompt" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateKxModifierPrompt -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestValidateKxModifierPrompt@5700d6b1]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestValidateKxModifierPrompt@5700d6b1]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestValidateKxModifierPrompt@5700d6b1]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestValidateKxModifierPrompt@5700d6b1]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M9.AddCharges.TestValidateKxModifierPrompt -->
      <class name="com.bms.M2.Patient.TestSearchPatient">
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M2.Patient.TestSearchPatient@6d7b4f4c]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M2.Patient.TestSearchPatient@6d7b4f4c]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M2.Patient.TestSearchPatient@6d7b4f4c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testQuickSearchPatient()[pri:5, instance:com.bms.M2.Patient.TestSearchPatient@6d7b4f4c]" name="testQuickSearchPatient" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQuickSearchPatient -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M2.Patient.TestSearchPatient@6d7b4f4c]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M2.Patient.TestSearchPatient -->
      <class name="com.bms.M14.PQRS.TestPQRSVisitType">
        <test-method status="SKIP" signature="PQRSMeasuresBasedOnAge_17()[pri:2, instance:com.bms.M14.PQRS.TestPQRSVisitType@4fe3c938]" name="PQRSMeasuresBasedOnAge_17" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PQRSMeasuresBasedOnAge_17 -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M14.PQRS.TestPQRSVisitType@4fe3c938]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="PQRSMeasuresBasedOnVisitType()[pri:1, instance:com.bms.M14.PQRS.TestPQRSVisitType@4fe3c938]" name="PQRSMeasuresBasedOnVisitType" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PQRSMeasuresBasedOnVisitType -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M14.PQRS.TestPQRSVisitType@4fe3c938]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M14.PQRS.TestPQRSVisitType@4fe3c938]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M14.PQRS.TestPQRSVisitType@4fe3c938]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M14.PQRS.TestPQRSVisitType@4fe3c938]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="PQRSpromptHardStop_Age_Over_64()[pri:3, instance:com.bms.M14.PQRS.TestPQRSVisitType@4fe3c938]" name="PQRSpromptHardStop_Age_Over_64" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PQRSpromptHardStop_Age_Over_64 -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M14.PQRS.TestPQRSVisitType@4fe3c938]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M14.PQRS.TestPQRSVisitType@4fe3c938]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M14.PQRS.TestPQRSVisitType@4fe3c938]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M14.PQRS.TestPQRSVisitType -->
      <class name="com.bms.M9.AddCharges.TestPatientRefund">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestPatientRefund@2f686d1f]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestPatientRefund@2f686d1f]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestPatientRefund@2f686d1f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestPatientRefund@2f686d1f]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="PatientRefund()[pri:3, instance:com.bms.M9.AddCharges.TestPatientRefund@2f686d1f]" name="PatientRefund" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PatientRefund -->
      </class> <!-- com.bms.M9.AddCharges.TestPatientRefund -->
      <class name="com.bms.M4.Insurances.TestAddCompleteInsurance">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M4.Insurances.TestAddCompleteInsurance@520a3426]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M4.Insurances.TestAddCompleteInsurance@520a3426]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="AddCompleteTertiaryInsurance()[pri:3, instance:com.bms.M4.Insurances.TestAddCompleteInsurance@520a3426]" name="AddCompleteTertiaryInsurance" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddCompleteTertiaryInsurance -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M4.Insurances.TestAddCompleteInsurance@520a3426]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="AddCompleteSecondaryInsurance()[pri:2, instance:com.bms.M4.Insurances.TestAddCompleteInsurance@520a3426]" name="AddCompleteSecondaryInsurance" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddCompleteSecondaryInsurance -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M4.Insurances.TestAddCompleteInsurance@520a3426]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M4.Insurances.TestAddCompleteInsurance@520a3426]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="AddCompletePrimaryInsurance()[pri:1, instance:com.bms.M4.Insurances.TestAddCompleteInsurance@520a3426]" name="AddCompletePrimaryInsurance" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddCompletePrimaryInsurance -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M4.Insurances.TestAddCompleteInsurance@520a3426]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M4.Insurances.TestAddCompleteInsurance@520a3426]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M4.Insurances.TestAddCompleteInsurance@520a3426]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M4.Insurances.TestAddCompleteInsurance -->
      <class name="com.bms.M9.AddCharges.TestInsOverpayment">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestInsOverpayment@4cf777e8]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="AddPaymentsTransactionType()[pri:1, instance:com.bms.M9.AddCharges.TestInsOverpayment@4cf777e8]" name="AddPaymentsTransactionType" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddPaymentsTransactionType -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestInsOverpayment@4cf777e8]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestInsOverpayment@4cf777e8]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestInsOverpayment@4cf777e8]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M9.AddCharges.TestInsOverpayment -->
      <class name="com.bms.M13.Task.TestAssigneeField">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M13.Task.TestAssigneeField@71318ec4]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestAssigneeField@71318ec4]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M13.Task.TestAssigneeField@71318ec4]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="Assignee_Field_Individual_Search()[pri:1, instance:com.bms.M13.Task.TestAssigneeField@71318ec4]" name="Assignee_Field_Individual_Search" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Assignee_Field_Individual_Search -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestAssigneeField@71318ec4]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M13.Task.TestAssigneeField -->
      <class name="com.bms.M7.APage.TestAPageCheckFLRTab">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M7.APage.TestAPageCheckFLRTab@146ba0ac]" name="setup" is-config="true" duration-ms="4573" started-at="2018-05-10T06:23:08Z" finished-at="2018-05-10T06:23:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPageCheckFLRTab@146ba0ac]" name="setup" is-config="true" duration-ms="31799" started-at="2018-05-10T06:23:13Z" finished-at="2018-05-10T06:23:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPageCheckFLRTab.FLRTabDisplay() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="FLRTabDisplay()[pri:1, instance:com.bms.M7.APage.TestAPageCheckFLRTab@146ba0ac]" name="FLRTabDisplay" duration-ms="136391" started-at="2018-05-10T06:23:45Z" finished-at="2018-05-10T06:26:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FLRTabDisplay -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPageCheckFLRTab@146ba0ac]" name="afterMethod" is-config="true" duration-ms="183" started-at="2018-05-10T06:26:01Z" finished-at="2018-05-10T06:26:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FLRTabDisplay status=SUCCESS method=TestAPageCheckFLRTab.FLRTabDisplay()[pri:1, instance:com.bms.M7.APage.TestAPageCheckFLRTab@146ba0ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPageCheckFLRTab@146ba0ac]" name="setup" is-config="true" duration-ms="19533" started-at="2018-05-10T06:26:01Z" finished-at="2018-05-10T06:26:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPageCheckFLRTab.FLRTabNotDisplay() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="FLRTabNotDisplay()[pri:2, instance:com.bms.M7.APage.TestAPageCheckFLRTab@146ba0ac]" name="FLRTabNotDisplay" duration-ms="128276" started-at="2018-05-10T06:26:21Z" finished-at="2018-05-10T06:28:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FLRTabNotDisplay -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPageCheckFLRTab@146ba0ac]" name="afterMethod" is-config="true" duration-ms="207" started-at="2018-05-10T06:28:29Z" finished-at="2018-05-10T06:28:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FLRTabNotDisplay status=SUCCESS method=TestAPageCheckFLRTab.FLRTabNotDisplay()[pri:2, instance:com.bms.M7.APage.TestAPageCheckFLRTab@146ba0ac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M7.APage.TestAPageCheckFLRTab@146ba0ac]" name="closedrivers" is-config="true" duration-ms="6100" started-at="2018-05-10T06:28:29Z" finished-at="2018-05-10T06:28:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M7.APage.TestAPageCheckFLRTab -->
      <class name="com.bms.M13.Task.TestAddTaskByRole">
        <test-method status="SKIP" signature="CreateTaskUserSysAdmin()[pri:1, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92]" name="CreateTaskUserSysAdmin" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTaskUserSysAdmin -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="CreateTaskUserBMS()[pri:2, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92]" name="CreateTaskUserBMS" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTaskUserBMS -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="Task_Required_Field_Validation()[pri:5, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92]" name="Task_Required_Field_Validation" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Task_Required_Field_Validation -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="CreateTaskUserPartner()[pri:3, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92]" name="CreateTaskUserPartner" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTaskUserPartner -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="CreateTaskUserCustomer()[pri:4, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92]" name="CreateTaskUserCustomer" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M13.Task.TestAddTaskByRole.CreateTaskUserBMS" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestAddTaskByRole.CreateTaskUserCustomer()[pri:4, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestAddTaskByRole.CreateTaskUserCustomer()[pri:4, instance:com.bms.M13.Task.TestAddTaskByRole@21213b92] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateTaskUserCustomer -->
      </class> <!-- com.bms.M13.Task.TestAddTaskByRole -->
      <class name="com.bms.M3.Cases.TestCaseHistory">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M3.Cases.TestCaseHistory@4e1d422d]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestCaseHistoryWithCharges()[pri:1, instance:com.bms.M3.Cases.TestCaseHistory@4e1d422d]" name="TestCaseHistoryWithCharges" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestCaseHistoryWithCharges -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M3.Cases.TestCaseHistory@4e1d422d]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestCaseHistory@4e1d422d]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestCaseHistory@4e1d422d]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M3.Cases.TestCaseHistory -->
      <class name="com.bms.M3.Cases.TestFoto">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M3.Cases.TestFoto@6536e911]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestFOTO()[pri:1, instance:com.bms.M3.Cases.TestFoto@6536e911]" name="TestFOTO" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestFOTO -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestFoto@6536e911]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestFoto@6536e911]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M3.Cases.TestFoto@6536e911]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M3.Cases.TestFoto -->
      <class name="com.bms.M9.AddCharges.TestViewChargesBMSUser">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesBMSUser@5bcab519]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesBMSUser@5bcab519]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesBMSUser@5bcab519]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestViewChargesBMSUser@5bcab519]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="ValidateViewChargesUserBMS()[pri:1, instance:com.bms.M9.AddCharges.TestViewChargesBMSUser@5bcab519]" name="ValidateViewChargesUserBMS" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidateViewChargesUserBMS -->
      </class> <!-- com.bms.M9.AddCharges.TestViewChargesBMSUser -->
      <class name="com.bms.M3.Cases.TestCaseInactive">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M3.Cases.TestCaseInactive@66480dd7]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="InActivateCaseWithCharges()[pri:2, instance:com.bms.M3.Cases.TestCaseInactive@66480dd7]" name="InActivateCaseWithCharges" duration-ms="1" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InActivateCaseWithCharges -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestCaseInactive@66480dd7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestCaseInactive@66480dd7]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestCaseInactive@66480dd7]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="InActivateCaseNoCharges()[pri:1, instance:com.bms.M3.Cases.TestCaseInactive@66480dd7]" name="InActivateCaseNoCharges" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InActivateCaseNoCharges -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestCaseInactive@66480dd7]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M3.Cases.TestCaseInactive@66480dd7]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M3.Cases.TestCaseInactive -->
      <class name="com.bms.M11.EMR.TestSignNoteWithDiffrentUsers">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="SignNotewithPTUser()[pri:2, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="SignNotewithPTUser" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignNotewithPTUser -->
        <test-method status="SKIP" signature="SignNotewithCustomerUser()[pri:1, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="SignNotewithCustomerUser" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignNotewithCustomerUser -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="SignNotewithFrontOfficeStaffUser()[pri:6, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="SignNotewithFrontOfficeStaffUser" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignNotewithFrontOfficeStaffUser -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="SignNotewithOTUser()[pri:3, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="SignNotewithOTUser" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignNotewithOTUser -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="SignNotewithRTUser()[pri:5, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="SignNotewithRTUser" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignNotewithRTUser -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="SignNotewithSLPUser()[pri:4, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="SignNotewithSLPUser" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignNotewithSLPUser -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="SignNotewithTreatingproviderUser()[pri:9, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="SignNotewithTreatingproviderUser" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignNotewithTreatingproviderUser -->
        <test-method status="SKIP" signature="SignNotewithStudentproviderUser()[pri:8, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="SignNotewithStudentproviderUser" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignNotewithStudentproviderUser -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="SignNotewithNonclinicalstaffUser()[pri:10, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="SignNotewithNonclinicalstaffUser" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignNotewithNonclinicalstaffUser -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="SignNotewithPartnerUser()[pri:11, instance:com.bms.M11.EMR.TestSignNoteWithDiffrentUsers@25bbe1b6]" name="SignNotewithPartnerUser" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignNotewithPartnerUser -->
      </class> <!-- com.bms.M11.EMR.TestSignNoteWithDiffrentUsers -->
      <class name="com.bms.M7.APage.TestAPageLockFunctionality">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M7.APage.TestAPageLockFunctionality@3abbfa04]" name="setup" is-config="true" duration-ms="4654" started-at="2018-05-10T07:05:26Z" finished-at="2018-05-10T07:05:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPageLockFunctionality@3abbfa04]" name="setup" is-config="true" duration-ms="35019" started-at="2018-05-10T07:05:30Z" finished-at="2018-05-10T07:06:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPageLockFunctionality.Note_UnlockApage() throws java.lang.InterruptedException,java.awt.AWTException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="Note_UnlockApage()[pri:1, instance:com.bms.M7.APage.TestAPageLockFunctionality@3abbfa04]" name="Note_UnlockApage" duration-ms="145522" started-at="2018-05-10T07:06:05Z" finished-at="2018-05-10T07:08:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Note_UnlockApage -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPageLockFunctionality@3abbfa04]" name="afterMethod" is-config="true" duration-ms="232" started-at="2018-05-10T07:08:31Z" finished-at="2018-05-10T07:08:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Note_UnlockApage status=SUCCESS method=TestAPageLockFunctionality.Note_UnlockApage()[pri:1, instance:com.bms.M7.APage.TestAPageLockFunctionality@3abbfa04] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M7.APage.TestAPageLockFunctionality@3abbfa04]" name="closedrivers" is-config="true" duration-ms="5876" started-at="2018-05-10T07:08:31Z" finished-at="2018-05-10T07:08:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M7.APage.TestAPageLockFunctionality -->
      <class name="com.bms.M11.EMR.TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase@5cb9f472]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase@5cb9f472]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="DontAllowNonClinicalStaffToFinalizeVisitNotes()[pri:1, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase@5cb9f472]" name="DontAllowNonClinicalStaffToFinalizeVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DontAllowNonClinicalStaffToFinalizeVisitNotes -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase@5cb9f472]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="AllowNonClinicalStafftofinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase@5cb9f472]" name="AllowNonClinicalStafftofinalizNonVisitDischargenotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowNonClinicalStafftofinalizNonVisitDischargenotes -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase@5cb9f472]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="AllowNonClinicalStaffofinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase@5cb9f472]" name="AllowNonClinicalStaffofinalizeNonVisitnotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase.DontAllowNonClinicalStaffToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase.AllowNonClinicalStaffofinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase@5cb9f472] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase.AllowNonClinicalStaffofinalizeNonVisitnotes()[pri:2, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase@5cb9f472] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowNonClinicalStaffofinalizeNonVisitnotes -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase@5cb9f472]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase@5cb9f472]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- com.bms.M11.EMR.TestNonClinicalStaffWithInsuranceClassCheckBoxNotSelectedTestCase -->
      <class name="com.bms.M6.Scheduler.TestEditEditAllPersonSchedule">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M6.Scheduler.TestEditEditAllPersonSchedule@343f4d3d]" name="setup" is-config="true" duration-ms="4702" started-at="2018-05-10T04:21:18Z" finished-at="2018-05-10T04:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestEditEditAllPersonSchedule@343f4d3d]" name="setup" is-config="true" duration-ms="34963" started-at="2018-05-10T04:21:22Z" finished-at="2018-05-10T04:21:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestEditEditAllPersonSchedule.testEditEditAllPersonScheduleFlagIsSelected()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testEditEditAllPersonScheduleFlagIsSelected()[pri:1, instance:com.bms.M6.Scheduler.TestEditEditAllPersonSchedule@343f4d3d]" name="testEditEditAllPersonScheduleFlagIsSelected" duration-ms="142492" started-at="2018-05-10T04:21:57Z" finished-at="2018-05-10T04:24:20Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[org.openqa.selenium.TimeoutException: Timed out after 120 seconds waiting for visibility of element located by By.id: providerHoursDropDown
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir7292_14310}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: c019d93e8c7c2f9e0b2800d020e5e43d
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:80)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:261)
	at Utils.Commons.waitforElement(Commons.java:192)
	at com.bms.M6.Scheduler.TestEditEditAllPersonSchedule.testEditEditAllPersonScheduleFlagIsSelected(TestEditEditAllPersonSchedule.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: org.openqa.selenium.TimeoutException: Timed out after 120 seconds waiting for visibility of element located by By.id: providerHoursDropDown
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir7292_14310}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: c019d93e8c7c2f9e0b2800d020e5e43d
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:80)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:261)
	at Utils.Commons.waitforElement(Commons.java:192)
	at com.bms.M6.Scheduler.TestEditEditAllPersonSchedule.testEditEditAllPersonScheduleFlagIsSelected(TestEditEditAllPersonSchedule.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at com.bms.M6.Scheduler.TestEditEditAllPersonSchedule.testEditEditAllPersonScheduleFlagIsSelected(TestEditEditAllPersonSchedule.java:98)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEditEditAllPersonScheduleFlagIsSelected -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestEditEditAllPersonSchedule@343f4d3d]" name="afterMethod" is-config="true" duration-ms="171" started-at="2018-05-10T04:24:20Z" finished-at="2018-05-10T04:24:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEditEditAllPersonScheduleFlagIsSelected status=SKIP method=TestEditEditAllPersonSchedule.testEditEditAllPersonScheduleFlagIsSelected()[pri:1, instance:com.bms.M6.Scheduler.TestEditEditAllPersonSchedule@343f4d3d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestEditEditAllPersonSchedule@343f4d3d]" name="setup" is-config="true" duration-ms="23698" started-at="2018-05-10T04:24:20Z" finished-at="2018-05-10T04:24:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestEditEditAllPersonSchedule.testEditEditAllPersonScheduleFlagIsSelected()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="testEditEditAllPersonScheduleFlagIsSelected()[pri:1, instance:com.bms.M6.Scheduler.TestEditEditAllPersonSchedule@343f4d3d]" name="testEditEditAllPersonScheduleFlagIsSelected" duration-ms="143407" started-at="2018-05-10T04:24:44Z" finished-at="2018-05-10T04:27:07Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[org.openqa.selenium.TimeoutException: Timed out after 120 seconds waiting for visibility of element located by By.id: providerHoursDropDown
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir7292_14310}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: c019d93e8c7c2f9e0b2800d020e5e43d
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:80)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:261)
	at Utils.Commons.waitforElement(Commons.java:192)
	at com.bms.M6.Scheduler.TestEditEditAllPersonSchedule.testEditEditAllPersonScheduleFlagIsSelected(TestEditEditAllPersonSchedule.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: org.openqa.selenium.TimeoutException: Timed out after 120 seconds waiting for visibility of element located by By.id: providerHoursDropDown
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir7292_14310}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: c019d93e8c7c2f9e0b2800d020e5e43d
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:80)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:261)
	at Utils.Commons.waitforElement(Commons.java:192)
	at com.bms.M6.Scheduler.TestEditEditAllPersonSchedule.testEditEditAllPersonScheduleFlagIsSelected(TestEditEditAllPersonSchedule.java:51)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
 expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at com.bms.M6.Scheduler.TestEditEditAllPersonSchedule.testEditEditAllPersonScheduleFlagIsSelected(TestEditEditAllPersonSchedule.java:98)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.retryFailed(Invoker.java:967)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1146)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEditEditAllPersonScheduleFlagIsSelected -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestEditEditAllPersonSchedule@343f4d3d]" name="afterMethod" is-config="true" duration-ms="225" started-at="2018-05-10T04:27:07Z" finished-at="2018-05-10T04:27:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEditEditAllPersonScheduleFlagIsSelected status=FAILURE method=TestEditEditAllPersonSchedule.testEditEditAllPersonScheduleFlagIsSelected()[pri:1, instance:com.bms.M6.Scheduler.TestEditEditAllPersonSchedule@343f4d3d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestEditEditAllPersonSchedule@343f4d3d]" name="setup" is-config="true" duration-ms="23364" started-at="2018-05-10T04:27:08Z" finished-at="2018-05-10T04:27:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestEditEditAllPersonSchedule.testEditAllPersonScheduleFlagIsNotSelected()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="testEditAllPersonScheduleFlagIsNotSelected()[pri:2, instance:com.bms.M6.Scheduler.TestEditEditAllPersonSchedule@343f4d3d]" name="testEditAllPersonScheduleFlagIsNotSelected" duration-ms="31497" started-at="2018-05-10T04:27:31Z" finished-at="2018-05-10T04:28:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEditAllPersonScheduleFlagIsNotSelected -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestEditEditAllPersonSchedule@343f4d3d]" name="afterMethod" is-config="true" duration-ms="218" started-at="2018-05-10T04:28:03Z" finished-at="2018-05-10T04:28:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testEditAllPersonScheduleFlagIsNotSelected status=SUCCESS method=TestEditEditAllPersonSchedule.testEditAllPersonScheduleFlagIsNotSelected()[pri:2, instance:com.bms.M6.Scheduler.TestEditEditAllPersonSchedule@343f4d3d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M6.Scheduler.TestEditEditAllPersonSchedule@343f4d3d]" name="closedrivers" is-config="true" duration-ms="5165" started-at="2018-05-10T04:28:03Z" finished-at="2018-05-10T04:28:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M6.Scheduler.TestEditEditAllPersonSchedule -->
      <class name="com.bms.M11.EMR.TestSignNoteWithCompleteSOAPdata">
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithCompleteSOAPdata@ff5b51f]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="InitialVisitWithSOAP()[pri:1, instance:com.bms.M11.EMR.TestSignNoteWithCompleteSOAPdata@ff5b51f]" name="InitialVisitWithSOAP" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InitialVisitWithSOAP -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithCompleteSOAPdata@ff5b51f]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithCompleteSOAPdata@ff5b51f]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestSignNoteWithCompleteSOAPdata@ff5b51f]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M11.EMR.TestSignNoteWithCompleteSOAPdata -->
      <class name="com.bms.M13.Task.TestLock">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestLock@31610302]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestLockFunctionality()[pri:1, instance:com.bms.M13.Task.TestLock@31610302]" name="TestLockFunctionality" duration-ms="1" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestLockFunctionality -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M13.Task.TestLock@31610302]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestLock@31610302]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M13.Task.TestLock@31610302]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M13.Task.TestLock -->
      <class name="com.bms.M11.EMR.TestSignandFinalize">
        <test-method status="SKIP" signature="SignandFinalizeWithFollowupVisit()[pri:1, instance:com.bms.M11.EMR.TestSignandFinalize@4566e5bd]" name="SignandFinalizeWithFollowupVisit" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignandFinalizeWithFollowupVisit -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignandFinalize@4566e5bd]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignandFinalize@4566e5bd]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestSignandFinalize@4566e5bd]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestSignandFinalize@4566e5bd]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="SignandFinalizeWithPTuser()[pri:2, instance:com.bms.M11.EMR.TestSignandFinalize@4566e5bd]" name="SignandFinalizeWithPTuser" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SignandFinalizeWithPTuser -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestSignandFinalize@4566e5bd]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestSignandFinalize@4566e5bd]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M11.EMR.TestSignandFinalize -->
      <class name="com.bms.M6.Scheduler.TestRecurringMeeting">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M6.Scheduler.TestRecurringMeeting@548e7350]" name="setup" is-config="true" duration-ms="12476" started-at="2018-05-10T04:34:20Z" finished-at="2018-05-10T04:34:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M6.Scheduler.TestRecurringMeeting@548e7350]" name="setup" is-config="true" duration-ms="34242" started-at="2018-05-10T04:34:33Z" finished-at="2018-05-10T04:35:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M6.Scheduler.TestRecurringMeeting.AddCancelRecurringMeeting()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="AddCancelRecurringMeeting()[pri:1, instance:com.bms.M6.Scheduler.TestRecurringMeeting@548e7350]" name="AddCancelRecurringMeeting" duration-ms="77673" started-at="2018-05-10T04:35:07Z" finished-at="2018-05-10T04:36:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddCancelRecurringMeeting -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M6.Scheduler.TestRecurringMeeting@548e7350]" name="afterMethod" is-config="true" duration-ms="293" started-at="2018-05-10T04:36:25Z" finished-at="2018-05-10T04:36:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddCancelRecurringMeeting status=SUCCESS method=TestRecurringMeeting.AddCancelRecurringMeeting()[pri:1, instance:com.bms.M6.Scheduler.TestRecurringMeeting@548e7350] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M6.Scheduler.TestRecurringMeeting@548e7350]" name="closedrivers" is-config="true" duration-ms="5229" started-at="2018-05-10T04:36:25Z" finished-at="2018-05-10T04:36:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M6.Scheduler.TestRecurringMeeting -->
      <class name="com.bms.M11.EMR.TestPhraseLibraries">
        <test-method status="SKIP" signature="TestAssessmentPhraseLibraries()[pri:1, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="TestAssessmentPhraseLibraries" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestAssessmentPhraseLibraries -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestDiagnosticObservationLibrary()[pri:2, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="TestDiagnosticObservationLibrary" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestPhraseLibraries.TestAssessmentPhraseLibraries" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestPhraseLibraries.TestDiagnosticObservationLibrary()[pri:2, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestPhraseLibraries.TestDiagnosticObservationLibrary()[pri:2, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestDiagnosticObservationLibrary -->
        <test-method status="SKIP" signature="TestExaminationCommentsLibrary()[pri:3, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="TestExaminationCommentsLibrary" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestPhraseLibraries.TestAssessmentPhraseLibraries" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestPhraseLibraries.TestExaminationCommentsLibrary()[pri:3, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestPhraseLibraries.TestExaminationCommentsLibrary()[pri:3, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestExaminationCommentsLibrary -->
        <test-method status="SKIP" signature="TestFLRJustificationLibrary()[pri:4, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="TestFLRJustificationLibrary" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestPhraseLibraries.TestAssessmentPhraseLibraries" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestPhraseLibraries.TestFLRJustificationLibrary()[pri:4, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestPhraseLibraries.TestFLRJustificationLibrary()[pri:4, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestFLRJustificationLibrary -->
        <test-method status="SKIP" signature="TestMedicationCommentsLibrary()[pri:6, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="TestMedicationCommentsLibrary" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestPhraseLibraries.TestAssessmentPhraseLibraries" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestPhraseLibraries.TestMedicationCommentsLibrary()[pri:6, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestPhraseLibraries.TestMedicationCommentsLibrary()[pri:6, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMedicationCommentsLibrary -->
        <test-method status="SKIP" signature="TestPositivePrognosisLibrary()[pri:10, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="TestPositivePrognosisLibrary" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestPhraseLibraries.TestAssessmentPhraseLibraries" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestPhraseLibraries.TestPositivePrognosisLibrary()[pri:10, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestPhraseLibraries.TestPositivePrognosisLibrary()[pri:10, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestPositivePrognosisLibrary -->
        <test-method status="SKIP" signature="TestNonVisitLibrary()[pri:8, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="TestNonVisitLibrary" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestPhraseLibraries.TestAssessmentPhraseLibraries" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestPhraseLibraries.TestNonVisitLibrary()[pri:8, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestPhraseLibraries.TestNonVisitLibrary()[pri:8, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNonVisitLibrary -->
        <test-method status="SKIP" signature="TestGoalsLibrary()[pri:5, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="TestGoalsLibrary" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestPhraseLibraries.TestAssessmentPhraseLibraries" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestPhraseLibraries.TestGoalsLibrary()[pri:5, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestPhraseLibraries.TestGoalsLibrary()[pri:5, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestGoalsLibrary -->
        <test-method status="SKIP" signature="TestPatientReportLibrary()[pri:9, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="TestPatientReportLibrary" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestPhraseLibraries.TestAssessmentPhraseLibraries" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestPhraseLibraries.TestPatientReportLibrary()[pri:9, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestPhraseLibraries.TestPatientReportLibrary()[pri:9, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestPatientReportLibrary -->
        <test-method status="SKIP" signature="TestNegativePrognosisLibrary()[pri:7, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="TestNegativePrognosisLibrary" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestPhraseLibraries.TestAssessmentPhraseLibraries" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestPhraseLibraries.TestNegativePrognosisLibrary()[pri:7, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestPhraseLibraries.TestNegativePrognosisLibrary()[pri:7, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestNegativePrognosisLibrary -->
        <test-method status="SKIP" signature="TestRehabPotentialComments()[pri:11, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="TestRehabPotentialComments" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestPhraseLibraries.TestAssessmentPhraseLibraries" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestPhraseLibraries.TestRehabPotentialComments()[pri:11, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestPhraseLibraries.TestRehabPotentialComments()[pri:11, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestRehabPotentialComments -->
        <test-method status="SKIP" signature="TestThreapyCapExceptionJustification()[pri:12, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="TestThreapyCapExceptionJustification" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestPhraseLibraries.TestAssessmentPhraseLibraries" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestPhraseLibraries.TestThreapyCapExceptionJustification()[pri:12, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestPhraseLibraries.TestThreapyCapExceptionJustification()[pri:12, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestThreapyCapExceptionJustification -->
        <test-method status="SKIP" signature="TestTreatmentPlanLibrary()[pri:14, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="TestTreatmentPlanLibrary" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestPhraseLibraries.TestAssessmentPhraseLibraries" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestPhraseLibraries.TestTreatmentPlanLibrary()[pri:14, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestPhraseLibraries.TestTreatmentPlanLibrary()[pri:14, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestTreatmentPlanLibrary -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="TestProblemsLibraries()[pri:13, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89]" name="TestProblemsLibraries" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestPhraseLibraries.TestAssessmentPhraseLibraries" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestPhraseLibraries.TestProblemsLibraries()[pri:13, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestPhraseLibraries.TestProblemsLibraries()[pri:13, instance:com.bms.M11.EMR.TestPhraseLibraries@56ac3a89] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestProblemsLibraries -->
      </class> <!-- com.bms.M11.EMR.TestPhraseLibraries -->
      <class name="com.bms.M3.Cases.TestCaseForInjuryType">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M3.Cases.TestCaseForInjuryType@370736d9]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M3.Cases.TestCaseForInjuryType@370736d9]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M3.Cases.TestCaseForInjuryType@370736d9]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M3.Cases.TestCaseForInjuryType@370736d9]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="InjuryTypeAsOther()[pri:1, instance:com.bms.M3.Cases.TestCaseForInjuryType@370736d9]" name="InjuryTypeAsOther" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InjuryTypeAsOther -->
      </class> <!-- com.bms.M3.Cases.TestCaseForInjuryType -->
      <class name="com.bms.M2.Patient.TestPatientAdd">
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M2.Patient.TestPatientAdd@5abca1e0]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testQuickAddPatient()[pri:1, instance:com.bms.M2.Patient.TestPatientAdd@5abca1e0]" name="testQuickAddPatient" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testQuickAddPatient -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M2.Patient.TestPatientAdd@5abca1e0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M2.Patient.TestPatientAdd@5abca1e0]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M2.Patient.TestPatientAdd@5abca1e0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M2.Patient.TestPatientAdd@5abca1e0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M2.Patient.TestPatientAdd@5abca1e0]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M2.Patient.TestPatientAdd@5abca1e0]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M2.Patient.TestPatientAdd@5abca1e0]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M2.Patient.TestPatientAdd@5abca1e0]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="testaddpatientMandatoryfields()[pri:4, instance:com.bms.M2.Patient.TestPatientAdd@5abca1e0]" name="testaddpatientMandatoryfields" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testaddpatientMandatoryfields -->
        <test-method status="SKIP" signature="testAddPatientAllfields()[pri:2, instance:com.bms.M2.Patient.TestPatientAdd@5abca1e0]" name="testAddPatientAllfields" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddPatientAllfields -->
        <test-method status="SKIP" signature="testAddDuplicatePatient()[pri:3, instance:com.bms.M2.Patient.TestPatientAdd@5abca1e0]" name="testAddDuplicatePatient" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddDuplicatePatient -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M2.Patient.TestPatientAdd@5abca1e0]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M2.Patient.TestPatientAdd -->
      <class name="com.bms.M8.FLR.TestFLRTabNotDisplayRTProvider">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M8.FLR.TestFLRTabNotDisplayRTProvider@3c0ecd4b]" name="setup" is-config="true" duration-ms="4844" started-at="2018-05-10T07:53:35Z" finished-at="2018-05-10T07:53:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M8.FLR.TestFLRTabNotDisplayRTProvider@3c0ecd4b]" name="setup" is-config="true" duration-ms="32372" started-at="2018-05-10T07:53:40Z" finished-at="2018-05-10T07:54:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M8.FLR.TestFLRTabNotDisplayRTProvider.FLR_ProviderRT() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="FLR_ProviderRT()[pri:1, instance:com.bms.M8.FLR.TestFLRTabNotDisplayRTProvider@3c0ecd4b]" name="FLR_ProviderRT" duration-ms="355956" started-at="2018-05-10T07:54:12Z" finished-at="2018-05-10T08:00:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FLR_ProviderRT -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M8.FLR.TestFLRTabNotDisplayRTProvider@3c0ecd4b]" name="afterMethod" is-config="true" duration-ms="172" started-at="2018-05-10T08:00:08Z" finished-at="2018-05-10T08:00:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FLR_ProviderRT status=SUCCESS method=TestFLRTabNotDisplayRTProvider.FLR_ProviderRT()[pri:1, instance:com.bms.M8.FLR.TestFLRTabNotDisplayRTProvider@3c0ecd4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M8.FLR.TestFLRTabNotDisplayRTProvider@3c0ecd4b]" name="setup" is-config="true" duration-ms="18514" started-at="2018-05-10T08:00:08Z" finished-at="2018-05-10T08:00:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M8.FLR.TestFLRTabNotDisplayRTProvider.FLR_ProviderPT() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="FLR_ProviderPT()[pri:2, instance:com.bms.M8.FLR.TestFLRTabNotDisplayRTProvider@3c0ecd4b]" name="FLR_ProviderPT" duration-ms="148375" started-at="2018-05-10T08:00:27Z" finished-at="2018-05-10T08:02:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FLR_ProviderPT -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M8.FLR.TestFLRTabNotDisplayRTProvider@3c0ecd4b]" name="afterMethod" is-config="true" duration-ms="297" started-at="2018-05-10T08:02:55Z" finished-at="2018-05-10T08:02:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FLR_ProviderPT status=SUCCESS method=TestFLRTabNotDisplayRTProvider.FLR_ProviderPT()[pri:2, instance:com.bms.M8.FLR.TestFLRTabNotDisplayRTProvider@3c0ecd4b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M8.FLR.TestFLRTabNotDisplayRTProvider@3c0ecd4b]" name="closedrivers" is-config="true" duration-ms="5599" started-at="2018-05-10T08:02:56Z" finished-at="2018-05-10T08:03:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M8.FLR.TestFLRTabNotDisplayRTProvider -->
      <class name="com.bms.M8.FLR.TestHardStopMessagevalidation">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M8.FLR.TestHardStopMessagevalidation@589838eb]" name="setup" is-config="true" duration-ms="4783" started-at="2018-05-10T09:33:07Z" finished-at="2018-05-10T09:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="FAIL" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M8.FLR.TestHardStopMessagevalidation@589838eb]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:33:12Z" finished-at="2018-05-10T09:33:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M8.FLR.TestHardStopMessagevalidation.TestHardStopWith97001() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=54.0.2840.71)
  (Driver info: chromedriver=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 2 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir5316_25283}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: f76d9bb79c28112942eea75e6a76b9a6]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=54.0.2840.71)
  (Driver info: chromedriver=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 2 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'C40GF55BMS', ip: '10.131.168.50', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '1.8.0_91'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.25.426923 (0390b88869384d6eb0d5d09729679f934aab9eed), userDataDir=C:\Users\AJAY~1.KUM\AppData\Local\Temp\scoped_dir5316_25283}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=54.0.2840.71, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true}]
Session ID: f76d9bb79c28112942eea75e6a76b9a6
	at sun.reflect.GeneratedConstructorAccessor56.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:701)
	at org.openqa.selenium.remote.RemoteWebDriver.getCurrentUrl(RemoteWebDriver.java:326)
	at TestBase.TestSetUp.setup(TestSetUp.java:374)
	at sun.reflect.GeneratedMethodAccessor32.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:589)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestHardStopWith97001()[pri:1, instance:com.bms.M8.FLR.TestHardStopMessagevalidation@589838eb]" name="TestHardStopWith97001" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestHardStopWith97001 -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M8.FLR.TestHardStopMessagevalidation@589838eb]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M8.FLR.TestHardStopMessagevalidation@589838eb]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M8.FLR.TestHardStopMessagevalidation -->
      <class name="com.bms.M4.Insurances.TestAddPatientWithPrimaryinsurence">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M4.Insurances.TestAddPatientWithPrimaryinsurence@18eed359]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M4.Insurances.TestAddPatientWithPrimaryinsurence@18eed359]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M4.Insurances.TestAddPatientWithPrimaryinsurence@18eed359]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M4.Insurances.TestAddPatientWithPrimaryinsurence@18eed359]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestDataScriptInsurances()[pri:1, instance:com.bms.M4.Insurances.TestAddPatientWithPrimaryinsurence@18eed359]" name="TestDataScriptInsurances" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestDataScriptInsurances -->
      </class> <!-- com.bms.M4.Insurances.TestAddPatientWithPrimaryinsurence -->
      <class name="com.bms.M13.Task.TestManageMyAccount">
        <test-method status="SKIP" signature="TestIvalidOldPassword()[pri:2, instance:com.bms.M13.Task.TestManageMyAccount@60c6f5b]" name="TestIvalidOldPassword" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestIvalidOldPassword -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M13.Task.TestManageMyAccount@60c6f5b]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestManageMyAccount@60c6f5b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestManageMyAccount@60c6f5b]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestManageMyAccount@60c6f5b]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestManageMyAccount@60c6f5b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestMandatoryFields()[pri:1, instance:com.bms.M13.Task.TestManageMyAccount@60c6f5b]" name="TestMandatoryFields" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestMandatoryFields -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestManageMyAccount@60c6f5b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M13.Task.TestManageMyAccount@60c6f5b]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="TestIvalidnewAndConfirmPasswordIssame()[pri:3, instance:com.bms.M13.Task.TestManageMyAccount@60c6f5b]" name="TestIvalidnewAndConfirmPasswordIssame" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestIvalidnewAndConfirmPasswordIssame -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestManageMyAccount@60c6f5b]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M13.Task.TestManageMyAccount@60c6f5b]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="TestDefaultView()[pri:4, instance:com.bms.M13.Task.TestManageMyAccount@60c6f5b]" name="TestDefaultView" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TestDefaultView -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M13.Task.TestManageMyAccount@60c6f5b]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M13.Task.TestManageMyAccount -->
      <class name="com.bms.M7.APage.TestAPageCurrentStatusList">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d]" name="setup" is-config="true" duration-ms="4708" started-at="2018-05-10T06:28:35Z" finished-at="2018-05-10T06:28:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d]" name="setup" is-config="true" duration-ms="30402" started-at="2018-05-10T06:28:40Z" finished-at="2018-05-10T06:29:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPageCurrentStatusList.G_CodeValidation_SLP() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="G_CodeValidation_SLP()[pri:1, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d]" name="G_CodeValidation_SLP" duration-ms="145606" started-at="2018-05-10T06:29:10Z" finished-at="2018-05-10T06:31:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- G_CodeValidation_SLP -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d]" name="afterMethod" is-config="true" duration-ms="188" started-at="2018-05-10T06:31:36Z" finished-at="2018-05-10T06:31:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=G_CodeValidation_SLP status=SUCCESS method=TestAPageCurrentStatusList.G_CodeValidation_SLP()[pri:1, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d]" name="setup" is-config="true" duration-ms="19214" started-at="2018-05-10T06:31:36Z" finished-at="2018-05-10T06:31:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPageCurrentStatusList.FLR_tab_Validation_RT() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="FLR_tab_Validation_RT()[pri:2, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d]" name="FLR_tab_Validation_RT" duration-ms="167570" started-at="2018-05-10T06:31:55Z" finished-at="2018-05-10T06:34:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FLR_tab_Validation_RT -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d]" name="afterMethod" is-config="true" duration-ms="183" started-at="2018-05-10T06:34:43Z" finished-at="2018-05-10T06:34:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FLR_tab_Validation_RT status=SUCCESS method=TestAPageCurrentStatusList.FLR_tab_Validation_RT()[pri:2, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d]" name="setup" is-config="true" duration-ms="17915" started-at="2018-05-10T06:34:43Z" finished-at="2018-05-10T06:35:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPageCurrentStatusList.GoalstatusValidation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="GoalstatusValidation()[pri:3, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d]" name="GoalstatusValidation" duration-ms="159478" started-at="2018-05-10T06:35:01Z" finished-at="2018-05-10T06:37:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GoalstatusValidation -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d]" name="afterMethod" is-config="true" duration-ms="204" started-at="2018-05-10T06:37:40Z" finished-at="2018-05-10T06:37:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=GoalstatusValidation status=SUCCESS method=TestAPageCurrentStatusList.GoalstatusValidation()[pri:3, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d]" name="setup" is-config="true" duration-ms="24348" started-at="2018-05-10T06:37:41Z" finished-at="2018-05-10T06:38:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M7.APage.TestAPageCurrentStatusList.SeverityModifierDropdDownListValidation() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="SeverityModifierDropdDownListValidation()[pri:4, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d]" name="SeverityModifierDropdDownListValidation" duration-ms="163861" started-at="2018-05-10T06:38:05Z" finished-at="2018-05-10T06:40:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SeverityModifierDropdDownListValidation -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d]" name="afterMethod" is-config="true" duration-ms="175" started-at="2018-05-10T06:40:49Z" finished-at="2018-05-10T06:40:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=SeverityModifierDropdDownListValidation status=SUCCESS method=TestAPageCurrentStatusList.SeverityModifierDropdDownListValidation()[pri:4, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M7.APage.TestAPageCurrentStatusList@4dfa3a9d]" name="closedrivers" is-config="true" duration-ms="5694" started-at="2018-05-10T06:40:49Z" finished-at="2018-05-10T06:40:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M7.APage.TestAPageCurrentStatusList -->
      <class name="com.bms.M9.AddCharges.TestDeafults">
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M9.AddCharges.TestDeafults@59ec2012]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="DefaultSelectionWithCase()[pri:1, instance:com.bms.M9.AddCharges.TestDeafults@59ec2012]" name="DefaultSelectionWithCase" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DefaultSelectionWithCase -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M9.AddCharges.TestDeafults@59ec2012]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M9.AddCharges.TestDeafults@59ec2012]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M9.AddCharges.TestDeafults@59ec2012]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M9.AddCharges.TestDeafults -->
      <class name="com.bms.M8.FLR.TestCreateCompleteNote">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.bms.M8.FLR.TestCreateCompleteNote@57fffcd7]" name="setup" is-config="true" duration-ms="4739" started-at="2018-05-10T07:08:37Z" finished-at="2018-05-10T07:08:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M8.FLR.TestCreateCompleteNote@57fffcd7]" name="setup" is-config="true" duration-ms="31872" started-at="2018-05-10T07:08:42Z" finished-at="2018-05-10T07:09:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.bms.M8.FLR.TestCreateCompleteNote.CreateCompleteNote() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="CreateCompleteNote()[pri:1, instance:com.bms.M8.FLR.TestCreateCompleteNote@57fffcd7]" name="CreateCompleteNote" duration-ms="164311" started-at="2018-05-10T07:09:14Z" finished-at="2018-05-10T07:11:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateCompleteNote -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M8.FLR.TestCreateCompleteNote@57fffcd7]" name="afterMethod" is-config="true" duration-ms="199" started-at="2018-05-10T07:11:58Z" finished-at="2018-05-10T07:11:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CreateCompleteNote status=SUCCESS method=TestCreateCompleteNote.CreateCompleteNote()[pri:1, instance:com.bms.M8.FLR.TestCreateCompleteNote@57fffcd7] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="closedrivers()[pri:0, instance:com.bms.M8.FLR.TestCreateCompleteNote@57fffcd7]" name="closedrivers" is-config="true" duration-ms="5596" started-at="2018-05-10T07:11:58Z" finished-at="2018-05-10T07:12:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M8.FLR.TestCreateCompleteNote -->
      <class name="com.bms.M11.EMR.TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@192b07fd]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@192b07fd]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@192b07fd]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="DONOTAlowNonClinicalStafToFinalizeVisitNotes()[pri:1, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@192b07fd]" name="DONOTAlowNonClinicalStafToFinalizeVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DONOTAlowNonClinicalStafToFinalizeVisitNotes -->
        <test-method status="SKIP" signature="AllowNonclinicalstaffToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@192b07fd]" name="AllowNonclinicalstaffToFinalizNonVisitDischargenotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked.DONOTAlowNonClinicalStafToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked.AllowNonclinicalstaffToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@192b07fd] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked.AllowNonclinicalstaffToFinalizNonVisitDischargenotes()[pri:3, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@192b07fd] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowNonclinicalstaffToFinalizNonVisitDischargenotes -->
        <test-method status="SKIP" signature="AllowNonClinicalStaffToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@192b07fd]" name="AllowNonClinicalStaffToFINALIZENOnVisitNotes" duration-ms="0" started-at="2018-05-10T09:45:16Z" depends-on-methods="com.bms.M11.EMR.TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked.DONOTAlowNonClinicalStafToFinalizeVisitNotes" finished-at="2018-05-10T09:45:16Z">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked.AllowNonClinicalStaffToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@192b07fd] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked.AllowNonClinicalStaffToFINALIZENOnVisitNotes()[pri:2, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@192b07fd] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1037)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:178)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:92)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.maven.surefire.util.ReflectionUtils.invokeMethodWithArray2(ReflectionUtils.java:208)
	at org.apache.maven.surefire.booter.ProviderFactory$ProviderProxy.invoke(ProviderFactory.java:159)
	at org.apache.maven.surefire.booter.ProviderFactory.invokeProvider(ProviderFactory.java:87)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:95)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AllowNonClinicalStaffToFINALIZENOnVisitNotes -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M11.EMR.TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked@192b07fd]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
      </class> <!-- com.bms.M11.EMR.TestNonClinicalStaffWithInSuranceClassUnCheckedAndClinicalSetupUnChecked -->
      <class name="com.bms.M14.PQRS.TestPQRSHardstop_2">
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.bms.M14.PQRS.TestPQRSHardstop_2@52a86356]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.bms.M14.PQRS.TestPQRSHardstop_2@52a86356]" name="afterMethod" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="SKIP" signature="closedrivers()[pri:0, instance:com.bms.M14.PQRS.TestPQRSHardstop_2@52a86356]" name="closedrivers" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- closedrivers -->
        <test-method status="SKIP" signature="PQRS_HardStop_ViewPastData_64()[pri:1, instance:com.bms.M14.PQRS.TestPQRSHardstop_2@52a86356]" name="PQRS_HardStop_ViewPastData_64" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PQRS_HardStop_ViewPastData_64 -->
        <test-method status="SKIP" signature="setup(java.lang.reflect.Method)[pri:0, instance:com.bms.M14.PQRS.TestPQRSHardstop_2@52a86356]" name="setup" is-config="true" duration-ms="0" started-at="2018-05-10T09:45:16Z" finished-at="2018-05-10T09:45:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
      </class> <!-- com.bms.M14.PQRS.TestPQRSHardstop_2 -->
    </test> <!-- Testchrome -->
  </suite> <!-- Suite -->
</testng-results>
